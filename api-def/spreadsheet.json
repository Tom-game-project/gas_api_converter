{
  "service_name": "spreadsheet",
  "url": "https://developers.google.com/apps-script/reference/spreadsheet",
  "classes": [
    {
      "name": "Enum AutoFillSeries",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/auto-fill-series",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DEFAULT_SERIES",
          "description": "Default. Auto-filling with this setting results in the empty cells in the expanded range being\nfilled with increments of the existing values."
        },
        {
          "name": "ALTERNATE_SERIES",
          "description": "Auto-filling with this setting results in the empty cells in the expanded range being filled\nwith copies of the existing values."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class Banding",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to copy this banding to."
            }
          ],
          "name": "copyTo(range)",
          "description": "Copies this banding to another range.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getFirstColumnColorObject()",
          "description": "Returns the first alternating column color in the banding, ornullif no color is set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getFirstRowColorObject()",
          "description": "Returns the first alternating row color, ornullif no color is set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getFooterColumnColorObject()",
          "description": "Returns the color of the last column in the banding, ornullif no color is set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getFooterRowColorObject()",
          "description": "Returns the last row color in the banding, ornullif no color is set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getHeaderColumnColorObject()",
          "description": "Returns the color of the first column in the banding, ornullif no color is set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getHeaderRowColorObject()",
          "description": "Returns the color of the header row ornullif no color is set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getRange()",
          "description": "Returns the range for this banding.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getSecondColumnColorObject()",
          "description": "Returns the second alternating column color in the banding, ornullif no color is set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getSecondRowColorObject()",
          "description": "Returns the second alternating row color, ornullif no color is set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes this banding.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The color code in CSS notation (such as'#ffffff'or'white'), ornullto clear the color."
            }
          ],
          "name": "setFirstColumnColor(color)",
          "description": "Sets the first column color that is alternating.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The new first alternating column color in the banding; setting tonullclears the color."
            }
          ],
          "name": "setFirstColumnColorObject(color)",
          "description": "Sets the first alternating column color in the banding.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The color code in CSS notation (such as'#ffffff'or'white'), ornullto clear the color."
            }
          ],
          "name": "setFirstRowColor(color)",
          "description": "Sets the first row color that is alternating.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The new first alternating color in the banding; setting tonullclears the\n    color."
            }
          ],
          "name": "setFirstRowColorObject(color)",
          "description": "Sets the first alternating row color in the banding.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The color code in CSS notation (such as'#ffffff'or'white'), ornullto clear the color."
            }
          ],
          "name": "setFooterColumnColor(color)",
          "description": "Sets the color of the last column.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The new color of the last column in the banding; setting tonullclears\n    the color."
            }
          ],
          "name": "setFooterColumnColorObject(color)",
          "description": "Sets the color of the last column in the banding.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The color code in CSS notation (such as'#ffffff'or'white'), ornullto clear the color."
            }
          ],
          "name": "setFooterRowColor(color)",
          "description": "Sets the color of the last row.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The new footer row color; setting tonullclears the color."
            }
          ],
          "name": "setFooterRowColorObject(color)",
          "description": "Sets the color of the footer row in the banding.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The color code in CSS notation (such as'#ffffff'or'white'), ornullto clear the color."
            }
          ],
          "name": "setHeaderColumnColor(color)",
          "description": "Sets the color of the header column.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The new header column color; setting tonullclears the color."
            }
          ],
          "name": "setHeaderColumnColorObject(color)",
          "description": "Sets the color of the header column.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The color code in CSS notation (such as'#ffffff'or'white'), ornullto clear the color."
            }
          ],
          "name": "setHeaderRowColor(color)",
          "description": "Sets the color of the header row.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The new header row color; setting tonullclears the color."
            }
          ],
          "name": "setHeaderRowColorObject(color)",
          "description": "Sets the color of the header row.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The new range for this banding."
            }
          ],
          "name": "setRange(range)",
          "description": "Sets the range for this banding.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The color code in CSS notation (such as'#ffffff'or'white'), ornullto clear the color."
            }
          ],
          "name": "setSecondColumnColor(color)",
          "description": "Sets the second column color that is alternating.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The new second alternating column color in the banding; setting tonullclears the color."
            }
          ],
          "name": "setSecondColumnColorObject(color)",
          "description": "Sets the second alternating column color in the banding.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The color code in CSS notation (such as'#ffffff'or'white'), ornullto clear the color."
            }
          ],
          "name": "setSecondRowColor(color)",
          "description": "Sets the second row color that is alternating.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The new second alternating color in the banding; setting tonullclears\n    the color."
            }
          ],
          "name": "setSecondRowColorObject(color)",
          "description": "Sets the second alternating color in the banding.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getFirstColumnColor()",
          "description": "Deprecated.Replaced bygetFirstColumnColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFirstRowColor()",
          "description": "Deprecated.Replaced bygetFirstRowColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFooterColumnColor()",
          "description": "Deprecated.Replaced bygetFooterColumnColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFooterRowColor()",
          "description": "Deprecated.Replaced bygetFooterRowColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHeaderColumnColor()",
          "description": "Deprecated.Replaced bygetHeaderColumnColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHeaderRowColor()",
          "description": "Deprecated.Replaced bygetHeaderRowColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSecondColumnColor()",
          "description": "Deprecated.Replaced bygetSecondColumnColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSecondRowColor()",
          "description": "Deprecated.Replaced bygetSecondRowColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum BandingTheme",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding-theme",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "LIGHT_GREY",
          "description": "A light grey banding theme."
        },
        {
          "name": "CYAN",
          "description": "A cyan banding theme."
        },
        {
          "name": "GREEN",
          "description": "A green banding theme."
        },
        {
          "name": "YELLOW",
          "description": "A yellow banding theme."
        },
        {
          "name": "ORANGE",
          "description": "An orange banding theme."
        },
        {
          "name": "BLUE",
          "description": "A blue banding theme."
        },
        {
          "name": "TEAL",
          "description": "A teal banding theme."
        },
        {
          "name": "GREY",
          "description": "A grey banding theme."
        },
        {
          "name": "BROWN",
          "description": "A brown banding theme."
        },
        {
          "name": "LIGHT_GREEN",
          "description": "A light green banding theme."
        },
        {
          "name": "INDIGO",
          "description": "An indigo banding theme."
        },
        {
          "name": "PINK",
          "description": "A pink banding theme."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class BigQueryDataSourceSpec",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/big-query-data-source-spec",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "copy()",
          "description": "Creates aDataSourceSpecBuilderbased on this data source's settings.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec-builder"
          }
        },
        {
          "parameters": [],
          "name": "getDatasetId()",
          "description": "Gets the BigQuery dataset ID.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getParameters()",
          "description": "Gets the parameters of the data source.",
          "return_type": {
            "name": "DataSourceParameter[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter"
          }
        },
        {
          "parameters": [],
          "name": "getProjectId()",
          "description": "Gets the billing project ID.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getRawQuery()",
          "description": "Gets the raw query string.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getTableId()",
          "description": "Gets the BigQuery table ID.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getTableProjectId()",
          "description": "Gets the BigQuery project ID for the table.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getType()",
          "description": "Gets the type of the data source.",
          "return_type": {
            "name": "DataSourceType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-type"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class BigQueryDataSourceSpecBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/big-query-data-source-spec-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds a data source specification from the settings in this builder. Must useas...()to specify a data source type before building.",
          "return_type": {
            "name": "DataSourceSpec",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec"
          }
        },
        {
          "parameters": [],
          "name": "copy()",
          "description": "Creates aDataSourceSpecBuilderbased on this data source's settings.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec-builder"
          }
        },
        {
          "parameters": [],
          "name": "getDatasetId()",
          "description": "Gets the BigQuery dataset ID.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getParameters()",
          "description": "Gets the parameters of the data source.",
          "return_type": {
            "name": "DataSourceParameter[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter"
          }
        },
        {
          "parameters": [],
          "name": "getProjectId()",
          "description": "Gets the billing project ID.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getRawQuery()",
          "description": "Gets the raw query string.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getTableId()",
          "description": "Gets the BigQuery table ID.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getTableProjectId()",
          "description": "Gets the BigQuery project ID for the table.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getType()",
          "description": "Gets the type of the data source.",
          "return_type": {
            "name": "DataSourceType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-type"
          }
        },
        {
          "parameters": [],
          "name": "removeAllParameters()",
          "description": "Removes all the parameters.",
          "return_type": {
            "name": "BigQueryDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "parameterName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the parameter to remove."
            }
          ],
          "name": "removeParameter(parameterName)",
          "description": "Removes the specified parameter.",
          "return_type": {
            "name": "BigQueryDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "datasetId",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The ID of the dataset."
            }
          ],
          "name": "setDatasetId(datasetId)",
          "description": "Sets the BigQuery dataset ID.",
          "return_type": {
            "name": "BigQueryDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "parameterName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The parameter name."
            },
            {
              "name": "sourceCell",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The source cell, as specified in A1 notation."
            }
          ],
          "name": "setParameterFromCell(parameterName, sourceCell)",
          "description": "Adds a parameter, or if the parameter with the name exists, updates its source cell for data\nsource spec builders of typeDataSourceType.BIGQUERY.",
          "return_type": {
            "name": "BigQueryDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "projectId",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The ID of the billing project."
            }
          ],
          "name": "setProjectId(projectId)",
          "description": "Sets the billing BigQuery project ID.",
          "return_type": {
            "name": "BigQueryDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rawQuery",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The raw query string."
            }
          ],
          "name": "setRawQuery(rawQuery)",
          "description": "Sets the raw query string.",
          "return_type": {
            "name": "BigQueryDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "tableId",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The ID of the table."
            }
          ],
          "name": "setTableId(tableId)",
          "description": "Sets the BigQuery table ID.",
          "return_type": {
            "name": "BigQueryDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "projectId",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The project ID of the BigQuery table."
            }
          ],
          "name": "setTableProjectId(projectId)",
          "description": "Sets the BigQuery project ID for the table.",
          "return_type": {
            "name": "BigQueryDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class BooleanCondition",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getBackgroundObject()",
          "description": "Gets the background color for this boolean condition. Returnsnullif not set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getBold()",
          "description": "Returnstrueif this boolean condition bolds the text and returnsfalseif this\nboolean condition removes bolding from the text. Returnsnullif bolding is unaffected.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaType()",
          "description": "Gets the rule's criteria type as defined in theBooleanCriteriaenum. To get the\narguments for the criteria, usegetCriteriaValues(). To use these values to create or\nmodify a conditional formatting rule, seeConditionalFormatRuleBuilder.withCriteria(criteria, args).",
          "return_type": {
            "name": "BooleanCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-criteria"
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaValues()",
          "description": "Gets an array of arguments for the rule's criteria. To get the criteria type, usegetCriteriaType(). To use these values to create or modify a conditional formatting rule, seeConditionalFormatRuleBuilder.withCriteria(criteria, args).",
          "return_type": {
            "name": "Object[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontColorObject()",
          "description": "Gets the font color for this boolean condition. Returnsnullif not set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getItalic()",
          "description": "Returnstrueif this boolean condition italicises the text and returnsfalseif\nthis boolean condition removes italics from the text. Returnsnullif italics are\nunaffected.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getStrikethrough()",
          "description": "Returnstrueif this boolean condition strikes through the text and returnsfalseif this boolean condition removes strikethrough from the text. Returnsnullif\nstrikethrough is unaffected.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getUnderline()",
          "description": "Returnstrueif this boolean condition underlines the text and returnsfalseif\nthis boolean condition removes underlining from the text. Returnsnullif underlining\nis unaffected.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getBackground()",
          "description": "Deprecated.Replaced bygetBackgroundObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontColor()",
          "description": "Deprecated.Replaced bygetFontColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum BooleanCriteria",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-criteria",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "CELL_EMPTY",
          "description": "The criteria is met when a cell is empty."
        },
        {
          "name": "CELL_NOT_EMPTY",
          "description": "The criteria is met when a cell is not empty."
        },
        {
          "name": "DATE_AFTER",
          "description": "The criteria is met when a date is after the given value."
        },
        {
          "name": "DATE_BEFORE",
          "description": "The criteria is met when a date is before the given value."
        },
        {
          "name": "DATE_EQUAL_TO",
          "description": "The criteria is met when a date is equal to the given value."
        },
        {
          "name": "DATE_NOT_EQUAL_TO",
          "description": "The criteria is met when a date is not equal to the given value."
        },
        {
          "name": "DATE_AFTER_RELATIVE",
          "description": "The criteria is met when a date is after the relative date value."
        },
        {
          "name": "DATE_BEFORE_RELATIVE",
          "description": "The criteria is met when a date is before the relative date value."
        },
        {
          "name": "DATE_EQUAL_TO_RELATIVE",
          "description": "The criteria is met when a date is equal to the relative date value."
        },
        {
          "name": "NUMBER_BETWEEN",
          "description": "The criteria is met when a number that is between the given values."
        },
        {
          "name": "NUMBER_EQUAL_TO",
          "description": "The criteria is met when a number that is equal to the given value."
        },
        {
          "name": "NUMBER_GREATER_THAN",
          "description": "The criteria is met when a number that is greater than the given value."
        },
        {
          "name": "NUMBER_GREATER_THAN_OR_EQUAL_TO",
          "description": "The criteria is met when a number that is greater than or equal to the given value."
        },
        {
          "name": "NUMBER_LESS_THAN",
          "description": "The criteria is met when a number that is less than the given value."
        },
        {
          "name": "NUMBER_LESS_THAN_OR_EQUAL_TO",
          "description": "The criteria is met when a number that is less than or equal to the given value."
        },
        {
          "name": "NUMBER_NOT_BETWEEN",
          "description": "The criteria is met when a number that is not between the given values."
        },
        {
          "name": "NUMBER_NOT_EQUAL_TO",
          "description": "The criteria is met when a number that is not equal to the given value."
        },
        {
          "name": "TEXT_CONTAINS",
          "description": "The criteria is met when the input contains the given value."
        },
        {
          "name": "TEXT_DOES_NOT_CONTAIN",
          "description": "The criteria is met when the input does not contain the given value."
        },
        {
          "name": "TEXT_EQUAL_TO",
          "description": "The criteria is met when the input is equal to the given value."
        },
        {
          "name": "TEXT_NOT_EQUAL_TO",
          "description": "The criteria is met when the input is not equal to the given value."
        },
        {
          "name": "TEXT_STARTS_WITH",
          "description": "The criteria is met when the input begins with the given value."
        },
        {
          "name": "TEXT_ENDS_WITH",
          "description": "The criteria is met when the input ends with the given value."
        },
        {
          "name": "CUSTOM_FORMULA",
          "description": "The criteria is met when the input makes the given formula evaluate totrue."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum BorderStyle",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/border-style",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DOTTED",
          "description": "Dotted line borders."
        },
        {
          "name": "DASHED",
          "description": "Dashed line borders."
        },
        {
          "name": "SOLID",
          "description": "Thin solid line borders."
        },
        {
          "name": "SOLID_MEDIUM",
          "description": "Medium solid line borders."
        },
        {
          "name": "SOLID_THICK",
          "description": "Thick solid line borders."
        },
        {
          "name": "DOUBLE",
          "description": "Two solid line borders."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class CellImage",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/cell-image",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getAltTextDescription()",
          "description": "Returns the alt text description for this image.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getAltTextTitle()",
          "description": "Returns the alt text title for this image.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getContentUrl()",
          "description": "Returns a Google-hosted URL to the image. This URL is tagged with the account of the requester,\nso anyone with the URL effectively accesses the image as the original requester. Access to the\nimage might be lost if the spreadsheet's sharing settings change. The returned URL expires\nafter a short period of time.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "toBuilder()",
          "description": "Creates a cell image builder based on the current image properties. UseCellImageBuilder.setSourceUrl(url)to set the source URL of the new image. Then you can add it to a\ncell usingRange.setValue(value)orRange.setValues(values).",
          "return_type": {
            "name": "CellImageBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/cell-image-builder"
          }
        },
        {
          "parameters": [],
          "name": "getUrl()",
          "description": "Deprecated.For most newly inserted images, the source URL is unavailable.",
          "return_type": {
            "name": "String",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class CellImageBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/cell-image-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "build()",
          "description": "Creates the image value type needed to add an image to a cell. The image value is built from\nthe image properties added to the builder, such as the source URL.",
          "return_type": {
            "name": "CellImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/cell-image"
          }
        },
        {
          "parameters": [],
          "name": "getAltTextDescription()",
          "description": "Returns the alt text description for this image.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getAltTextTitle()",
          "description": "Returns the alt text title for this image.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getContentUrl()",
          "description": "Returns a Google-hosted URL to the image. This URL is tagged with the account of the requester,\nso anyone with the URL effectively accesses the image as the original requester. Access to the\nimage might be lost if the spreadsheet's sharing settings change. The returned URL expires\nafter a short period of time.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "description",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new alt text description for the image."
            }
          ],
          "name": "setAltTextDescription(description)",
          "description": "Sets the alt-text description for this image.",
          "return_type": {
            "name": "CellImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/cell-image"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new alt text title for the image."
            }
          ],
          "name": "setAltTextTitle(title)",
          "description": "Sets the alt text title for this image.",
          "return_type": {
            "name": "CellImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/cell-image"
          }
        },
        {
          "parameters": [
            {
              "name": "url",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The URL for the image."
            }
          ],
          "name": "setSourceUrl(url)",
          "description": "Sets the image source URL.",
          "return_type": {
            "name": "CellImageBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "toBuilder()",
          "description": "Creates a cell image builder based on the current image properties. UsesetSourceUrl(url)to set the source URL of the new image. Then you can add it to a\ncell usingRange.setValue(value)orRange.setValues(values).",
          "return_type": {
            "name": "CellImageBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getUrl()",
          "description": "Deprecated.For most newly inserted images, the source URL is unavailable.",
          "return_type": {
            "name": "String",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class Color",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/color",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "asRgbColor()",
          "description": "Converts this color to anRgbColor.",
          "return_type": {
            "name": "RgbColor",
            "url": "https://developers.google.com/apps-script/reference/base/rgb-color.html"
          }
        },
        {
          "parameters": [],
          "name": "asThemeColor()",
          "description": "Converts this color to aThemeColor.",
          "return_type": {
            "name": "ThemeColor",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color"
          }
        },
        {
          "parameters": [],
          "name": "getColorType()",
          "description": "Get the type of this color.",
          "return_type": {
            "name": "ColorType",
            "url": "https://developers.google.com/apps-script/reference/base/color-type.html"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class ColorBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/color-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "asRgbColor()",
          "description": "Converts this color to anRgbColor.",
          "return_type": {
            "name": "RgbColor",
            "url": "https://developers.google.com/apps-script/reference/base/rgb-color.html"
          }
        },
        {
          "parameters": [],
          "name": "asThemeColor()",
          "description": "Converts this color to aThemeColor.",
          "return_type": {
            "name": "ThemeColor",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Creates a color object from the settings supplied to the builder.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getColorType()",
          "description": "Get the type of this color.",
          "return_type": {
            "name": "ColorType",
            "url": "https://developers.google.com/apps-script/reference/base/color-type.html"
          }
        },
        {
          "parameters": [
            {
              "name": "cssString",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The RGB color in CSS notation (such as '#ffffff')."
            }
          ],
          "name": "setRgbColor(cssString)",
          "description": "Sets as RGB color.",
          "return_type": {
            "name": "ColorBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "themeColorType",
              "type": {
                "name": "ThemeColorType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color-type"
              },
              "description": "The theme color type."
            }
          ],
          "name": "setThemeColor(themeColorType)",
          "description": "Sets as theme color.",
          "return_type": {
            "name": "ColorBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class ConditionalFormatRule",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "copy()",
          "description": "Returns a rule builder preset with this rule's settings.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder"
          }
        },
        {
          "parameters": [],
          "name": "getBooleanCondition()",
          "description": "Retrieves the rule'sBooleanConditioninformation if this rule uses\nboolean condition criteria. Otherwise returnsnull.",
          "return_type": {
            "name": "BooleanCondition",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition"
          }
        },
        {
          "parameters": [],
          "name": "getGradientCondition()",
          "description": "Retrieves the rule'sGradientConditioninformation, if this rule\nuses gradient condition criteria. Otherwise returnsnull.",
          "return_type": {
            "name": "GradientCondition",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Retrieves the ranges to which this conditional format rule is applied.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class ConditionalFormatRuleBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "build()",
          "description": "Constructs a conditional format rule from the settings applied to the builder.",
          "return_type": {
            "name": "ConditionalFormatRule",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule"
          }
        },
        {
          "parameters": [],
          "name": "copy()",
          "description": "Returns a rule builder preset with this rule's settings.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getBooleanCondition()",
          "description": "Retrieves the rule'sBooleanConditioninformation if this rule uses\nboolean condition criteria. Otherwise returnsnull.",
          "return_type": {
            "name": "BooleanCondition",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition"
          }
        },
        {
          "parameters": [],
          "name": "getGradientCondition()",
          "description": "Retrieves the rule'sGradientConditioninformation, if this rule\nuses gradient condition criteria. Otherwise returnsnull.",
          "return_type": {
            "name": "GradientCondition",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Retrieves the ranges to which this conditional format rule is applied.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The desired color ornullto clear."
            }
          ],
          "name": "setBackground(color)",
          "description": "Sets the background color for the conditional format rule's format. Passing innullremoves the background color format setting from the rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The desired color object ornullto clear."
            }
          ],
          "name": "setBackgroundObject(color)",
          "description": "Sets the background color for the conditional format rule's format. Passing innullremoves the background color format setting from the rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "bold",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not the text should be bolded if the format condition is met;nullremoves this setting."
            }
          ],
          "name": "setBold(bold)",
          "description": "Sets text bolding for the conditional format rule's format. Ifboldistrue,\nthe rule bolds text if the condition is met; iffalse, the rule removes any existing\nbolding if the condition is met. Passing innullremoves the bold format setting from\nthe rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The desired color ornullto clear."
            }
          ],
          "name": "setFontColor(color)",
          "description": "Sets the font color for the conditional format rule's format. Passing innullremoves\nthe font color format setting from the rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The desired color object ornullto clear."
            }
          ],
          "name": "setFontColorObject(color)",
          "description": "Sets the font color for the conditional format rule's format. Passing innullremoves\nthe font color format setting from the rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The maxpoint color to set."
            }
          ],
          "name": "setGradientMaxpoint(color)",
          "description": "Clears the conditional format rule's gradient maxpoint value, and instead uses the maximum\nvalue in the rule's ranges. Also sets the gradient's maxpoint color to the input color.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The maxpoint color object to set."
            }
          ],
          "name": "setGradientMaxpointObject(color)",
          "description": "Clears the conditional format rule's gradient maxpoint value, and instead uses the maximum\nvalue in the rule's ranges. Also sets the gradient's maxpoint color to the input color.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The maxpoint color to set."
            },
            {
              "name": "type",
              "type": {
                "name": "InterpolationType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type"
              },
              "description": "The maxpoint interpolation type to set."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The maxpoint value to set."
            }
          ],
          "name": "setGradientMaxpointObjectWithValue(color, type, value)",
          "description": "Sets the conditional format rule's gradient maxpoint fields.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The maxpoint color to set."
            },
            {
              "name": "type",
              "type": {
                "name": "InterpolationType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type"
              },
              "description": "The maxpoint interpolation type to set."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The maxpoint value to set."
            }
          ],
          "name": "setGradientMaxpointWithValue(color, type, value)",
          "description": "Sets the conditional format rule's gradient maxpoint fields.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The midpoint color to set."
            },
            {
              "name": "type",
              "type": {
                "name": "InterpolationType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type"
              },
              "description": "The midpoint interpolation type to set ornullto clear."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The midpoint value to set."
            }
          ],
          "name": "setGradientMidpointObjectWithValue(color, type, value)",
          "description": "Sets the conditional format rule's gradient midpoint fields. Clears all of the midpoint fields\nif the passed in interpolation type isnull.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The midpoint color to set."
            },
            {
              "name": "type",
              "type": {
                "name": "InterpolationType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type"
              },
              "description": "The midpoint interpolation type to set ornullto clear."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The midpoint value to set."
            }
          ],
          "name": "setGradientMidpointWithValue(color, type, value)",
          "description": "Sets the conditional format rule's gradient midpoint fields. Clears all of the midpoint fields\nif the passed in interpolation type isnull.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The minpoint color to set."
            }
          ],
          "name": "setGradientMinpoint(color)",
          "description": "Clears the conditional format rule's gradient minpoint value, and instead uses the minimum\nvalue in the rule's ranges. Also sets the gradient's minpoint color to the input color.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The minpoint color object to set."
            }
          ],
          "name": "setGradientMinpointObject(color)",
          "description": "Clears the conditional format rule's gradient minpoint value, and instead uses the minimum\nvalue in the rule's ranges. Also sets the gradient's minpoint color to the input color.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The minpoint color to set."
            },
            {
              "name": "type",
              "type": {
                "name": "InterpolationType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type"
              },
              "description": "The minpoint interpolation type to set."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The minpoint value to set."
            }
          ],
          "name": "setGradientMinpointObjectWithValue(color, type, value)",
          "description": "Sets the conditional format rule's gradient minpoint fields.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The minpoint color to set."
            },
            {
              "name": "type",
              "type": {
                "name": "InterpolationType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type"
              },
              "description": "The minpoint interpolation type to set."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The minpoint value to set."
            }
          ],
          "name": "setGradientMinpointWithValue(color, type, value)",
          "description": "Sets the conditional format rule's gradient minpoint fields.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "italic",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not the text should be italicised if the format condition is met;nullremoves this setting."
            }
          ],
          "name": "setItalic(italic)",
          "description": "Sets text italics for the conditional format rule's format. Ifitalicistrue,\nthe rule italicises text if the condition is met; iffalse, the rule removes any\nexisting italicization if the condition is met. Passing innullremoves the italic\nformat setting from the rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "ranges",
              "type": {
                "name": "Range[]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The ranges to which this conditional format rule is applied."
            }
          ],
          "name": "setRanges(ranges)",
          "description": "Sets one or more ranges to which this conditional format rule is applied. This operation\nreplaces any existing ranges. Setting an empty array clears any existing ranges. A rule must\nhave at least one range.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strikethrough",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not the text should be struckthrough if the format condition is\n    met;nullremoves this setting."
            }
          ],
          "name": "setStrikethrough(strikethrough)",
          "description": "Sets text strikethrough for the conditional format rule's format. Ifstrikethroughistrue, the rule strikesthrough text if the condition is met; iffalse, the rule\nremoves any existing strikethrough formatting if the condition is met. Passing innullremoves the strikethrough format setting from the rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "underline",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not the text should be underlined if the format condition is met;nullremoves this setting."
            }
          ],
          "name": "setUnderline(underline)",
          "description": "Sets text underlining for the conditional format rule's format. Ifunderlineistrue, the rule underlines text if the condition is met; iffalse, the rule removes any\nexisting underlines if the condition is met. Passing innullremoves the underline\nformat setting from the rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "whenCellEmpty()",
          "description": "Sets the conditional format rule to trigger when the cell is empty.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "whenCellNotEmpty()",
          "description": "Sets the conditional format rule to trigger when the cell is not empty.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The latest date."
            }
          ],
          "name": "whenDateAfter(date)",
          "description": "Sets the conditional format rule to trigger when a date is after the given value.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "RelativeDate",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/relative-date"
              },
              "description": "The latest date relative to the date type selected."
            }
          ],
          "name": "whenDateAfter(date)",
          "description": "Sets the conditional format rule to trigger when a date is after the given relative date.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The earliest unacceptable date."
            }
          ],
          "name": "whenDateBefore(date)",
          "description": "Sets the conditional format rule to trigger when a date is before the given date.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "RelativeDate",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/relative-date"
              },
              "description": "The latest date relative to the date type selected."
            }
          ],
          "name": "whenDateBefore(date)",
          "description": "Sets the conditional format rule to trigger when a date is before the given relative date.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The sole acceptable date."
            }
          ],
          "name": "whenDateEqualTo(date)",
          "description": "Sets the conditional format rule to trigger when a date is equal to the given date.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "RelativeDate",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/relative-date"
              },
              "description": "The latest date relative to the date type selected."
            }
          ],
          "name": "whenDateEqualTo(date)",
          "description": "Sets the conditional format rule to trigger when a date is equal to the given relative date.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A custom formula that evaluates totrueif the input is valid."
            }
          ],
          "name": "whenFormulaSatisfied(formula)",
          "description": "Sets the conditional format rule to trigger when that the given formula evaluates totrue.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest acceptable value."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest acceptable value."
            }
          ],
          "name": "whenNumberBetween(start, end)",
          "description": "Sets the conditional format rule to trigger when a number falls between, or is either of, two\nspecified values.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The sole acceptable value."
            }
          ],
          "name": "whenNumberEqualTo(number)",
          "description": "Sets the conditional format rule to trigger when a number is equal to the given value.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest unacceptable value."
            }
          ],
          "name": "whenNumberGreaterThan(number)",
          "description": "Sets the conditional format rule to trigger when a number is greater than the given value.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest acceptable value."
            }
          ],
          "name": "whenNumberGreaterThanOrEqualTo(number)",
          "description": "Sets the conditional format rule to trigger when a number is greater than or equal to the given\nvalue.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest unacceptable value."
            }
          ],
          "name": "whenNumberLessThan(number)",
          "description": "Sets the conditional conditional format rule to trigger when a number less than the given\nvalue.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest acceptable value."
            }
          ],
          "name": "whenNumberLessThanOrEqualTo(number)",
          "description": "Sets the conditional format rule to trigger when a number less than or equal to the given\nvalue.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest unacceptable value."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest unacceptable value."
            }
          ],
          "name": "whenNumberNotBetween(start, end)",
          "description": "Sets the conditional format rule to trigger when a number does not fall between, and is neither\nof, two specified values.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The sole unacceptable value."
            }
          ],
          "name": "whenNumberNotEqualTo(number)",
          "description": "Sets the conditional format rule to trigger when a number is not equal to the given value.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value that the input must contain."
            }
          ],
          "name": "whenTextContains(text)",
          "description": "Sets the conditional format rule to trigger when that the input contains the given value.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value that the input must not contain."
            }
          ],
          "name": "whenTextDoesNotContain(text)",
          "description": "Sets the conditional format rule to trigger when that the input does not contain the given\nvalue.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "Text to compare against the end of the string."
            }
          ],
          "name": "whenTextEndsWith(text)",
          "description": "Sets the conditional format rule to trigger when that the input ends with the given value.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The sole acceptable value."
            }
          ],
          "name": "whenTextEqualTo(text)",
          "description": "Sets the conditional format rule to trigger when that the input is equal to the given value.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "Text to compare against the beginning of the string."
            }
          ],
          "name": "whenTextStartsWith(text)",
          "description": "Sets the conditional format rule to trigger when that the input starts with the given value.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "criteria",
              "type": {
                "name": "BooleanCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-criteria"
              },
              "description": "The type of conditional format criteria."
            },
            {
              "name": "args",
              "type": {
                "name": "Object[]",
                "url": null
              },
              "description": "An array of arguments appropriate to the criteria type; the number of arguments and\n    their type match the correspondingwhen...()method above."
            }
          ],
          "name": "withCriteria(criteria, args)",
          "description": "Sets the conditional format rule to criteria defined byBooleanCriteriavalues,\ntypically taken from thecriteriaandargumentsof an\nexisting rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class ContainerInfo",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getAnchorColumn()",
          "description": "The chart's left side is anchored in this column.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getAnchorRow()",
          "description": "The chart's top side is anchored in this row.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getOffsetX()",
          "description": "The chart's upper left hand corner is offset from the anchor column by this many pixels.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getOffsetY()",
          "description": "The chart's upper left hand corner is offset from the anchor row by this many pixels.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum CopyPasteType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/copy-paste-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "PASTE_NORMAL",
          "description": "Paste values, formulas, formats and merges."
        },
        {
          "name": "PASTE_NO_BORDERS",
          "description": "Paste values, formulas, formats and merges but without borders."
        },
        {
          "name": "PASTE_FORMAT",
          "description": "Paste the format only."
        },
        {
          "name": "PASTE_FORMULA",
          "description": "Paste the formulas only."
        },
        {
          "name": "PASTE_DATA_VALIDATION",
          "description": "Paste the data validation only."
        },
        {
          "name": "PASTE_VALUES",
          "description": "Paste the values ONLY without formats, formulas or merges."
        },
        {
          "name": "PASTE_CONDITIONAL_FORMATTING",
          "description": "Paste the color rules only."
        },
        {
          "name": "PASTE_COLUMN_WIDTHS",
          "description": "Paste the column widths only."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum DataExecutionErrorCode",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-error-code",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DATA_EXECUTION_ERROR_CODE_UNSUPPORTED",
          "description": "A data execution error code that is not supported in Apps Script."
        },
        {
          "name": "NONE",
          "description": "The data execution has no error."
        },
        {
          "name": "TIME_OUT",
          "description": "The data execution timed out. Please update the data sourcespecification."
        },
        {
          "name": "TOO_MANY_ROWS",
          "description": "The data execution returns more rows than the limit. Please update the data sourcespecification."
        },
        {
          "name": "TOO_MANY_COLUMNS",
          "description": "The data execution returns more columns than the limit. Please update the data sourcespecification."
        },
        {
          "name": "TOO_MANY_CELLS",
          "description": "The data execution returns more cells than the limit. Please update the data sourcespecification."
        },
        {
          "name": "ENGINE",
          "description": "Data execution engine error. UseDataExecutionStatus.getErrorMessage()for details."
        },
        {
          "name": "PARAMETER_INVALID",
          "description": "Invalid data execution parameter. The source cell must exist and contain only a number or text.\nPlease update the data sourcespecification."
        },
        {
          "name": "UNSUPPORTED_DATA_TYPE",
          "description": "The data execution returns unsupported data type. Please update the data sourcespecification.For BigQuery,ARRAYorSTRUCTtype is not supported."
        },
        {
          "name": "DUPLICATE_COLUMN_NAMES",
          "description": "The data execution returns duplicate column names. Please update the data sourcespecification."
        },
        {
          "name": "INTERRUPTED",
          "description": "The data execution is interrupted. Please refresh later."
        },
        {
          "name": "OTHER",
          "description": "Other errors."
        },
        {
          "name": "TOO_MANY_CHARS_PER_CELL",
          "description": "The data execution returns values that exceed the maximum characters allowed in a single cell.\nPlease update the data sourcespecification."
        },
        {
          "name": "DATA_NOT_FOUND",
          "description": "The database referenced by the data source is not found. Please update the data sourcespecification."
        },
        {
          "name": "PERMISSION_DENIED",
          "description": "The user does not have access to the database referenced by the data source. Please update the\ndata sourcespecificationor contact the owner of the billing\nproject to request access."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum DataExecutionState",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-state",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DATA_EXECUTION_STATE_UNSUPPORTED",
          "description": "A data execution state is not supported in Apps Script."
        },
        {
          "name": "RUNNING",
          "description": "The data execution has started and is running."
        },
        {
          "name": "SUCCESS",
          "description": "The data execution is completed and successful."
        },
        {
          "name": "ERROR",
          "description": "The data execution is completed and has errors."
        },
        {
          "name": "NOT_STARTED",
          "description": "The data execution has not started."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class DataExecutionStatus",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getErrorCode()",
          "description": "Gets the error code of the data execution.",
          "return_type": {
            "name": "DataExecutionErrorCode",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-error-code"
          }
        },
        {
          "parameters": [],
          "name": "getErrorMessage()",
          "description": "Gets the error message of the data execution. The message may be empty.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getExecutionState()",
          "description": "Gets the state of the data execution.",
          "return_type": {
            "name": "DataExecutionState",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-state"
          }
        },
        {
          "parameters": [],
          "name": "getLastExecutionTime()",
          "description": "Gets the time the last data execution completed regardless of the execution state.",
          "return_type": {
            "name": "Date",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getLastRefreshedTime()",
          "description": "Gets the time the data last successfully refreshed.",
          "return_type": {
            "name": "Date",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isTruncated()",
          "description": "Returnstrueif the data from last successful execution is truncated, orfalseotherwise.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSource",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "cancelAllLinkedDataSourceObjectRefreshes()",
          "description": "Cancels all currently running refreshes of data source objects linked to this data source.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the calculated column."
            },
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The calculated column formula."
            }
          ],
          "name": "createCalculatedColumn(name, formula)",
          "description": "Creates a calculated column. This method is only available for BigQuery data sources.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "createDataSourcePivotTableOnNewSheet()",
          "description": "Creates a data source pivot table from this data source in the first cell of a new sheet. As a\nside effect, makes the new sheet the active sheet.",
          "return_type": {
            "name": "DataSourcePivotTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-pivot-table"
          }
        },
        {
          "parameters": [],
          "name": "createDataSourceTableOnNewSheet()",
          "description": "Creates a data source table from this data source in the first cell of a new sheet. As a side\neffect, makes the new sheet the active sheet.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the calculated column to get."
            }
          ],
          "name": "getCalculatedColumnByName(columnName)",
          "description": "Returns the calculated column in the data source that matches the column name.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "getCalculatedColumns()",
          "description": "Returns all the calculated columns in the data source.",
          "return_type": {
            "name": "DataSourceColumn[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "getColumns()",
          "description": "Returns all the columns in the data source.",
          "return_type": {
            "name": "DataSourceColumn[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceSheets()",
          "description": "Returns the data source sheets associated with this data source.",
          "return_type": {
            "name": "DataSourceSheet[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet"
          }
        },
        {
          "parameters": [],
          "name": "getSpec()",
          "description": "Gets the data source specification.",
          "return_type": {
            "name": "DataSourceSpec",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec"
          }
        },
        {
          "parameters": [],
          "name": "refreshAllLinkedDataSourceObjects()",
          "description": "Refreshes all data source objects linked to the data source.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "spec",
              "type": {
                "name": "DataSourceSpec",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec"
              },
              "description": "The data source specification to update with."
            }
          ],
          "name": "updateSpec(spec)",
          "description": "Updates the data source specification and refreshes the data source objects linked with this\ndata source with the new specification.",
          "return_type": {
            "name": "DataSource",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "spec",
              "type": {
                "name": "DataSourceSpec",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec"
              },
              "description": "The data source specification to update with."
            },
            {
              "name": "refreshAllLinkedObjects",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, also refreshes all the data source objects\n    linked with this data source."
            }
          ],
          "name": "updateSpec(spec, refreshAllLinkedObjects)",
          "description": "Updates the data source specification and refreshes the linkeddata\nsource sheetswith the new specification.",
          "return_type": {
            "name": "DataSource",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "timeoutInSeconds",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The time to wait for data executions, in seconds. The maximum is 300\n    seconds."
            }
          ],
          "name": "waitForAllDataExecutionsCompletion(timeoutInSeconds)",
          "description": "Waits until all the current executions of the linked data source objects complete, timing out\nafter the provided number of seconds. Throws an exception if the executions are not completed\nwhen timing out, but does not cancel the data executions.",
          "return_type": {
            "name": "void",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceChart",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-chart",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "cancelDataRefresh()",
          "description": "Cancels the data refresh associated with this object if it's currently running.",
          "return_type": {
            "name": "DataSourceChart",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "forceRefreshData()",
          "description": "Refreshes the data of this object regardless of the current state. SeerefreshData()for\nmore details. If you want to cancel a currently running refresh of this object, seecancelDataRefresh().",
          "return_type": {
            "name": "DataSourceChart",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getDataSource()",
          "description": "Gets the data source the object is linked to.",
          "return_type": {
            "name": "DataSource",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source"
          }
        },
        {
          "parameters": [],
          "name": "getStatus()",
          "description": "Gets the data execution status of the object.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        },
        {
          "parameters": [],
          "name": "refreshData()",
          "description": "Refreshes the data of the object.",
          "return_type": {
            "name": "DataSourceChart",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "timeoutInSeconds",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The time to wait for data execution, in seconds. The maximum is 300\n    seconds."
            }
          ],
          "name": "waitForCompletion(timeoutInSeconds)",
          "description": "Waits until the current execution completes, timing out after the provided number of seconds.\nThrows an exception if the execution is not completed when timing out, but does not cancel the\ndata execution.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceColumn",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getDataSource()",
          "description": "Gets the data source associated with the data source column.",
          "return_type": {
            "name": "DataSource",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source"
          }
        },
        {
          "parameters": [],
          "name": "getFormula()",
          "description": "Gets the formula for the data source column. Returns an empty string if the data source column\nis not acalculated column.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getName()",
          "description": "Gets the name for the data source column.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "hasArrayDependency()",
          "description": "Returns whether the column has an array dependency.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isCalculatedColumn()",
          "description": "Returns whether the column is a calculated column.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes the data source column.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new formula."
            }
          ],
          "name": "setFormula(formula)",
          "description": "Sets the formula for the data source column.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name to set."
            }
          ],
          "name": "setName(name)",
          "description": "Sets the name of the data source column.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceFormula",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-formula",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "cancelDataRefresh()",
          "description": "Cancels the data refresh associated with this object if it's currently running.",
          "return_type": {
            "name": "DataSourceFormula",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "forceRefreshData()",
          "description": "Refreshes the data of this object regardless of the current state. SeerefreshData()for\nmore details. If you want to cancel a currently running refresh of this object, seecancelDataRefresh().",
          "return_type": {
            "name": "DataSourceFormula",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getAnchorCell()",
          "description": "Returns theRangerepresenting the cell where this data source formula is anchored.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getDataSource()",
          "description": "Gets the data source the object is linked to.",
          "return_type": {
            "name": "DataSource",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source"
          }
        },
        {
          "parameters": [],
          "name": "getDisplayValue()",
          "description": "Returns the display value of the data source formula.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFormula()",
          "description": "Returns the formula for this data source formula.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getStatus()",
          "description": "Gets the data execution status of the object.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        },
        {
          "parameters": [],
          "name": "refreshData()",
          "description": "Refreshes the data of the object.",
          "return_type": {
            "name": "DataSourceFormula",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new formula."
            }
          ],
          "name": "setFormula(formula)",
          "description": "Updates the formula.",
          "return_type": {
            "name": "DataSourceFormula",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "timeoutInSeconds",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The time to wait for data execution, in seconds. The maximum is 300\n    seconds."
            }
          ],
          "name": "waitForCompletion(timeoutInSeconds)",
          "description": "Waits until the current execution completes, timing out after the provided number of seconds.\nThrows an exception if the execution is not completed when timing out, but does not cancel the\ndata execution.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceParameter",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getName()",
          "description": "Gets the parameter name.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSourceCell()",
          "description": "Gets the source cell the parameter is valued based on, ornullif the parameter type is\nnotDataSourceParameterType.CELL.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getType()",
          "description": "Gets the parameter type.",
          "return_type": {
            "name": "DataSourceParameterType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter-type"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum DataSourceParameterType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DATA_SOURCE_PARAMETER_TYPE_UNSUPPORTED",
          "description": "A data source parameter type that is not supported in Apps Script."
        },
        {
          "name": "CELL",
          "description": "The data source parameter is valued based on a cell."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourcePivotTable",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-pivot-table",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The data source column name the pivot group is based on."
            }
          ],
          "name": "addColumnGroup(columnName)",
          "description": "Adds a new pivot column group based on the specified data source column.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The data source column name the filter is based on."
            },
            {
              "name": "filterCriteria",
              "type": {
                "name": "FilterCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
              },
              "description": "The criteria the filter uses."
            }
          ],
          "name": "addFilter(columnName, filterCriteria)",
          "description": "Adds a new filter based on the specified data source column with the specified filter criteria.",
          "return_type": {
            "name": "PivotFilter",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The data source column name the pivot value is based on."
            }
          ],
          "name": "addPivotValue(columnName)",
          "description": "Adds a new pivot value based on the specified data source column without any summarize\nfunction. For Looker measures only.",
          "return_type": {
            "name": "PivotValue",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The data source column name the pivot value is based on."
            },
            {
              "name": "summarizeFunction",
              "type": {
                "name": "PivotTableSummarizeFunction",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table-summarize-function"
              },
              "description": "The summarize function the pivot value uses."
            }
          ],
          "name": "addPivotValue(columnName, summarizeFunction)",
          "description": "Adds a new pivot value based on the specified data source column with the specified summarize\nfunction.",
          "return_type": {
            "name": "PivotValue",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The data source column name the pivot group is based on."
            }
          ],
          "name": "addRowGroup(columnName)",
          "description": "Adds a new pivot row group based on the specified data source column.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group"
          }
        },
        {
          "parameters": [],
          "name": "asPivotTable()",
          "description": "Returns the data source pivot table as a regular pivot table object.",
          "return_type": {
            "name": "PivotTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table"
          }
        },
        {
          "parameters": [],
          "name": "cancelDataRefresh()",
          "description": "Cancels the data refresh associated with this object if it's currently running.",
          "return_type": {
            "name": "DataSourcePivotTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "forceRefreshData()",
          "description": "Refreshes the data of this object regardless of the current state. SeerefreshData()for\nmore details. If you want to cancel a currently running refresh of this object, seecancelDataRefresh().",
          "return_type": {
            "name": "DataSourcePivotTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getDataSource()",
          "description": "Gets the data source the object is linked to.",
          "return_type": {
            "name": "DataSource",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source"
          }
        },
        {
          "parameters": [],
          "name": "getStatus()",
          "description": "Gets the data execution status of the object.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        },
        {
          "parameters": [],
          "name": "refreshData()",
          "description": "Refreshes the data of the object.",
          "return_type": {
            "name": "DataSourcePivotTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "timeoutInSeconds",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The time to wait for data execution, in seconds. The maximum is 300\n    seconds."
            }
          ],
          "name": "waitForCompletion(timeoutInSeconds)",
          "description": "Waits until the current execution completes, timing out after the provided number of seconds.\nThrows an exception if the execution is not completed when timing out, but does not cancel the\ndata execution.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceRefreshSchedule",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-refresh-schedule",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getFrequency()",
          "description": "Gets the refresh schedule frequency, which specifies how often and when to refresh.",
          "return_type": {
            "name": "DataSourceRefreshScheduleFrequency",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-refresh-schedule-frequency"
          }
        },
        {
          "parameters": [],
          "name": "getScope()",
          "description": "Gets the scope of this refresh schedule.",
          "return_type": {
            "name": "DataSourceRefreshScope",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-refresh-scope"
          }
        },
        {
          "parameters": [],
          "name": "getTimeIntervalOfNextRun()",
          "description": "Gets the time window of the next run of this refresh schedule. Only applies if this refresh\nschedule is enabled.",
          "return_type": {
            "name": "TimeInterval",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isEnabled()",
          "description": "Determines whether this refresh schedule is enabled.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceRefreshScheduleFrequency",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-refresh-schedule-frequency",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getDaysOfTheMonth()",
          "description": "Gets the days of the month as numbers (1-28) on which to refresh the data source. Only applies\nif frequency type is monthly.",
          "return_type": {
            "name": "Integer[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getDaysOfTheWeek()",
          "description": "Gets the days of the week on which to refresh the data source. Only applies if the frequency\ntype is weekly.",
          "return_type": {
            "name": "Weekday[]",
            "url": "https://developers.google.com/apps-script/reference/base/weekday.html"
          }
        },
        {
          "parameters": [],
          "name": "getFrequencyType()",
          "description": "Gets the frequency type.",
          "return_type": {
            "name": "FrequencyType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/frequency-type"
          }
        },
        {
          "parameters": [],
          "name": "getStartHour()",
          "description": "Gets the start hour (as a number 0-23) of the time interval during which the refresh schedule\nruns. For example, if the start hour is 13 and the time interval's duration is 4 hours, then\nthe data source is refreshed between 1 p.m. and 5 p.m. The hour is in the timezone of the\nspreadsheet.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum DataSourceRefreshScope",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-refresh-scope",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DATA_SOURCE_REFRESH_SCOPE_UNSUPPORTED",
          "description": "The data source refresh scope is unsupported."
        },
        {
          "name": "ALL_DATA_SOURCES",
          "description": "The refresh applies to all data sources in the spreadsheet."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceSheet",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the column to apply this filter to."
            },
            {
              "name": "filterCriteria",
              "type": {
                "name": "FilterCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
              },
              "description": "The filter criteria to apply."
            }
          ],
          "name": "addFilter(columnName, filterCriteria)",
          "description": "Adds a filter applied to the data source sheet.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asSheet()",
          "description": "Returns the data source sheet as a regular sheet object.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The column name."
            }
          ],
          "name": "autoResizeColumn(columnName)",
          "description": "Auto resizes the width of the specified column.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnNames",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "The list of column names to update."
            }
          ],
          "name": "autoResizeColumns(columnNames)",
          "description": "Auto resizes the width of the specified columns.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "cancelDataRefresh()",
          "description": "Cancels the data refresh associated with this object if it's currently running.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "forceRefreshData()",
          "description": "Refreshes the data of this object regardless of the current state. SeerefreshData()for\nmore details. If you want to cancel a currently running refresh of this object, seecancelDataRefresh().",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The column name."
            }
          ],
          "name": "getColumnWidth(columnName)",
          "description": "Returns the width of the specified column.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getDataSource()",
          "description": "Gets the data source the object is linked to.",
          "return_type": {
            "name": "DataSource",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source"
          }
        },
        {
          "parameters": [],
          "name": "getFilters()",
          "description": "Returns all filters applied to the data source sheet.",
          "return_type": {
            "name": "DataSourceSheetFilter[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet-filter"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The data source column name to fetch values for."
            }
          ],
          "name": "getSheetValues(columnName)",
          "description": "Returns all the values for the data source sheet for the provided column name.",
          "return_type": {
            "name": "Object[]",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The data source column name to fetch values for."
            },
            {
              "name": "startRow",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row position to start fetching values from."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to fetch."
            }
          ],
          "name": "getSheetValues(columnName, startRow, numRows)",
          "description": "Returns all the values for the data source sheet for the provided column name from the provided\nstart row (based-1) and up to the providednumRows.",
          "return_type": {
            "name": "Object[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSortSpecs()",
          "description": "Gets all the sort specs in the data source sheet.",
          "return_type": {
            "name": "SortSpec[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sort-spec"
          }
        },
        {
          "parameters": [],
          "name": "getStatus()",
          "description": "Gets the data execution status of the object.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        },
        {
          "parameters": [],
          "name": "refreshData()",
          "description": "Refreshes the data of the object.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the column to remove filters from."
            }
          ],
          "name": "removeFilters(columnName)",
          "description": "Removes all filters applied to the data source sheet column.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the column."
            }
          ],
          "name": "removeSortSpec(columnName)",
          "description": "Removes the sort spec on a column in the data source sheet.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The column name."
            },
            {
              "name": "width",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The new width for the column."
            }
          ],
          "name": "setColumnWidth(columnName, width)",
          "description": "Sets the width of the specified column.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnNames",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "The list of column names to update."
            },
            {
              "name": "width",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The new width for the columns."
            }
          ],
          "name": "setColumnWidths(columnNames, width)",
          "description": "Sets the width of the specified columns.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the column to sort."
            },
            {
              "name": "ascending",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, sort the column in ascending order; iffalse, sort\n    the column in descending order."
            }
          ],
          "name": "setSortSpec(columnName, ascending)",
          "description": "Sets the sort spec on a column in the data source sheet.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the column to sort."
            },
            {
              "name": "sortOrder",
              "type": {
                "name": "SortOrder",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sort-order"
              },
              "description": "The sort order."
            }
          ],
          "name": "setSortSpec(columnName, sortOrder)",
          "description": "Sets the sort spec on a column in the data source sheet.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "timeoutInSeconds",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The time to wait for data execution, in seconds. The maximum is 300\n    seconds."
            }
          ],
          "name": "waitForCompletion(timeoutInSeconds)",
          "description": "Waits until the current execution completes, timing out after the provided number of seconds.\nThrows an exception if the execution is not completed when timing out, but does not cancel the\ndata execution.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceSheetFilter",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet-filter",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getDataSourceColumn()",
          "description": "Returns the data source column this filter applies to.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceSheet()",
          "description": "Returns theDataSourceSheetthat this filter belongs to.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet"
          }
        },
        {
          "parameters": [],
          "name": "getFilterCriteria()",
          "description": "Returns the filter criteria for this filter.",
          "return_type": {
            "name": "FilterCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes this filter from the data source object.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "filterCriteria",
              "type": {
                "name": "FilterCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
              },
              "description": "The filter criteria to set."
            }
          ],
          "name": "setFilterCriteria(filterCriteria)",
          "description": "Sets the filter criteria for this filter.",
          "return_type": {
            "name": "DataSourceSheetFilter",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceSpec",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "asBigQuery()",
          "description": "Gets the spec for BigQuery data source.",
          "return_type": {
            "name": "BigQueryDataSourceSpec",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/big-query-data-source-spec"
          }
        },
        {
          "parameters": [],
          "name": "asLooker()",
          "description": "Gets the spec for Looker data source.",
          "return_type": {
            "name": "LookerDataSourceSpec",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/looker-data-source-spec"
          }
        },
        {
          "parameters": [],
          "name": "copy()",
          "description": "Creates aDataSourceSpecBuilderbased on this data source's settings.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec-builder"
          }
        },
        {
          "parameters": [],
          "name": "getParameters()",
          "description": "Gets the parameters of the data source.",
          "return_type": {
            "name": "DataSourceParameter[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter"
          }
        },
        {
          "parameters": [],
          "name": "getType()",
          "description": "Gets the type of the data source.",
          "return_type": {
            "name": "DataSourceType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-type"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceSpecBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "asBigQuery()",
          "description": "Gets the builder for BigQuery data source.",
          "return_type": {
            "name": "BigQueryDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/big-query-data-source-spec-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLooker()",
          "description": "Gets the builder for Looker data source.",
          "return_type": {
            "name": "LookerDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/looker-data-source-spec-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds a data source specification from the settings in this builder. Must useas...()to specify a data source type before building.",
          "return_type": {
            "name": "DataSourceSpec",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec"
          }
        },
        {
          "parameters": [],
          "name": "copy()",
          "description": "Creates aDataSourceSpecBuilderbased on this data source's settings.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getParameters()",
          "description": "Gets the parameters of the data source.",
          "return_type": {
            "name": "DataSourceParameter[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter"
          }
        },
        {
          "parameters": [],
          "name": "getType()",
          "description": "Gets the type of the data source.",
          "return_type": {
            "name": "DataSourceType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-type"
          }
        },
        {
          "parameters": [],
          "name": "removeAllParameters()",
          "description": "Removes all the parameters.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "parameterName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the parameter to remove."
            }
          ],
          "name": "removeParameter(parameterName)",
          "description": "Removes the specified parameter.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "parameterName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The parameter name."
            },
            {
              "name": "sourceCell",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The source cell, as specified in A1 notation."
            }
          ],
          "name": "setParameterFromCell(parameterName, sourceCell)",
          "description": "Adds a parameter, or if the parameter with the name exists, updates its source cell for data\nsource spec builders of typeDataSourceType.BIGQUERY.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceTable",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "columnNames",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "The list of the names of the columns to add."
            }
          ],
          "name": "addColumns(columnNames)",
          "description": "Adds columns to the data source table.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the column to apply this filter to."
            },
            {
              "name": "filterCriteria",
              "type": {
                "name": "FilterCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
              },
              "description": "The filter criteria to apply."
            }
          ],
          "name": "addFilter(columnName, filterCriteria)",
          "description": "Adds a filter applied to the data source table.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the column to sort."
            },
            {
              "name": "ascending",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, sort the column in ascending order; iffalse, sort\n    the column in descending order."
            }
          ],
          "name": "addSortSpec(columnName, ascending)",
          "description": "Adds a sort spec on a column in the data source table.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the column to sort."
            },
            {
              "name": "sortOrder",
              "type": {
                "name": "SortOrder",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sort-order"
              },
              "description": "The sort order."
            }
          ],
          "name": "addSortSpec(columnName, sortOrder)",
          "description": "Adds a sort spec on a column in the data source table.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "cancelDataRefresh()",
          "description": "Cancels the data refresh associated with this object if it's currently running.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "forceRefreshData()",
          "description": "Refreshes the data of this object regardless of the current state. SeerefreshData()for\nmore details. If you want to cancel a currently running refresh of this object, seecancelDataRefresh().",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getColumns()",
          "description": "Gets all the data source columns added to the data source table.",
          "return_type": {
            "name": "DataSourceTableColumn[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table-column"
          }
        },
        {
          "parameters": [],
          "name": "getDataSource()",
          "description": "Gets the data source the object is linked to.",
          "return_type": {
            "name": "DataSource",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source"
          }
        },
        {
          "parameters": [],
          "name": "getFilters()",
          "description": "Returns all filters applied to the data source table.",
          "return_type": {
            "name": "DataSourceTableFilter[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table-filter"
          }
        },
        {
          "parameters": [],
          "name": "getRange()",
          "description": "Gets theRangethis data source table spans.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getRowLimit()",
          "description": "Returns the row limit for the data source table.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSortSpecs()",
          "description": "Gets all the sort specs in the data source table.",
          "return_type": {
            "name": "SortSpec[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sort-spec"
          }
        },
        {
          "parameters": [],
          "name": "getStatus()",
          "description": "Gets the data execution status of the object.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        },
        {
          "parameters": [],
          "name": "isSyncingAllColumns()",
          "description": "Returns whether the data source table is syncing all columns in the associated data source.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "refreshData()",
          "description": "Refreshes the data of the object.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "removeAllColumns()",
          "description": "Removes all the columns in the data source table.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "removeAllSortSpecs()",
          "description": "Removes all the sort specs in the data source table.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rowLimit",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The new row limit for the data table. Ifnull, updates the table to use\n    the default row limit."
            }
          ],
          "name": "setRowLimit(rowLimit)",
          "description": "Updates the row limit for the data source table. If the provided row limit isnull,\nthen updates the data source table to use the default max row limit as in Google Sheets UI.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "syncAllColumns()",
          "description": "Sync all current and future columns in the associated data source to the data source table.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "timeoutInSeconds",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The time to wait for data execution, in seconds. The maximum is 300\n    seconds."
            }
          ],
          "name": "waitForCompletion(timeoutInSeconds)",
          "description": "Waits until the current execution completes, timing out after the provided number of seconds.\nThrows an exception if the execution is not completed when timing out, but does not cancel the\ndata execution.",
          "return_type": {
            "name": "DataExecutionStatus",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceTableColumn",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table-column",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getDataSourceColumn()",
          "description": "Gets the data source column.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes the column from theDataSourceTable.",
          "return_type": {
            "name": "void",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataSourceTableFilter",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table-filter",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getDataSourceColumn()",
          "description": "Returns the data source column this filter applies to.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceTable()",
          "description": "Returns theDataSourceTablethat this filter belongs to.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table"
          }
        },
        {
          "parameters": [],
          "name": "getFilterCriteria()",
          "description": "Returns the filter criteria for this filter.",
          "return_type": {
            "name": "FilterCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes this filter from the data source object.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "filterCriteria",
              "type": {
                "name": "FilterCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
              },
              "description": "The filter criteria to set."
            }
          ],
          "name": "setFilterCriteria(filterCriteria)",
          "description": "Sets the filter criteria for this filter.",
          "return_type": {
            "name": "DataSourceTableFilter",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum DataSourceType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DATA_SOURCE_TYPE_UNSUPPORTED",
          "description": "A data source type that is not supported in Apps Script."
        },
        {
          "name": "BIGQUERY",
          "description": "A BigQuery data source."
        },
        {
          "name": "LOOKER",
          "description": "A Looker data source."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class DataValidation",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "copy()",
          "description": "Creates a builder for a data validation rule based on this rule's settings.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder"
          }
        },
        {
          "parameters": [],
          "name": "getAllowInvalid()",
          "description": "Returnstrueif the rule shows a warning when input fails data validation, orfalseif it rejects the input entirely. The default for new data validation rules istrue.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaType()",
          "description": "Gets the rule's criteria type as defined in theDataValidationCriteriaenum. To get the\narguments for the criteria, usegetCriteriaValues(). To use these values to create or\nmodify a data validation rule, seeDataValidationBuilder.withCriteria(criteria, args).",
          "return_type": {
            "name": "DataValidationCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation-criteria"
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaValues()",
          "description": "Gets an array of arguments for the rule's criteria. To get the criteria type, usegetCriteriaType(). To use these values to create or modify a data validation rule, seeDataValidationBuilder.withCriteria(criteria, args).",
          "return_type": {
            "name": "Object[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHelpText()",
          "description": "Gets the rule's help text, ornullif no help text is set.",
          "return_type": {
            "name": "String",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DataValidationBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "build()",
          "description": "Constructs a data validation rule from the settings applied to the builder.",
          "return_type": {
            "name": "DataValidation",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation"
          }
        },
        {
          "parameters": [],
          "name": "copy()",
          "description": "Creates a builder for a data validation rule based on this rule's settings.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getAllowInvalid()",
          "description": "Returnstrueif the rule shows a warning when input fails data validation, orfalseif it rejects the input entirely. The default for new data validation rules istrue.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaType()",
          "description": "Gets the rule's criteria type as defined in theDataValidationCriteriaenum. To get the\narguments for the criteria, usegetCriteriaValues(). To use these values to create or\nmodify a data validation rule, seewithCriteria(criteria, args).",
          "return_type": {
            "name": "DataValidationCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation-criteria"
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaValues()",
          "description": "Gets an array of arguments for the rule's criteria. To get the criteria type, usegetCriteriaType(). To use these values to create or modify a data validation rule, seewithCriteria(criteria, args).",
          "return_type": {
            "name": "Object[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHelpText()",
          "description": "Gets the rule's help text, ornullif no help text is set.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "requireCheckbox()",
          "description": "Sets the data validation rule to require that the input is a boolean value; this value is\nrendered as a checkbox.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "checkedValue",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value assigned to a checked box."
            }
          ],
          "name": "requireCheckbox(checkedValue)",
          "description": "Sets the data validation rule to require that the input is the specified value or blank. When\nthe input matches the specified value the cell is rendered as a checked checkbox. When the\ninput is blank the cell is rendered as an unchecked checkbox.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "checkedValue",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value assigned to a checked box."
            },
            {
              "name": "uncheckedValue",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value assigned to an unchecked box."
            }
          ],
          "name": "requireCheckbox(checkedValue, uncheckedValue)",
          "description": "Sets the data validation rule to require that the input is one of the specified values. When\nthe input ischeckedValuethe cell is rendered as a checked checkbox. When the\ninput isuncheckedValuethe cell is rendered as an unchecked checkbox.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "requireDate()",
          "description": "Sets the data validation rule to require a date.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The latest unacceptable date."
            }
          ],
          "name": "requireDateAfter(date)",
          "description": "Sets the data validation rule to require a date after the given value. The time fields of theDateobject are ignored; only the day, month, and year fields are used.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The earliest unacceptable date."
            }
          ],
          "name": "requireDateBefore(date)",
          "description": "Sets the data validation rule to require a date before the given value. The time fields of theDateobject are ignored; only the day, month, and year fields are used.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The earliest acceptable date."
            },
            {
              "name": "end",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The latest acceptable date."
            }
          ],
          "name": "requireDateBetween(start, end)",
          "description": "Sets the data validation rule to require a date that falls between, or is either of, two\nspecified dates. The time fields of theDateobjects are ignored; only the day, month,\nand year fields are used.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The sole acceptable date."
            }
          ],
          "name": "requireDateEqualTo(date)",
          "description": "Sets the data validation rule to require a date equal to the given value. The time fields of\ntheDateobject are ignored; only the day, month, and year fields are used.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The earliest unacceptable date."
            },
            {
              "name": "end",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The latest unacceptable date."
            }
          ],
          "name": "requireDateNotBetween(start, end)",
          "description": "Sets the data validation rule to require a date that does not fall between, and is neither of,\ntwo specified dates. The time fields of theDateobjects are ignored; only the day,\nmonth, and year fields are used.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The earliest acceptable date."
            }
          ],
          "name": "requireDateOnOrAfter(date)",
          "description": "Sets the data validation rule to require a date on or after the given value. The time fields of\ntheDateobject are ignored; only the day, month, and year fields are used.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The latest acceptable date."
            }
          ],
          "name": "requireDateOnOrBefore(date)",
          "description": "Sets the data validation rule to require a date on or before the given value. The time fields\nof theDateobject are ignored; only the day, month, and year fields are used.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A custom formula that evaluates totrueif the input is valid."
            }
          ],
          "name": "requireFormulaSatisfied(formula)",
          "description": "Sets the data validation rule to require that the given formula evaluates totrue.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest acceptable value."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest acceptable value."
            }
          ],
          "name": "requireNumberBetween(start, end)",
          "description": "Sets the data validation rule to require a number that falls between, or is either of, two\nspecified numbers.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The sole acceptable value."
            }
          ],
          "name": "requireNumberEqualTo(number)",
          "description": "Sets the data validation rule to require a number equal to the given value.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest unacceptable value."
            }
          ],
          "name": "requireNumberGreaterThan(number)",
          "description": "Sets the data validation rule to require a number greater than the given value.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest acceptable value."
            }
          ],
          "name": "requireNumberGreaterThanOrEqualTo(number)",
          "description": "Sets the data validation rule to require a number greater than or equal to the given value.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest unacceptable value."
            }
          ],
          "name": "requireNumberLessThan(number)",
          "description": "Sets the data validation rule to require a number less than the given value.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest acceptable value."
            }
          ],
          "name": "requireNumberLessThanOrEqualTo(number)",
          "description": "Sets the data validation rule to require a number less than or equal to the given value.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest unacceptable value."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest unacceptable value."
            }
          ],
          "name": "requireNumberNotBetween(start, end)",
          "description": "Sets the data validation rule to require a number that does not fall between, and is neither\nof, two specified numbers.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The sole unacceptable value."
            }
          ],
          "name": "requireNumberNotEqualTo(number)",
          "description": "Sets the data validation rule to require a number not equal to the given value.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value that the input must contain."
            }
          ],
          "name": "requireTextContains(text)",
          "description": "Sets the data validation rule to require that the input contains the given value.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value that the input must not contain."
            }
          ],
          "name": "requireTextDoesNotContain(text)",
          "description": "Sets the data validation rule to require that the input does not contain the given value.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The sole acceptable value."
            }
          ],
          "name": "requireTextEqualTo(text)",
          "description": "Sets the data validation rule to require that the input is equal to the given value.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "requireTextIsEmail()",
          "description": "Sets the data validation rule to require that the input is in the form of an email address.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "requireTextIsUrl()",
          "description": "Sets the data validation rule to require that the input is in the form of a URL.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "values",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of acceptable values."
            }
          ],
          "name": "requireValueInList(values)",
          "description": "Sets the data validation rule to require that the input is equal to one of the given values.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "values",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of acceptable values."
            },
            {
              "name": "showDropdown",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueif the spreadsheet should show a dropdown menu for the values;falseif not."
            }
          ],
          "name": "requireValueInList(values, showDropdown)",
          "description": "Sets the data validation rule to require that the input is equal to one of the given values,\nwith an option to hide the dropdown menu.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "A range that contains the acceptable values."
            }
          ],
          "name": "requireValueInRange(range)",
          "description": "Sets the data validation rule to require that the input is equal to a value in the given range.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "A range that contains the acceptable values."
            },
            {
              "name": "showDropdown",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueif the spreadsheet should show a dropdown menu for the values;falseif not."
            }
          ],
          "name": "requireValueInRange(range, showDropdown)",
          "description": "Sets the data validation rule to require that the input is equal to a value in the given range,\nwith an option to hide the dropdown menu.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "allowInvalidData",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueif the rule should allow input that fails data validation;falseif not."
            }
          ],
          "name": "setAllowInvalid(allowInvalidData)",
          "description": "Sets whether to show a warning when input fails data validation or whether to reject the input\nentirely. The default for new data validation rules istrue.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "helpText",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The help text to set."
            }
          ],
          "name": "setHelpText(helpText)",
          "description": "Sets the help text that appears when the user hovers over the cell on which data validation is\nset.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "criteria",
              "type": {
                "name": "DataValidationCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation-criteria"
              },
              "description": "The type of data validation criteria."
            },
            {
              "name": "args",
              "type": {
                "name": "Object[]",
                "url": null
              },
              "description": "An array of arguments appropriate to the criteria type; the number of arguments and\n    their type match the correspondingrequire...()method above."
            }
          ],
          "name": "withCriteria(criteria, args)",
          "description": "Sets the data validation rule to criteria defined byDataValidationCriteriavalues,\ntypically taken from thecriteriaandargumentsof an existing rule.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum DataValidationCriteria",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation-criteria",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DATE_AFTER",
          "description": "Requires a date that is after the given value."
        },
        {
          "name": "DATE_BEFORE",
          "description": "Requires a date that is before the given value."
        },
        {
          "name": "DATE_BETWEEN",
          "description": "Requires a date that is between the given values."
        },
        {
          "name": "DATE_EQUAL_TO",
          "description": "Requires a date that is equal to the given value."
        },
        {
          "name": "DATE_IS_VALID_DATE",
          "description": "Requires a date."
        },
        {
          "name": "DATE_NOT_BETWEEN",
          "description": "Requires a date that is not between the given values."
        },
        {
          "name": "DATE_ON_OR_AFTER",
          "description": "Require a date that is on or after the given value."
        },
        {
          "name": "DATE_ON_OR_BEFORE",
          "description": "Requires a date that is on or before the given value."
        },
        {
          "name": "NUMBER_BETWEEN",
          "description": "Requires a number that is between the given values."
        },
        {
          "name": "NUMBER_EQUAL_TO",
          "description": "Requires a number that is equal to the given value."
        },
        {
          "name": "NUMBER_GREATER_THAN",
          "description": "Require a number that is greater than the given value."
        },
        {
          "name": "NUMBER_GREATER_THAN_OR_EQUAL_TO",
          "description": "Requires a number that is greater than or equal to the given value."
        },
        {
          "name": "NUMBER_LESS_THAN",
          "description": "Requires a number that is less than the given value."
        },
        {
          "name": "NUMBER_LESS_THAN_OR_EQUAL_TO",
          "description": "Requires a number that is less than or equal to the given value."
        },
        {
          "name": "NUMBER_NOT_BETWEEN",
          "description": "Requires a number that is not between the given values."
        },
        {
          "name": "NUMBER_NOT_EQUAL_TO",
          "description": "Requires a number that is not equal to the given value."
        },
        {
          "name": "TEXT_CONTAINS",
          "description": "Requires that the input contains the given value."
        },
        {
          "name": "TEXT_DOES_NOT_CONTAIN",
          "description": "Requires that the input does not contain the given value."
        },
        {
          "name": "TEXT_EQUAL_TO",
          "description": "Requires that the input is equal to the given value."
        },
        {
          "name": "TEXT_IS_VALID_EMAIL",
          "description": "Requires that the input is in the form of an email address."
        },
        {
          "name": "TEXT_IS_VALID_URL",
          "description": "Requires that the input is in the form of a URL."
        },
        {
          "name": "VALUE_IN_LIST",
          "description": "Requires that the input is equal to one of the given values."
        },
        {
          "name": "VALUE_IN_RANGE",
          "description": "Requires that the input is equal to a value in the given range."
        },
        {
          "name": "CUSTOM_FORMULA",
          "description": "Requires that the input makes the given formula evaluate totrue."
        },
        {
          "name": "CHECKBOX",
          "description": "Requires that the input is a custom value or a boolean; rendered as a checkbox."
        },
        {
          "name": "DATE_AFTER_RELATIVE",
          "description": "Requires a date that is after the relative date value."
        },
        {
          "name": "DATE_BEFORE_RELATIVE",
          "description": "Requires a date that is before the relative date value."
        },
        {
          "name": "DATE_EQUAL_TO_RELATIVE",
          "description": "Requires a date that is equal to the relative date value."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class DateTimeGroupingRule",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/date-time-grouping-rule",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getRuleType()",
          "description": "Gets the type of the date-time grouping rule.",
          "return_type": {
            "name": "DateTimeGroupingRuleType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/date-time-grouping-rule-type"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum DateTimeGroupingRuleType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/date-time-grouping-rule-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "UNSUPPORTED",
          "description": "A date-time grouping rule type that is not supported."
        },
        {
          "name": "SECOND",
          "description": "Group date-time by second, from 0 to 59."
        },
        {
          "name": "MINUTE",
          "description": "Group date-time by minute, from 0 to 59."
        },
        {
          "name": "HOUR",
          "description": "Group date-time by hour using a 24-hour system, from 0 to 23."
        },
        {
          "name": "HOUR_MINUTE",
          "description": "Group date-time by hour and minute using a 24-hour system, for example19:45."
        },
        {
          "name": "HOUR_MINUTE_AMPM",
          "description": "Group date-time by hour and minute using a 12-hour system, for example7:45 PM."
        },
        {
          "name": "DAY_OF_WEEK",
          "description": "Group date-time by day of week, for exampleSunday."
        },
        {
          "name": "DAY_OF_YEAR",
          "description": "Group date-time by day of year, from 1 to 366."
        },
        {
          "name": "DAY_OF_MONTH",
          "description": "Group date-time by day of month, from 1 to 31."
        },
        {
          "name": "DAY_MONTH",
          "description": "Group date-time by day and month, for example22-Nov."
        },
        {
          "name": "MONTH",
          "description": "Group date-time by month, for exampleNov."
        },
        {
          "name": "QUARTER",
          "description": "Group date-time by quarter, for example Q1 (which represents Jan-Mar)."
        },
        {
          "name": "YEAR",
          "description": "Group date-time by year, for example 2008."
        },
        {
          "name": "YEAR_MONTH",
          "description": "Group date-time by year and month, for example2008-Nov."
        },
        {
          "name": "YEAR_QUARTER",
          "description": "Group date-time by year and quarter, for example2008 Q4."
        },
        {
          "name": "YEAR_MONTH_DAY",
          "description": "Group date-time by year, month, and day, for example2008-11-22."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class DeveloperMetadata",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getId()",
          "description": "Returns the unique ID associated with this developer metadata.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getKey()",
          "description": "Returns the key associated with this developer metadata.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getLocation()",
          "description": "Returns the location of this developer metadata.",
          "return_type": {
            "name": "DeveloperMetadataLocation",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-location"
          }
        },
        {
          "parameters": [],
          "name": "getValue()",
          "description": "Returns the value associated with this developer metadata, ornullif this metadata has\nno value.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getVisibility()",
          "description": "Returns the visibility of this developer metadata.",
          "return_type": {
            "name": "DeveloperMetadataVisibility",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility"
          }
        },
        {
          "parameters": [
            {
              "name": "column",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range representing the column that is the new location for this developer\n    metadata."
            }
          ],
          "name": "moveToColumn(column)",
          "description": "Moves this developer metadata to the specified column. If the specified range does not\nrepresent a single column this throws an exception.",
          "return_type": {
            "name": "DeveloperMetadata",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "row",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range representing the row that is the new location for this developer metadata."
            }
          ],
          "name": "moveToRow(row)",
          "description": "Moves this developer metadata to the specified row. If the specified range does not represent a\nsingle row this throws an exception.",
          "return_type": {
            "name": "DeveloperMetadata",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "sheet",
              "type": {
                "name": "Sheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
              },
              "description": "The sheet that is the new location for this developer metata."
            }
          ],
          "name": "moveToSheet(sheet)",
          "description": "Moves this developer metadata to the specified sheet.",
          "return_type": {
            "name": "DeveloperMetadata",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "moveToSpreadsheet()",
          "description": "Moves this developer metadata to the top-level spreadsheet.",
          "return_type": {
            "name": "DeveloperMetadata",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Deletes this metadata.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new key to set for this metadata."
            }
          ],
          "name": "setKey(key)",
          "description": "Sets the key of this developer metadata to the specified value.",
          "return_type": {
            "name": "DeveloperMetadata",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new value to set for this metadata."
            }
          ],
          "name": "setValue(value)",
          "description": "Sets the value associated with this developer metadata to the specified value.",
          "return_type": {
            "name": "DeveloperMetadata",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "visibility",
              "type": {
                "name": "DeveloperMetadataVisibility",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility"
              },
              "description": "The new visibility to set for this metadata."
            }
          ],
          "name": "setVisibility(visibility)",
          "description": "Sets the visibility of this developer metadata to the specified visibility.",
          "return_type": {
            "name": "DeveloperMetadata",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DeveloperMetadataFinder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-finder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "find()",
          "description": "Executes this search and returns the matching metadata.",
          "return_type": {
            "name": "DeveloperMetadata[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata"
          }
        },
        {
          "parameters": [],
          "name": "onIntersectingLocations()",
          "description": "Configures the search to consider intersecting locations that have metadata. This option is\nonly valid for range-scoped searches.",
          "return_type": {
            "name": "DeveloperMetadataFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "id",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The ID to match when searching for metadata."
            }
          ],
          "name": "withId(id)",
          "description": "Limits this search to consider only metadata that match the specified ID.",
          "return_type": {
            "name": "DeveloperMetadataFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key to match when searching for metadata."
            }
          ],
          "name": "withKey(key)",
          "description": "Limits this search to consider only metadata that match the specified key.",
          "return_type": {
            "name": "DeveloperMetadataFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "locationType",
              "type": {
                "name": "DeveloperMetadataLocationType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-location-type"
              },
              "description": "The location type to match when searching for metadata."
            }
          ],
          "name": "withLocationType(locationType)",
          "description": "Limits this search to consider only metadata that match the specified location type.",
          "return_type": {
            "name": "DeveloperMetadataFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value to match when searching for metadata."
            }
          ],
          "name": "withValue(value)",
          "description": "Limits this search to consider only metadata that match the specified value.",
          "return_type": {
            "name": "DeveloperMetadataFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "visibility",
              "type": {
                "name": "DeveloperMetadataVisibility",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility"
              },
              "description": "The visibility to match when searching for metadata."
            }
          ],
          "name": "withVisibility(visibility)",
          "description": "Limits this search to consider only metadata that match the specified visibility.",
          "return_type": {
            "name": "DeveloperMetadataFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class DeveloperMetadataLocation",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-location",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getColumn()",
          "description": "Returns theRangefor the column location of this metadata, ornullif the\nlocation type is notDeveloperMetadataLocationType.COLUMN.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getLocationType()",
          "description": "Gets the type of location.",
          "return_type": {
            "name": "DeveloperMetadataLocationType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-location-type"
          }
        },
        {
          "parameters": [],
          "name": "getRow()",
          "description": "Returns theRangefor the row location of this metadata, ornullif the\nlocation type is notDeveloperMetadataLocationType.ROW.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getSheet()",
          "description": "Returns theSheetlocation of this metadata, ornullif the location type is\nnotDeveloperMetadataLocationType.SHEET.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "getSpreadsheet()",
          "description": "Returns theSpreadsheetlocation of this metadata, ornullif the location\ntype is notDeveloperMetadataLocationType.SPREADSHEET.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum DeveloperMetadataLocationType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-location-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "SPREADSHEET",
          "description": "The location type for developer metadata associated with the top-level spreadsheet."
        },
        {
          "name": "SHEET",
          "description": "The location type for developer metadata associated with a whole sheet."
        },
        {
          "name": "ROW",
          "description": "The location type for developer metadata associated with a row."
        },
        {
          "name": "COLUMN",
          "description": "The location type for developer metadata associated with a column."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum DeveloperMetadataVisibility",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DOCUMENT",
          "description": "Document-visible metadata is accessible from any developer project with access to the document."
        },
        {
          "name": "PROJECT",
          "description": "Project-visible metadata is only visible to and accessible by the developer project that\ncreated the metadata. Do not use project-visible developer metadata as a security mechanism or\nto store secrets. It can be exposed to users with view access to the document."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum Dimension",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/dimension",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "COLUMNS",
          "description": "The column (vertical) dimension."
        },
        {
          "name": "ROWS",
          "description": "The row (horizontal) dimension."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum Direction",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/direction",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "UP",
          "description": "The direction of decreasing row indices."
        },
        {
          "name": "DOWN",
          "description": "The direction of increasing row indices."
        },
        {
          "name": "PREVIOUS",
          "description": "The direction of decreasing column indices."
        },
        {
          "name": "NEXT",
          "description": "The direction of increasing column indices."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class Drawing",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/drawing",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getContainerInfo()",
          "description": "Gets information about where the drawing is positioned in the sheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getHeight()",
          "description": "Returns the actual height of this drawing in pixels.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getOnAction()",
          "description": "Returns the name of the macro attached to this drawing.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSheet()",
          "description": "Returns the sheet this drawing appears on.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "getWidth()",
          "description": "Returns the actual width of this drawing in pixels.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getZIndex()",
          "description": "Returns the z-index of this drawing.",
          "return_type": {
            "name": "Number",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Deletes this drawing from the spreadsheet. Any further operation on the drawing results in a\nscript error.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "height",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The desired height in pixels."
            }
          ],
          "name": "setHeight(height)",
          "description": "Sets the actual height of this drawing in pixels.",
          "return_type": {
            "name": "Drawing",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "macroName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "Name of the macro function."
            }
          ],
          "name": "setOnAction(macroName)",
          "description": "Assigns a macro function to this drawing.",
          "return_type": {
            "name": "Drawing",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The drawing's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The drawing's top side is anchored in this col."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The horizontal offset from the cell corner in pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The vertical offset from the cell corner in pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position where the drawing appears on the sheet. The anchor row and column position\nindices are 1-indexed.",
          "return_type": {
            "name": "Drawing",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "width",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The desired width in pixels."
            }
          ],
          "name": "setWidth(width)",
          "description": "Sets the actual width of this drawing in pixels.",
          "return_type": {
            "name": "Drawing",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "zIndex",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "Z-Index of this drawing."
            }
          ],
          "name": "setZIndex(zIndex)",
          "description": "Sets the z-index of this drawing.",
          "return_type": {
            "name": "Drawing",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedAreaChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "reverseCategories()",
          "description": "Reverses the drawing of series in the domain axis. For vertical-range charts (such as line,\narea or column charts), this means the horizontal axis is drawn from right to left. For\nhorizontal-range charts (such as bar charts), this means the vertical axis is drawn from top to\nbottom. For pie charts, this means the slices are drawn counterclockwise.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValue",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The CSS value for the color (such as\"blue\"or\"#00f\")."
            }
          ],
          "name": "setBackgroundColor(cssValue)",
          "description": "Sets the background color for the chart.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValues",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of color CSS values, such as[\"red\", \"#acf\"]. The nth element\n    in the array represents the color of the nth line in the chart."
            }
          ],
          "name": "setColors(cssValues)",
          "description": "Sets the colors for the lines in the chart.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "Position",
                "url": "https://developers.google.com/apps-script/reference/charts/position.html"
              },
              "description": "The position of the legend."
            }
          ],
          "name": "setLegendPosition(position)",
          "description": "Sets the position of the legend with respect to the chart. By default, there is no legend.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart legend."
            }
          ],
          "name": "setLegendTextStyle(textStyle)",
          "description": "Sets the text style of the chart legend.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "style",
              "type": {
                "name": "PointStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/point-style.html"
              },
              "description": "The style to use for points in the line."
            }
          ],
          "name": "setPointStyle(style)",
          "description": "Sets the style for points in the line. By default, points have no particular styles, and only\nthe line is visible.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the lowest grid line of the range axis."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the highest grid line of the range axis."
            }
          ],
          "name": "setRange(start, end)",
          "description": "Sets the range for the chart.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "setStacked()",
          "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated). By default,\nthere is no stacking.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "chartTitle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the chart title."
            }
          ],
          "name": "setTitle(chartTitle)",
          "description": "Sets the title of the chart. The title is displayed centered above the chart.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setTitleTextStyle(textStyle)",
          "description": "Sets the text style of the chart title.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTextStyle(textStyle)",
          "description": "Sets the horizontal axis text style.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the X-axis."
            }
          ],
          "name": "setXAxisTitle(title)",
          "description": "Adds a title to the horizontal axis. The title is centered and appears below the axis value\nlabels.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTitleTextStyle(textStyle)",
          "description": "Sets the horizontal axis title text style.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTextStyle(textStyle)",
          "description": "Sets the vertical axis text style.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the Y-axis."
            }
          ],
          "name": "setYAxisTitle(title)",
          "description": "Adds a title to the vertical axis. The title is centered and appears to the left of the value\nlabels.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTitleTextStyle(textStyle)",
          "description": "Sets the vertical axis title text style.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "useLogScale()",
          "description": "Makes the range axis into a logarithmic scale (requires all values to be positive). The range\naxis are the vertical axis for vertical charts (such as line, area, or column) and the\nhorizontal axis for horizontal charts (such as bar).",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedBarChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "reverseCategories()",
          "description": "Reverses the drawing of series in the domain axis. For vertical-range charts (such as line,\narea or column charts), this means the horizontal axis is drawn from right to left. For\nhorizontal-range charts (such as bar charts), this means the vertical axis is drawn from top to\nbottom. For pie charts, this means the slices are drawn counterclockwise.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "reverseDirection()",
          "description": "Reverses the direction in which the bars grow along the horizontal axis. By default, values\ngrow from left to right. Calling this method causes them to grow from right to left.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValue",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The CSS value for the color (such as\"blue\"or\"#00f\")."
            }
          ],
          "name": "setBackgroundColor(cssValue)",
          "description": "Sets the background color for the chart.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValues",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of color CSS values, such as[\"red\", \"#acf\"]. The nth element\n    in the array represents the color of the nth line in the chart."
            }
          ],
          "name": "setColors(cssValues)",
          "description": "Sets the colors for the lines in the chart.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "Position",
                "url": "https://developers.google.com/apps-script/reference/charts/position.html"
              },
              "description": "The position of the legend."
            }
          ],
          "name": "setLegendPosition(position)",
          "description": "Sets the position of the legend with respect to the chart. By default, there is no legend.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart legend."
            }
          ],
          "name": "setLegendTextStyle(textStyle)",
          "description": "Sets the text style of the chart legend.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the lowest grid line of the range axis."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the highest grid line of the range axis."
            }
          ],
          "name": "setRange(start, end)",
          "description": "Sets the range for the chart.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "setStacked()",
          "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated). By default,\nthere is no stacking.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "chartTitle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the chart title."
            }
          ],
          "name": "setTitle(chartTitle)",
          "description": "Sets the title of the chart. The title is displayed centered above the chart.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setTitleTextStyle(textStyle)",
          "description": "Sets the text style of the chart title.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTextStyle(textStyle)",
          "description": "Sets the horizontal axis text style.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the X-axis."
            }
          ],
          "name": "setXAxisTitle(title)",
          "description": "Adds a title to the horizontal axis. The title is centered and appears below the axis value\nlabels.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTitleTextStyle(textStyle)",
          "description": "Sets the horizontal axis title text style.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTextStyle(textStyle)",
          "description": "Sets the vertical axis text style.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the Y-axis."
            }
          ],
          "name": "setYAxisTitle(title)",
          "description": "Adds a title to the vertical axis. The title is centered and appears to the left of the value\nlabels.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTitleTextStyle(textStyle)",
          "description": "Sets the vertical axis title text style.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "useLogScale()",
          "description": "Makes the range axis into a logarithmic scale (requires all values to be positive). The range\naxis are the vertical axis for vertical charts (such as line, area, or column) and the\nhorizontal axis for horizontal charts (such as bar).",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedChart",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "asDataSourceChart()",
          "description": "Casts to a data source chart instance if the chart is a data source chart, ornullotherwise.",
          "return_type": {
            "name": "DataSourceChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-chart"
          }
        },
        {
          "parameters": [
            {
              "name": "contentType",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The MIME type to convert to. For most blobs,'application/pdf'is\n    the only valid option. For images in BMP, GIF, JPEG, or PNG format, any of'image/bmp','image/gif','image/jpeg', or'image/png'are also\n    valid. For a Google Docs document,'text/markdown'is also valid."
            }
          ],
          "name": "getAs(contentType)",
          "description": "Return the data inside this object as a blob converted to the specified content type. This\nmethod adds the appropriate extension to the filename—for example, \"myfile.pdf\". However, it\nassumes that the part of the filename that follows the last period (if any) is an existing\nextension that should be replaced. Consequently, \"ShoppingList.12.25.2014\" becomes\n\"ShoppingList.12.25.pdf\".",
          "return_type": {
            "name": "Blob",
            "url": "https://developers.google.com/apps-script/reference/base/blob.html"
          }
        },
        {
          "parameters": [],
          "name": "getBlob()",
          "description": "Return the data inside this object as a blob.",
          "return_type": {
            "name": "Blob",
            "url": "https://developers.google.com/apps-script/reference/base/blob.html"
          }
        },
        {
          "parameters": [],
          "name": "getChartId()",
          "description": "Returns a stable identifier for the chart that is unique across the spreadsheet containing the\nchart ornullif the chart is not in a spreadsheet.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getContainerInfo()",
          "description": "Returns information about where the chart is positioned within a sheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getHiddenDimensionStrategy()",
          "description": "Returns the strategy to use for handling hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "ChartHiddenDimensionStrategy",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
          }
        },
        {
          "parameters": [],
          "name": "getMergeStrategy()",
          "description": "Returns the merge strategy used when more than one range exists. IfMERGE_ROWS, row are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "ChartMergeStrategy",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
          }
        },
        {
          "parameters": [],
          "name": "getNumHeaders()",
          "description": "Returns the number of rows or columns the range that are treated as headers.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getOptions()",
          "description": "Returns the options for this chart, such as height, colors, and axes.",
          "return_type": {
            "name": "ChartOptions",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-options.html"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns the ranges that this chart uses as a data source.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getTransposeRowsAndColumns()",
          "description": "Iftrue, the rows and columns used to populate the chart are switched. Defaults tofalse.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "modify()",
          "description": "Returns anEmbeddedChartBuilderthat can be used to modify this chart. Invokesheet.updateChart(chart)to save any changes.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedColumnChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "reverseCategories()",
          "description": "Reverses the drawing of series in the domain axis. For vertical-range charts (such as line,\narea or column charts), this means the horizontal axis is drawn from right to left. For\nhorizontal-range charts (such as bar charts), this means the vertical axis is drawn from top to\nbottom. For pie charts, this means the slices are drawn counterclockwise.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValue",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The CSS value for the color (such as\"blue\"or\"#00f\")."
            }
          ],
          "name": "setBackgroundColor(cssValue)",
          "description": "Sets the background color for the chart.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValues",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of color CSS values, such as[\"red\", \"#acf\"]. The nth element\n    in the array represents the color of the nth line in the chart."
            }
          ],
          "name": "setColors(cssValues)",
          "description": "Sets the colors for the lines in the chart.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "Position",
                "url": "https://developers.google.com/apps-script/reference/charts/position.html"
              },
              "description": "The position of the legend."
            }
          ],
          "name": "setLegendPosition(position)",
          "description": "Sets the position of the legend with respect to the chart. By default, there is no legend.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart legend."
            }
          ],
          "name": "setLegendTextStyle(textStyle)",
          "description": "Sets the text style of the chart legend.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the lowest grid line of the range axis."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the highest grid line of the range axis."
            }
          ],
          "name": "setRange(start, end)",
          "description": "Sets the range for the chart.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "setStacked()",
          "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated). By default,\nthere is no stacking.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "chartTitle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the chart title."
            }
          ],
          "name": "setTitle(chartTitle)",
          "description": "Sets the title of the chart. The title is displayed centered above the chart.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setTitleTextStyle(textStyle)",
          "description": "Sets the text style of the chart title.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTextStyle(textStyle)",
          "description": "Sets the horizontal axis text style.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the X-axis."
            }
          ],
          "name": "setXAxisTitle(title)",
          "description": "Adds a title to the horizontal axis. The title is centered and appears below the axis value\nlabels.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTitleTextStyle(textStyle)",
          "description": "Sets the horizontal axis title text style.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTextStyle(textStyle)",
          "description": "Sets the vertical axis text style.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the Y-axis."
            }
          ],
          "name": "setYAxisTitle(title)",
          "description": "Adds a title to the vertical axis. The title is centered and appears to the left of the value\nlabels.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTitleTextStyle(textStyle)",
          "description": "Sets the vertical axis title text style.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "useLogScale()",
          "description": "Makes the range axis into a logarithmic scale (requires all values to be positive). The range\naxis are the vertical axis for vertical charts (such as line, area, or column) and the\nhorizontal axis for horizontal charts (such as bar).",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedComboChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "reverseCategories()",
          "description": "Reverses the drawing of series in the domain axis. For vertical-range charts (such as line,\narea or column charts), this means the horizontal axis is drawn from right to left. For\nhorizontal-range charts (such as bar charts), this means the vertical axis is drawn from top to\nbottom. For pie charts, this means the slices are drawn counterclockwise.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValue",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The CSS value for the color (such as\"blue\"or\"#00f\")."
            }
          ],
          "name": "setBackgroundColor(cssValue)",
          "description": "Sets the background color for the chart.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValues",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of color CSS values, such as[\"red\", \"#acf\"]. The nth element\n    in the array represents the color of the nth line in the chart."
            }
          ],
          "name": "setColors(cssValues)",
          "description": "Sets the colors for the lines in the chart.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "Position",
                "url": "https://developers.google.com/apps-script/reference/charts/position.html"
              },
              "description": "The position of the legend."
            }
          ],
          "name": "setLegendPosition(position)",
          "description": "Sets the position of the legend with respect to the chart. By default, there is no legend.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart legend."
            }
          ],
          "name": "setLegendTextStyle(textStyle)",
          "description": "Sets the text style of the chart legend.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the lowest grid line of the range axis."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the highest grid line of the range axis."
            }
          ],
          "name": "setRange(start, end)",
          "description": "Sets the range for the chart.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "setStacked()",
          "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated). By default,\nthere is no stacking.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "chartTitle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the chart title."
            }
          ],
          "name": "setTitle(chartTitle)",
          "description": "Sets the title of the chart. The title is displayed centered above the chart.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setTitleTextStyle(textStyle)",
          "description": "Sets the text style of the chart title.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTextStyle(textStyle)",
          "description": "Sets the horizontal axis text style.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the X-axis."
            }
          ],
          "name": "setXAxisTitle(title)",
          "description": "Adds a title to the horizontal axis. The title is centered and appears below the axis value\nlabels.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTitleTextStyle(textStyle)",
          "description": "Sets the horizontal axis title text style.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTextStyle(textStyle)",
          "description": "Sets the vertical axis text style.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the Y-axis."
            }
          ],
          "name": "setYAxisTitle(title)",
          "description": "Adds a title to the vertical axis. The title is centered and appears to the left of the value\nlabels.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTitleTextStyle(textStyle)",
          "description": "Sets the vertical axis title text style.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "useLogScale()",
          "description": "Makes the range axis into a logarithmic scale (requires all values to be positive). The range\naxis are the vertical axis for vertical charts (such as line, area, or column) and the\nhorizontal axis for horizontal charts (such as bar).",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedHistogramChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "reverseCategories()",
          "description": "Reverses the drawing of series in the domain axis. For vertical-range charts (such as line,\narea or column charts), this means the horizontal axis is drawn from right to left. For\nhorizontal-range charts (such as bar charts), this means the vertical axis is drawn from top to\nbottom. For pie charts, this means the slices are drawn counterclockwise.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValue",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The CSS value for the color (such as\"blue\"or\"#00f\")."
            }
          ],
          "name": "setBackgroundColor(cssValue)",
          "description": "Sets the background color for the chart.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValues",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of color CSS values, such as[\"red\", \"#acf\"]. The nth element\n    in the array represents the color of the nth line in the chart."
            }
          ],
          "name": "setColors(cssValues)",
          "description": "Sets the colors for the lines in the chart.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "Position",
                "url": "https://developers.google.com/apps-script/reference/charts/position.html"
              },
              "description": "The position of the legend."
            }
          ],
          "name": "setLegendPosition(position)",
          "description": "Sets the position of the legend with respect to the chart. By default, there is no legend.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart legend."
            }
          ],
          "name": "setLegendTextStyle(textStyle)",
          "description": "Sets the text style of the chart legend.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the lowest grid line of the range axis."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the highest grid line of the range axis."
            }
          ],
          "name": "setRange(start, end)",
          "description": "Sets the range for the chart.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "setStacked()",
          "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated). By default,\nthere is no stacking.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "chartTitle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the chart title."
            }
          ],
          "name": "setTitle(chartTitle)",
          "description": "Sets the title of the chart. The title is displayed centered above the chart.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setTitleTextStyle(textStyle)",
          "description": "Sets the text style of the chart title.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTextStyle(textStyle)",
          "description": "Sets the horizontal axis text style.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the X-axis."
            }
          ],
          "name": "setXAxisTitle(title)",
          "description": "Adds a title to the horizontal axis. The title is centered and appears below the axis value\nlabels.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTitleTextStyle(textStyle)",
          "description": "Sets the horizontal axis title text style.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTextStyle(textStyle)",
          "description": "Sets the vertical axis text style.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the Y-axis."
            }
          ],
          "name": "setYAxisTitle(title)",
          "description": "Adds a title to the vertical axis. The title is centered and appears to the left of the value\nlabels.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTitleTextStyle(textStyle)",
          "description": "Sets the vertical axis title text style.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "useLogScale()",
          "description": "Makes the range axis into a logarithmic scale (requires all values to be positive). The range\naxis are the vertical axis for vertical charts (such as line, area, or column) and the\nhorizontal axis for horizontal charts (such as bar).",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedLineChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "reverseCategories()",
          "description": "Reverses the drawing of series in the domain axis. For vertical-range charts (such as line,\narea or column charts), this means the horizontal axis is drawn from right to left. For\nhorizontal-range charts (such as bar charts), this means the vertical axis is drawn from top to\nbottom. For pie charts, this means the slices are drawn counterclockwise.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValue",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The CSS value for the color (such as\"blue\"or\"#00f\")."
            }
          ],
          "name": "setBackgroundColor(cssValue)",
          "description": "Sets the background color for the chart.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValues",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of color CSS values, such as[\"red\", \"#acf\"]. The nth element\n    in the array represents the color of the nth line in the chart."
            }
          ],
          "name": "setColors(cssValues)",
          "description": "Sets the colors for the lines in the chart.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "style",
              "type": {
                "name": "CurveStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/curve-style.html"
              },
              "description": "The style for curves in the chart."
            }
          ],
          "name": "setCurveStyle(style)",
          "description": "Sets the style to use for curves in the chart. SeeCurveStylefor allowed curve\nstyles.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "Position",
                "url": "https://developers.google.com/apps-script/reference/charts/position.html"
              },
              "description": "The position of the legend."
            }
          ],
          "name": "setLegendPosition(position)",
          "description": "Sets the position of the legend with respect to the chart. By default, there is no legend.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart legend."
            }
          ],
          "name": "setLegendTextStyle(textStyle)",
          "description": "Sets the text style of the chart legend.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "style",
              "type": {
                "name": "PointStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/point-style.html"
              },
              "description": "The style to use for points in the line."
            }
          ],
          "name": "setPointStyle(style)",
          "description": "Sets the style for points in the line. By default, points have no particular styles, and only\nthe line is visible.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the lowest grid line of the range axis."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the highest grid line of the range axis."
            }
          ],
          "name": "setRange(start, end)",
          "description": "Sets the range for the chart.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "chartTitle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the chart title."
            }
          ],
          "name": "setTitle(chartTitle)",
          "description": "Sets the title of the chart. The title is displayed centered above the chart.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setTitleTextStyle(textStyle)",
          "description": "Sets the text style of the chart title.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTextStyle(textStyle)",
          "description": "Sets the horizontal axis text style.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the X-axis."
            }
          ],
          "name": "setXAxisTitle(title)",
          "description": "Adds a title to the horizontal axis. The title is centered and appears below the axis value\nlabels.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTitleTextStyle(textStyle)",
          "description": "Sets the horizontal axis title text style.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTextStyle(textStyle)",
          "description": "Sets the vertical axis text style.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the Y-axis."
            }
          ],
          "name": "setYAxisTitle(title)",
          "description": "Adds a title to the vertical axis. The title is centered and appears to the left of the value\nlabels.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTitleTextStyle(textStyle)",
          "description": "Sets the vertical axis title text style.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "useLogScale()",
          "description": "Makes the range axis into a logarithmic scale (requires all values to be positive). The range\naxis are the vertical axis for vertical charts (such as line, area, or column) and the\nhorizontal axis for horizontal charts (such as bar).",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedPieChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "reverseCategories()",
          "description": "Reverses the drawing of series in the domain axis. For vertical-range charts (such as line,\narea or column charts), this means the horizontal axis is drawn from right to left. For\nhorizontal-range charts (such as bar charts), this means the vertical axis is drawn from top to\nbottom. For pie charts, this means the slices are drawn counterclockwise.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "set3D()",
          "description": "Sets the chart to be three-dimensional.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValue",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The CSS value for the color (such as\"blue\"or\"#00f\")."
            }
          ],
          "name": "setBackgroundColor(cssValue)",
          "description": "Sets the background color for the chart.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValues",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of color CSS values, such as[\"red\", \"#acf\"]. The nth element\n    in the array represents the color of the nth line in the chart."
            }
          ],
          "name": "setColors(cssValues)",
          "description": "Sets the colors for the lines in the chart.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "Position",
                "url": "https://developers.google.com/apps-script/reference/charts/position.html"
              },
              "description": "The position of the legend."
            }
          ],
          "name": "setLegendPosition(position)",
          "description": "Sets the position of the legend with respect to the chart. By default, there is no legend.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart legend."
            }
          ],
          "name": "setLegendTextStyle(textStyle)",
          "description": "Sets the text style of the chart legend.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "chartTitle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the chart title."
            }
          ],
          "name": "setTitle(chartTitle)",
          "description": "Sets the title of the chart. The title is displayed centered above the chart.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setTitleTextStyle(textStyle)",
          "description": "Sets the text style of the chart title.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedScatterChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValue",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The CSS value for the color (such as\"blue\"or\"#00f\")."
            }
          ],
          "name": "setBackgroundColor(cssValue)",
          "description": "Sets the background color for the chart.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "cssValues",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of color CSS values, such as[\"red\", \"#acf\"]. The nth element\n    in the array represents the color of the nth line in the chart."
            }
          ],
          "name": "setColors(cssValues)",
          "description": "Sets the colors for the lines in the chart.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "Position",
                "url": "https://developers.google.com/apps-script/reference/charts/position.html"
              },
              "description": "The position of the legend."
            }
          ],
          "name": "setLegendPosition(position)",
          "description": "Sets the position of the legend with respect to the chart. By default, there is no legend.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart legend."
            }
          ],
          "name": "setLegendTextStyle(textStyle)",
          "description": "Sets the text style of the chart legend.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "style",
              "type": {
                "name": "PointStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/point-style.html"
              },
              "description": "The style to use for points in the line."
            }
          ],
          "name": "setPointStyle(style)",
          "description": "Sets the style for points in the line. By default, points have no particular styles, and only\nthe line is visible.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "chartTitle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the chart title."
            }
          ],
          "name": "setTitle(chartTitle)",
          "description": "Sets the title of the chart. The title is displayed centered above the chart.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the chart title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setTitleTextStyle(textStyle)",
          "description": "Sets the text style of the chart title.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "setXAxisLogScale()",
          "description": "Makes the horizontal axis into a logarithmic scale (requires all values to be positive).",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the lowest grid line of the horizontal axis."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the highest grid line of the horizontal axis."
            }
          ],
          "name": "setXAxisRange(start, end)",
          "description": "Sets the range for the horizontal axis of the chart.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTextStyle(textStyle)",
          "description": "Sets the horizontal axis text style.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the X-axis."
            }
          ],
          "name": "setXAxisTitle(title)",
          "description": "Adds a title to the horizontal axis. The title is centered and appears below the axis value\nlabels.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setXAxisTitleTextStyle(textStyle)",
          "description": "Sets the horizontal axis title text style.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "setYAxisLogScale()",
          "description": "Makes the vertical axis into a logarithmic scale (requires all values to be positive).",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the lowest grid line of the vertical axis."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The value for the highest grid line of the vertical axis."
            }
          ],
          "name": "setYAxisRange(start, end)",
          "description": "Sets the range for the vertical axis of the chart. If any data points fall outside the range,\nthe range is expanded to include those data points.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTextStyle(textStyle)",
          "description": "Sets the vertical axis text style.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The title for the Y-axis."
            }
          ],
          "name": "setYAxisTitle(title)",
          "description": "Adds a title to the vertical axis. The title is centered and appears to the left of the value\nlabels.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/charts/text-style.html"
              },
              "description": "The text style to use for the horizontal axis title. You can create aTextStyleBuilderobject by callingCharts.newTextStyle()."
            }
          ],
          "name": "setYAxisTitleTextStyle(textStyle)",
          "description": "Sets the vertical axis title text style.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class EmbeddedTableChartBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to add."
            }
          ],
          "name": "addRange(range)",
          "description": "Adds a range to the chart this builder modifies. Does not add the range if it has already been\nadded to the chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asAreaChart()",
          "description": "Sets the chart type to AreaChart and returns anEmbeddedAreaChartBuilder.",
          "return_type": {
            "name": "EmbeddedAreaChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asBarChart()",
          "description": "Sets the chart type to BarChart and returns anEmbeddedBarChartBuilder.",
          "return_type": {
            "name": "EmbeddedBarChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asColumnChart()",
          "description": "Sets the chart type to ColumnChart and returns anEmbeddedColumnChartBuilder.",
          "return_type": {
            "name": "EmbeddedColumnChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asComboChart()",
          "description": "Sets the chart type to ComboChart and returns anEmbeddedComboChartBuilder.",
          "return_type": {
            "name": "EmbeddedComboChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asHistogramChart()",
          "description": "Sets the chart type to HistogramChart and returns anEmbeddedHistogramChartBuilder.",
          "return_type": {
            "name": "EmbeddedHistogramChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asLineChart()",
          "description": "Sets the chart type to LineChart and returns anEmbeddedLineChartBuilder.",
          "return_type": {
            "name": "EmbeddedLineChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asPieChart()",
          "description": "Sets the chart type to PieChart and returns anEmbeddedPieChartBuilder.",
          "return_type": {
            "name": "EmbeddedPieChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asScatterChart()",
          "description": "Sets the chart type to ScatterChart and returns anEmbeddedScatterChartBuilder.",
          "return_type": {
            "name": "EmbeddedScatterChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "asTableChart()",
          "description": "Sets the chart type to TableChart and returns anEmbeddedTableChartBuilder.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds the chart to reflect all changes made to it.",
          "return_type": {
            "name": "EmbeddedChart",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [],
          "name": "clearRanges()",
          "description": "Removes all ranges from the chart this builder modifies.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "enablePaging",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueif paging should be enabled,falseotherwise."
            }
          ],
          "name": "enablePaging(enablePaging)",
          "description": "Sets whether to enable paging through the data.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "pageSize",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows in each page of the table."
            }
          ],
          "name": "enablePaging(pageSize)",
          "description": "Enables paging and sets the number of rows in each page.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "pageSize",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows in each page of the table."
            },
            {
              "name": "startPage",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The first table page to display (page numbers are zero-based)."
            }
          ],
          "name": "enablePaging(pageSize, startPage)",
          "description": "Enables paging, sets the number of rows in each page and the first table page to display (page\nnumbers are zero based).",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rtlEnabled",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueif right-to-left support should be enabled,falseotherwise."
            }
          ],
          "name": "enableRtlTable(rtlEnabled)",
          "description": "Adds basic support for right-to-left languages (such as Arabic or Hebrew) by reversing the\ncolumn order of the table, so that column zero is the right-most column, and the last column is\nthe left-most column.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "enableSorting",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueto enable sorting by clicking on column headers,falseotherwise."
            }
          ],
          "name": "enableSorting(enableSorting)",
          "description": "Sets whether to sort columns when the user clicks a column heading.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getChartType()",
          "description": "Returns the current chart type.",
          "return_type": {
            "name": "ChartType",
            "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getContainer()",
          "description": "Return the chartContainerInfo, which encapsulates where the chart appears on the\nsheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a copy of the list of ranges currently providing data for this chart. UseaddRange(range)andremoveRange(range)to modify this list.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to remove."
            }
          ],
          "name": "removeRange(range)",
          "description": "Removes the specified range from the chart this builder modifies. Does not throw an error if\nthe range is not in this chart.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ChartType",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-type.html"
              },
              "description": "The type to change this chart into."
            }
          ],
          "name": "setChartType(type)",
          "description": "Changes the type of chart. Not all embedded chart types are currently supported. SeeChartType.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row number for the first row in the data table."
            }
          ],
          "name": "setFirstRowNumber(number)",
          "description": "Sets the row number for the first row in the data table.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "ChartHiddenDimensionStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html"
              },
              "description": "The strategy to use for hidden rows and columns."
            }
          ],
          "name": "setHiddenDimensionStrategy(strategy)",
          "description": "Sets the strategy to use for hidden rows and columns. Defaults toIGNORE_ROWS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of the column according to which the table should be initially sorted."
            }
          ],
          "name": "setInitialSortingAscending(column)",
          "description": "Sets the index of the column according to which the table should be initially sorted\n(ascending).",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of the column according to which the table should be initially sorted."
            }
          ],
          "name": "setInitialSortingDescending(column)",
          "description": "Sets the index of the column according to which the table should be initially sorted\n(descending).",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "mergeStrategy",
              "type": {
                "name": "ChartMergeStrategy",
                "url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html"
              },
              "description": "The merge strategy to use."
            }
          ],
          "name": "setMergeStrategy(mergeStrategy)",
          "description": "Sets the merge strategy to use when more than one range exists. IfMERGE_ROWS, rows are merged; ifMERGE_COLUMNS, columns are merged. Defaults toMERGE_COLUMNS.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "headers",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows or columns to treat as headers. Negative values cause headers\n    to be auto-detected."
            }
          ],
          "name": "setNumHeaders(headers)",
          "description": "Sets the number of rows or columns of the range that should be treated as headers.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "option",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the option."
            },
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value of the option."
            }
          ],
          "name": "setOption(option, value)",
          "description": "Sets advanced options for this chart. To view a list of the available options, seeChart\nconfiguration options.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's left side is anchored in this column."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's upper right-hand corner is offset by this many pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The chart's lower left-hand corner is offset by this many pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position, changing where the chart appears on the sheet.anchorRowPosandanchorColPosare 1-indexed.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "transpose",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the rows and columns used to construct the chart are\n    transposed."
            }
          ],
          "name": "setTransposeRowsAndColumns(transpose)",
          "description": "Sets whether the chart's rows and columns are transposed. If set totrue, the rows and\ncolumns are switched. Defaults tofalse.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "showRowNumber",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueif the first column of the table should show the row number,falseotherwise."
            }
          ],
          "name": "showRowNumberColumn(showRowNumber)",
          "description": "Sets whether to show the row number as the first column of the table.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "alternate",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueif color styles should be alternating,falseotherwise."
            }
          ],
          "name": "useAlternatingRowStyle(alternate)",
          "description": "Sets whether alternating color style is assigned to odd and even rows of a table chart.",
          "return_type": {
            "name": "EmbeddedTableChartBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class Filter",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The 1-indexed position of the column. For example, column B's index is 2."
            }
          ],
          "name": "getColumnFilterCriteria(columnPosition)",
          "description": "Gets the filter criteria on the specified column, ornullif the column doesn't have\nfilter criteria applied to it.",
          "return_type": {
            "name": "FilterCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
          }
        },
        {
          "parameters": [],
          "name": "getRange()",
          "description": "Gets the range this filter applies to.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes this filter.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The 1-indexed position of the column. For example, column B's index is 2."
            }
          ],
          "name": "removeColumnFilterCriteria(columnPosition)",
          "description": "Removes the filter criteria from the specified column.",
          "return_type": {
            "name": "Filter",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The 1-indexed position of the column. For example, column B's index is 2."
            },
            {
              "name": "filterCriteria",
              "type": {
                "name": "FilterCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
              },
              "description": "The filter criteria to set. If you set the criteria tonull, it\n    removes filter criteria from the specified column. You can also useremoveColumnFilterCriteria(columnPosition)."
            }
          ],
          "name": "setColumnFilterCriteria(columnPosition, filterCriteria)",
          "description": "Sets the filter criteria on the specified column. First, create the filter criteria builder\nusingSpreadsheetApp.newFilterCriteria(). Then add criteria to the builder\nusing theFilterCriteriaBuilderclass. After you've built your criteria, set it as thefilterCriteriaparameter for this method.",
          "return_type": {
            "name": "Filter",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The 1-indexed position of the column. For example, column B's index is 2."
            },
            {
              "name": "ascending",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, sorts the filtered range in ascending order; iffalse, sorts the filtered range in descending order."
            }
          ],
          "name": "sort(columnPosition, ascending)",
          "description": "Sorts the filtered range by the specified column, excluding the first row (the header row) in\nthe range this filter applies to.",
          "return_type": {
            "name": "Filter",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class FilterCriteria",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "copy()",
          "description": "Copies this filter criteria and creates a criteria builder that you can apply to another\nfilter.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder"
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaType()",
          "description": "Returns the criteria's boolean type, for example,CELL_EMPTY. To learn about the types\nof boolean criteria, see theBooleanCriteriaenum.",
          "return_type": {
            "name": "BooleanCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-criteria"
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaValues()",
          "description": "Returns an array of arguments for boolean criteria. Some boolean criteria types don't have\narguments and return an empty array, for example,CELL_NOT_EMPTY.",
          "return_type": {
            "name": "Object[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHiddenValues()",
          "description": "Returns the values that the filter hides.",
          "return_type": {
            "name": "String[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getVisibleBackgroundColor()",
          "description": "Returns the background color used as filter criteria. Cells with this background color remain\nvisible.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getVisibleForegroundColor()",
          "description": "Returns the foreground color used as a filter criteria. Cells with this foreground color remain\nvisible.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getVisibleValues()",
          "description": "Returns the values that the pivot table filter shows.",
          "return_type": {
            "name": "String[]",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class FilterCriteriaBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "build()",
          "description": "Assembles the filter criteria using the settings you add to the criteria builder.",
          "return_type": {
            "name": "FilterCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
          }
        },
        {
          "parameters": [],
          "name": "copy()",
          "description": "Copies this filter criteria and creates a criteria builder that you can apply to another\nfilter.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaType()",
          "description": "Returns the criteria's boolean type, for example,CELL_EMPTY. To learn about the types\nof boolean criteria, see theBooleanCriteriaenum.",
          "return_type": {
            "name": "BooleanCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-criteria"
          }
        },
        {
          "parameters": [],
          "name": "getCriteriaValues()",
          "description": "Returns an array of arguments for boolean criteria. Some boolean criteria types don't have\narguments and return an empty array, for example,CELL_NOT_EMPTY.",
          "return_type": {
            "name": "Object[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHiddenValues()",
          "description": "Returns the values that the filter hides.",
          "return_type": {
            "name": "String[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getVisibleBackgroundColor()",
          "description": "Returns the background color used as filter criteria. Cells with this background color remain\nvisible.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getVisibleForegroundColor()",
          "description": "Returns the foreground color used as a filter criteria. Cells with this foreground color remain\nvisible.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getVisibleValues()",
          "description": "Returns the values that the pivot table filter shows.",
          "return_type": {
            "name": "String[]",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "values",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "The list of values to hide."
            }
          ],
          "name": "setHiddenValues(values)",
          "description": "Sets the values to hide. Clears any existing visible or hidden values.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "visibleBackgroundColor",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The background color to set. The color must be an RGB-style\n    color. This method doesn't support theme colors."
            }
          ],
          "name": "setVisibleBackgroundColor(visibleBackgroundColor)",
          "description": "Sets the background color used as filter criteria. Cells with this background color remain\nvisible. Setting a background color filter criteria removes any current color filter criteria\nfrom this builder.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "visibleForegroundColor",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The foreground color to set. The color must be an RGB-style\n    color. This method doesn't support theme colors."
            }
          ],
          "name": "setVisibleForegroundColor(visibleForegroundColor)",
          "description": "Sets the foreground color used as filter criteria. Cells with this foreground color remain\nvisible. Setting a foreground color filter criteria removes any current color filter criteria\nfrom this builder.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "values",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "The list of values to show."
            }
          ],
          "name": "setVisibleValues(values)",
          "description": "Sets the values to show on a pivot table. Clears any existing visible or hidden values.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "whenCellEmpty()",
          "description": "Sets the filter criteria to show empty cells.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "whenCellNotEmpty()",
          "description": "Sets the filter criteria to show cells that aren't empty.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The latest date to hide."
            }
          ],
          "name": "whenDateAfter(date)",
          "description": "Sets filter criteria that shows cells with dates that are after the specified date.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "RelativeDate",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/relative-date"
              },
              "description": "The latest relative date."
            }
          ],
          "name": "whenDateAfter(date)",
          "description": "Sets filter criteria that shows cells with dates that are after the specified relative date. To\nview the relative date options, refer toEnumRelativeDate.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The earliest date to hide."
            }
          ],
          "name": "whenDateBefore(date)",
          "description": "Sets filter criteria that shows cells with dates that are before the specified date.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "RelativeDate",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/relative-date"
              },
              "description": "The earliest relative date to hide."
            }
          ],
          "name": "whenDateBefore(date)",
          "description": "Sets filter criteria that shows cells with dates that are before the specified relative date.\nTo view the relative date options, refer toEnumRelativeDate.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The date that cell values must match."
            }
          ],
          "name": "whenDateEqualTo(date)",
          "description": "Sets filter criteria that shows cells with dates that are equal to the specified date.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "RelativeDate",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/relative-date"
              },
              "description": "The relative date that cell values must match."
            }
          ],
          "name": "whenDateEqualTo(date)",
          "description": "Sets filter criteria that shows cells with dates that are equal to the specified relative date.\nTo view the relative date options, refer toEnumRelativeDate.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "dates",
              "type": {
                "name": "Date[]",
                "url": null
              },
              "description": "The dates to show."
            }
          ],
          "name": "whenDateEqualToAny(dates)",
          "description": "Sets the filter criteria to show cells with dates that are equal to any of the specified dates.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "date",
              "type": {
                "name": "Date",
                "url": null
              },
              "description": "The date to hide."
            }
          ],
          "name": "whenDateNotEqualTo(date)",
          "description": "Sets the filter criteria to show cells that aren't equal to the specified date.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "dates",
              "type": {
                "name": "Date[]",
                "url": null
              },
              "description": "The dates to hide."
            }
          ],
          "name": "whenDateNotEqualToAny(dates)",
          "description": "Sets the filter criteria to show cells with dates that aren't equal to any of the specified\ndates.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A custom formula that evaluates totrueif the input is valid."
            }
          ],
          "name": "whenFormulaSatisfied(formula)",
          "description": "Sets the filter criteria to show cells with a specified formula (such as=B:B<C:C) that\nevaluates totrue.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest number to show."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest number to show."
            }
          ],
          "name": "whenNumberBetween(start, end)",
          "description": "Sets the filter criteria to show cells with a number that falls between, or is either of, 2\nspecified numbers.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The number to show."
            }
          ],
          "name": "whenNumberEqualTo(number)",
          "description": "Sets the filter criteria to show cells with a number that's equal to the specified number.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "numbers",
              "type": {
                "name": "Number[]",
                "url": null
              },
              "description": "The numbers to show."
            }
          ],
          "name": "whenNumberEqualToAny(numbers)",
          "description": "Sets the filter criteria to show cells with a number that's equal to any of the specified\nnumbers.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest number to hide."
            }
          ],
          "name": "whenNumberGreaterThan(number)",
          "description": "Sets the filter criteria to show cells with a number greater than the specified number",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest number to show."
            }
          ],
          "name": "whenNumberGreaterThanOrEqualTo(number)",
          "description": "Sets the filter criteria to show cells with a number greater than or equal to the specified\nnumber.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest number to hide."
            }
          ],
          "name": "whenNumberLessThan(number)",
          "description": "Sets the filter criteria to show cells with a number that's less than the specified number.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest number to show."
            }
          ],
          "name": "whenNumberLessThanOrEqualTo(number)",
          "description": "Sets the filter criteria to show cells with a number less than or equal to the specified\nnumber.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "start",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The lowest number hide."
            },
            {
              "name": "end",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The highest number to hide."
            }
          ],
          "name": "whenNumberNotBetween(start, end)",
          "description": "Sets the filter criteria to show cells with a number doesn't fall between, and is neither of, 2\nspecified numbers.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "number",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The number to hide."
            }
          ],
          "name": "whenNumberNotEqualTo(number)",
          "description": "Sets the filter criteria to show cells with a number that isn't equal to the specified number.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "numbers",
              "type": {
                "name": "Number[]",
                "url": null
              },
              "description": "The numbers to hide."
            }
          ],
          "name": "whenNumberNotEqualToAny(numbers)",
          "description": "Sets the filter criteria to show cells with a number that isn't equal to any of the specified\nnumbers.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text that the cell must contain."
            }
          ],
          "name": "whenTextContains(text)",
          "description": "Sets the filter criteria to show cells with text that contains the specified text. The text\nisn't case-sensitive.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text that the cell must not contain."
            }
          ],
          "name": "whenTextDoesNotContain(text)",
          "description": "Sets the filter criteria to show cells with text that doesn't contain the specified text. The\ntext isn't case-sensitive.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "Text that the end of the cell's text must contain."
            }
          ],
          "name": "whenTextEndsWith(text)",
          "description": "Sets the filter criteria to show cells with text that ends with the specified text. The text\nisn't case-sensitive.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text that the cell's text must equal."
            }
          ],
          "name": "whenTextEqualTo(text)",
          "description": "Sets the filter criteria to show cells with text that's equal to the specified text. The text\nisn't case-sensitive.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "texts",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "The text values that a cell must equal."
            }
          ],
          "name": "whenTextEqualToAny(texts)",
          "description": "Sets the filter criteria to show cells with text that's equal to any of the specified text\nvalues. The text isn't case-sensitive.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text that the cell's text can't equal."
            }
          ],
          "name": "whenTextNotEqualTo(text)",
          "description": "Sets the filter criteria to show cells with text that isn't equal to the specified text. The\ntext isn't case-sensitive.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "texts",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "The text values that a cell can't equal."
            }
          ],
          "name": "whenTextNotEqualToAny(texts)",
          "description": "Sets the filter criteria to show cells with text that isn't equal to any of the specified\nvalues. The text isn't case-sensitive.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "Text that the start of the cell's text must contain."
            }
          ],
          "name": "whenTextStartsWith(text)",
          "description": "Sets the filter criteria to show cells with text that starts with the specified text. The text\nisn't case-sensitive.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "criteria",
              "type": {
                "name": "BooleanCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-criteria"
              },
              "description": "The type of boolean criteria."
            },
            {
              "name": "args",
              "type": {
                "name": "Object[]",
                "url": null
              },
              "description": "An array of arguments appropriate to the criteria type; the number of arguments and\n    their type match the correspondingwhen...()methods above."
            }
          ],
          "name": "withCriteria(criteria, args)",
          "description": "Sets the filter criteria to a boolean condition defined byBooleanCriteriavalues, such\nasCELL_EMPTYorNUMBER_GREATER_THAN. To copy the boolean condition from\nexisting criteria, define the parameters for this method usinggetCriteriaType()andgetCriteriaValues()on an\nexisting criteria.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum FrequencyType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/frequency-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "FREQUENCY_TYPE_UNSUPPORTED",
          "description": "The frequency type is unsupported."
        },
        {
          "name": "DAILY",
          "description": "Refresh daily."
        },
        {
          "name": "WEEKLY",
          "description": "Refresh weekly, on given days of the week."
        },
        {
          "name": "MONTHLY",
          "description": "Refresh monthly, on given days of the month."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class GradientCondition",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getMaxColorObject()",
          "description": "Gets the color set for the maximum value of this gradient condition. Returnsnullif\nthe color hasn't been set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getMaxType()",
          "description": "Gets the interpolation type for the maximum value of this gradient condition. Returnsnullif the gradient max type hasn't been set.",
          "return_type": {
            "name": "InterpolationType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type"
          }
        },
        {
          "parameters": [],
          "name": "getMaxValue()",
          "description": "Gets the max value of this gradient condition. Returns an empty string if theInterpolationTypeisMAXor if the max value hasn't been\nset.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getMidColorObject()",
          "description": "Gets the color set for the midpoint value of this gradient condition. Returnsnullif\nthe color hasn't been set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getMidType()",
          "description": "Gets the interpolation type for the midpoint value of this gradient condition. Returnsnullif the gradient mid type hasn't been set.",
          "return_type": {
            "name": "InterpolationType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type"
          }
        },
        {
          "parameters": [],
          "name": "getMidValue()",
          "description": "Gets the midpoint value of this gradient condition. Returns an empty string if the gradient mid\nvalue hasn't been set.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getMinColorObject()",
          "description": "Gets the color set for the minimum value of this gradient condition. Returnsnullif\nthe color hasn't been set.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getMinType()",
          "description": "Gets the interpolation type for the minimum value of this gradient condition. Returnsnullif the gradient min type hasn't been set.",
          "return_type": {
            "name": "InterpolationType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type"
          }
        },
        {
          "parameters": [],
          "name": "getMinValue()",
          "description": "Gets the minimum value of this gradient condition. Returns an empty string if theInterpolationTypeisMINor if the min value hasn't been\nset.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getMaxColor()",
          "description": "Deprecated.Replaced bygetMaxColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getMidColor()",
          "description": "Deprecated.Replaced bygetMidColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getMinColor()",
          "description": "Deprecated.Replaced bygetMinColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class Group",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/group",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "collapse()",
          "description": "Collapses this group.",
          "return_type": {
            "name": "Group",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "expand()",
          "description": "Expands this group.",
          "return_type": {
            "name": "Group",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getControlIndex()",
          "description": "Returns the control toggle index of this group. This is the index just before the range when\nthe control toggle is shown before the group, or the index just after the range otherwise.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getDepth()",
          "description": "Returns the depth of this group.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getRange()",
          "description": "Returns the range over which this group exists.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "isCollapsed()",
          "description": "Returnstrueif this group is collapsed.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes this group from the sheet, reducing the group depth of therangeby\none. This may modify other groups. After calling this, the group object becomes invalid to use.",
          "return_type": {
            "name": "void",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum GroupControlTogglePosition",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/group-control-toggle-position",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "BEFORE",
          "description": "The position where the control toggle is before the group (at lower indices)."
        },
        {
          "name": "AFTER",
          "description": "The position where the control toggle is after the group (at higher indices)."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum InterpolationType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "NUMBER",
          "description": "Use the number as as specific interpolation point for a gradient condition."
        },
        {
          "name": "PERCENT",
          "description": "Use the number as a percentage interpolation point for a gradient condition."
        },
        {
          "name": "PERCENTILE",
          "description": "Use the number as a percentile interpolation point for a gradient condition."
        },
        {
          "name": "MIN",
          "description": "Infer the minimum number as a specific interpolation point for a gradient condition."
        },
        {
          "name": "MAX",
          "description": "Infer the maximum number as a specific interpolation point for a gradient condition."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class LookerDataSourceSpec",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/looker-data-source-spec",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "copy()",
          "description": "Creates aDataSourceSpecBuilderbased on this data source's settings.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec-builder"
          }
        },
        {
          "parameters": [],
          "name": "getExploreName()",
          "description": "Gets the name of the Looker explore in the model.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getInstanceUrl()",
          "description": "Gets the URL of the Looker instance.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getModelName()",
          "description": "Gets the name of the Looker model in the instance.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getParameters()",
          "description": "Gets the parameters of the data source.",
          "return_type": {
            "name": "DataSourceParameter[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter"
          }
        },
        {
          "parameters": [],
          "name": "getType()",
          "description": "Gets the type of the data source.",
          "return_type": {
            "name": "DataSourceType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-type"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class LookerDataSourceSpecBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/looker-data-source-spec-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "build()",
          "description": "Builds a data source specification from the settings in this builder. Must useas...()to specify a data source type before building.",
          "return_type": {
            "name": "DataSourceSpec",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec"
          }
        },
        {
          "parameters": [],
          "name": "copy()",
          "description": "Creates aDataSourceSpecBuilderbased on this data source's settings.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec-builder"
          }
        },
        {
          "parameters": [],
          "name": "getExploreName()",
          "description": "Gets the name of the Looker explore in the model.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getInstanceUrl()",
          "description": "Gets the URL of the Looker instance.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getModelName()",
          "description": "Gets the name of the Looker model in the instance.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getParameters()",
          "description": "Gets the parameters of the data source.",
          "return_type": {
            "name": "DataSourceParameter[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter"
          }
        },
        {
          "parameters": [],
          "name": "getType()",
          "description": "Gets the type of the data source.",
          "return_type": {
            "name": "DataSourceType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-type"
          }
        },
        {
          "parameters": [],
          "name": "removeAllParameters()",
          "description": "Removes all the parameters.",
          "return_type": {
            "name": "LookerDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "parameterName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the parameter to remove."
            }
          ],
          "name": "removeParameter(parameterName)",
          "description": "Removes the specified parameter.",
          "return_type": {
            "name": "LookerDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "exploreName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The explore name in the selected Looker model."
            }
          ],
          "name": "setExploreName(exploreName)",
          "description": "Sets the explore name in the Looker model.",
          "return_type": {
            "name": "LookerDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "instanceUrl",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The URL of the Looker instance."
            }
          ],
          "name": "setInstanceUrl(instanceUrl)",
          "description": "Sets the instance URL for Looker.",
          "return_type": {
            "name": "LookerDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "modelName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The model name in the Looker instance."
            }
          ],
          "name": "setModelName(modelName)",
          "description": "Sets the Looker model name in the Looker instance.",
          "return_type": {
            "name": "LookerDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "parameterName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The parameter name."
            },
            {
              "name": "sourceCell",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The source cell, as specified in A1 notation."
            }
          ],
          "name": "setParameterFromCell(parameterName, sourceCell)",
          "description": "Adds a parameter, or if the parameter with the name exists, updates its source cell for data\nsource spec builders of typeDataSourceType.BIGQUERY.",
          "return_type": {
            "name": "LookerDataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class NamedRange",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/named-range",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getName()",
          "description": "Gets the name of this named range.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getRange()",
          "description": "Gets the range referenced by this named range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Deletes this named range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new name of the named range."
            }
          ],
          "name": "setName(name)",
          "description": "Sets/updates the name of the named range.",
          "return_type": {
            "name": "NamedRange",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The spreadsheet range to associate with this named range."
            }
          ],
          "name": "setRange(range)",
          "description": "Sets/updates the range for this named range.",
          "return_type": {
            "name": "NamedRange",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class OverGridImage",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "functionName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the function being specified. This must be a public top level\n    function, not one ending in underscore such asprivateFunction_."
            }
          ],
          "name": "assignScript(functionName)",
          "description": "Assigns the function with the specified function name to this image.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getAltTextDescription()",
          "description": "Returns the alt text description for this image.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getAltTextTitle()",
          "description": "Returns the alt text title for this image.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getAnchorCell()",
          "description": "Returns the cell where an image is anchored.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getAnchorCellXOffset()",
          "description": "Returns the horizontal pixel offset from the anchor cell.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getAnchorCellYOffset()",
          "description": "Returns the vertical pixel offset from the anchor cell.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHeight()",
          "description": "Returns the actual height of this image in pixels.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getInherentHeight()",
          "description": "Returns the inherent height of this image in pixels.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getInherentWidth()",
          "description": "Returns the inherent height of this image in pixels.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getScript()",
          "description": "Returns the name of the function assigned to this image.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSheet()",
          "description": "Returns the sheet this image appears on.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "getWidth()",
          "description": "Returns the actual width of this image in pixels.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Deletes this image from the spreadsheet. Any further operation on the image results in a script\nerror.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "blob",
              "type": {
                "name": "BlobSource",
                "url": "https://developers.google.com/apps-script/reference/base/blob-source.html"
              },
              "description": "The new image as a Blob."
            }
          ],
          "name": "replace(blob)",
          "description": "Replaces this image with the one specified by the providedBlobSource. The maximum\nsupported blob size is 2MB.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "url",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The URL of the new image."
            }
          ],
          "name": "replace(url)",
          "description": "Replaces this image with the one from the specified URL.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "resetSize()",
          "description": "Resets this image to its inherent dimensions.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "description",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new alt text description for the image."
            }
          ],
          "name": "setAltTextDescription(description)",
          "description": "Sets the alt-text description for this image.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new alt text title for the image."
            }
          ],
          "name": "setAltTextTitle(title)",
          "description": "Sets the alt text title for this image.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "cell",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The new anchor cell."
            }
          ],
          "name": "setAnchorCell(cell)",
          "description": "Sets the cell where an image is anchored.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "offset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The new horizonal pixel offset."
            }
          ],
          "name": "setAnchorCellXOffset(offset)",
          "description": "Sets the horizontal pixel offset from the anchor cell.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "offset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The new vertical pixel offset."
            }
          ],
          "name": "setAnchorCellYOffset(offset)",
          "description": "Sets the vertical pixel offset from the anchor cell.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "height",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The desired height in pixels."
            }
          ],
          "name": "setHeight(height)",
          "description": "Sets the actual height of this image in pixels.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "width",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The desired width in pixels."
            }
          ],
          "name": "setWidth(width)",
          "description": "Sets the actual width of this image in pixels.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getUrl()",
          "description": "Deprecated.For most newly inserted images, the source URL is unavailable.",
          "return_type": {
            "name": "String",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class PageProtection",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/page-protection",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "email",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The email of the user to add."
            }
          ],
          "name": "addUser(email)",
          "description": "Deprecated.This function is deprecated and should not be used in new scripts.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getUsers()",
          "description": "Deprecated.This function is deprecated and should not be used in new scripts.",
          "return_type": {
            "name": "String[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isProtected()",
          "description": "Deprecated.This function is deprecated and should not be used in new scripts.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "user",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The email address of the user to remove."
            }
          ],
          "name": "removeUser(user)",
          "description": "Deprecated.This function is deprecated and should not be used in new scripts.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "protection",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueto enable sheet protection,falseto disable sheet\n    protection."
            }
          ],
          "name": "setProtected(protection)",
          "description": "Deprecated.This function is deprecated and should not be used in new scripts.",
          "return_type": {
            "name": "void",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class PivotFilter",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getFilterCriteria()",
          "description": "Returns the filter criteria for this pivot filter.",
          "return_type": {
            "name": "FilterCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
          }
        },
        {
          "parameters": [],
          "name": "getPivotTable()",
          "description": "Returns thePivotTablethat this filter belongs to.",
          "return_type": {
            "name": "PivotTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table"
          }
        },
        {
          "parameters": [],
          "name": "getSourceDataColumn()",
          "description": "Returns the number of the source data column this filter operates on. These indices are\n1-based, for example if this filter applies to data in column A of the spreadsheet this method\nreturns \"1.\"",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSourceDataSourceColumn()",
          "description": "Returns the data source column the filter operates on. Returnsnullif the pivot table\nis not a {DataSourcePivotTableApi}.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes this pivot filter from the pivot table.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "filterCriteria",
              "type": {
                "name": "FilterCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
              },
              "description": "The filter criteria to set."
            }
          ],
          "name": "setFilterCriteria(filterCriteria)",
          "description": "Sets the filter criteria for this pivot filter.",
          "return_type": {
            "name": "PivotFilter",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class PivotGroup",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "groupName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of this grouping rule."
            },
            {
              "name": "groupMembers",
              "type": {
                "name": "Object[]",
                "url": null
              },
              "description": "The values that are included in this grouping rule."
            }
          ],
          "name": "addManualGroupingRule(groupName, groupMembers)",
          "description": "Adds a manual grouping rule for this pivot group.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "areLabelsRepeated()",
          "description": "Returns whether labels are displayed as repeated.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "clearGroupingRule()",
          "description": "Removes any grouping rules from this pivot group.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearSort()",
          "description": "Removes any sorting applied to this group.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getDateTimeGroupingRule()",
          "description": "Returns the date-time grouping rule on the pivot group, ornullif no date-time\ngrouping rule is set.",
          "return_type": {
            "name": "DateTimeGroupingRule",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/date-time-grouping-rule"
          }
        },
        {
          "parameters": [],
          "name": "getDimension()",
          "description": "Returns whether this is a row or column group.",
          "return_type": {
            "name": "Dimension",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/dimension"
          }
        },
        {
          "parameters": [],
          "name": "getGroupLimit()",
          "description": "Returns the pivot group limit on the pivot group. Returnsnullif no pivot group limit\nis set.",
          "return_type": {
            "name": "PivotGroupLimit",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group-limit"
          }
        },
        {
          "parameters": [],
          "name": "getIndex()",
          "description": "Returns the index of this pivot group in the current group order.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getPivotTable()",
          "description": "Returns thePivotTablewhich this grouping belongs to.",
          "return_type": {
            "name": "PivotTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table"
          }
        },
        {
          "parameters": [],
          "name": "getSourceDataColumn()",
          "description": "Returns the number of the source data column this group summarizes. This index is 1-based, if\nthis group summarizes source data in column \"A\" of the spreadsheet this method returns1.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSourceDataSourceColumn()",
          "description": "Returns the data source column the pivot group operates on. Returnsnullif the pivot\ntable is not a {DataSourcePivotTableApi}.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "hideRepeatedLabels()",
          "description": "Hides repeated labels for this grouping. If labels are already hidden this results in a no-op.\nIf this method is called before there are multiple row or column groupings, when an additional\ngrouping is added repeated labels are hidden.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "isSortAscending()",
          "description": "Returnstrueif the sort is ascending, returnsfalseif the sort order is\ndescending.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "index",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index to move this grouping to."
            }
          ],
          "name": "moveToIndex(index)",
          "description": "Moves this group to the specified position in the current list of row or column groups. These\nindices are 0-based. For example, if this group should be moved to the first position this\nmethod should be called with0.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes this pivot group from the table.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "groupName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the grouping rule to remove."
            }
          ],
          "name": "removeManualGroupingRule(groupName)",
          "description": "Removes the manual grouping rule with the specifiedgroupName.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "resetDisplayName()",
          "description": "Resets the display name of this group in the pivot table to its default value.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "dateTimeGroupingRuleType",
              "type": {
                "name": "DateTimeGroupingRuleType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/date-time-grouping-rule-type"
              },
              "description": "The rule type to set."
            }
          ],
          "name": "setDateTimeGroupingRule(dateTimeGroupingRuleType)",
          "description": "Sets the date-time grouping rule on the pivot group.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The display name to set."
            }
          ],
          "name": "setDisplayName(name)",
          "description": "Sets the display name of this group in the pivot table.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "countLimit",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The count limit of rows or columns to set. Must be positive."
            }
          ],
          "name": "setGroupLimit(countLimit)",
          "description": "Sets the pivot group limit on the pivot group. The operation is only supported forDataSourcePivotTable.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "minValue",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The minimum value for items to be placed into buckets. Values less than this\n    are combined into a single bucket."
            },
            {
              "name": "maxValue",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The maximum value for items to be placed into buckets. Values greater than this\n    are combined into a single bucket."
            },
            {
              "name": "intervalSize",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": ""
            }
          ],
          "name": "setHistogramGroupingRule(minValue, maxValue, intervalSize)",
          "description": "Sets a histogram grouping rule for this pivot group. A histogram rule organizes values in a\nsource data column into buckets of a constant size. All values fromminValuetomaxValueare placed into groups of sizeinterval. All values belowminValueare placed into one bucket, as are all values greater thanmaxValue.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "showRepeatedLabels()",
          "description": "When there is more than one row or column grouping, this method displays this grouping's label\nfor each entry of the subsequent grouping. If labels are already repeated this results in a\nno-op. If this method is called before there are multiple row or column groupings, when an\nadditional grouping is added repeated labels are shown.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "showTotals",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether to show totals or not."
            }
          ],
          "name": "showTotals(showTotals)",
          "description": "Sets whether to show total values for this pivot group in the table.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "sortAscending()",
          "description": "Sets the sort order to be ascending.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "value",
              "type": {
                "name": "PivotValue",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value"
              },
              "description": "The pivot value to sort by."
            },
            {
              "name": "oppositeGroupValues",
              "type": {
                "name": "Object[]",
                "url": null
              },
              "description": "The values of an opposite pivot group (a column group if sorting a\n    row group, or a row group if sorting a column group) that are used to sort. The order of\n    these values determines precedence for tie breaking."
            }
          ],
          "name": "sortBy(value, oppositeGroupValues)",
          "description": "Sorts this group by the specifiedPivotValuefor the values from theoppositeGroupValues.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "sortDescending()",
          "description": "Sets the sort order to be descending.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "totalsAreShown()",
          "description": "Returns whether total values are currently shown for this pivot group.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class PivotGroupLimit",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group-limit",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getCountLimit()",
          "description": "Gets the count limit on rows or columns in the pivot group.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getPivotGroup()",
          "description": "Returns the pivot group the limit belongs to.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Removes the pivot group limit.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "countLimit",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The count limit on rows or columns to set. Must be positive."
            }
          ],
          "name": "setCountLimit(countLimit)",
          "description": "Sets the count limit on rows or columns in the pivot group.",
          "return_type": {
            "name": "PivotGroupLimit",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class PivotTable",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name for this calculated pivot value."
            },
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The formula used to calculate this value."
            }
          ],
          "name": "addCalculatedPivotValue(name, formula)",
          "description": "Creates a new pivot value in the pivot table calculated from the specifiedformulawith\nthe specifiedname.",
          "return_type": {
            "name": "PivotValue",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value"
          }
        },
        {
          "parameters": [
            {
              "name": "sourceDataColumn",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of the column this group summarizes. This index represents\n    the absolute number of the column in the spreadsheet;1representing column \"A,\"2representing column B, etc."
            }
          ],
          "name": "addColumnGroup(sourceDataColumn)",
          "description": "Defines a new pivot column grouping in the pivot table. The specifiedsourceDataColumnindicates the column in the source data this grouping is based on.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group"
          }
        },
        {
          "parameters": [
            {
              "name": "sourceDataColumn",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of the column this group summarizes. This index represents\n    the absolute number of the column in the spreadsheet;1representing column \"A,\"2representing column B, etc."
            },
            {
              "name": "filterCriteria",
              "type": {
                "name": "FilterCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
              },
              "description": "The filter criteria used to perform the filtering."
            }
          ],
          "name": "addFilter(sourceDataColumn, filterCriteria)",
          "description": "Creates a new pivot filter for the pivot table. The specifiedsourceDataColumnindicates the column in the source data this filter operates on.",
          "return_type": {
            "name": "PivotFilter",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter"
          }
        },
        {
          "parameters": [
            {
              "name": "sourceDataColumn",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of the column this group summarizes. This index represents\n    the absolute number of the column in the spreadsheet;1representing column \"A,\"2representing column B, etc."
            },
            {
              "name": "summarizeFunction",
              "type": {
                "name": "PivotTableSummarizeFunction",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table-summarize-function"
              },
              "description": ""
            }
          ],
          "name": "addPivotValue(sourceDataColumn, summarizeFunction)",
          "description": "Defines a new pivot value in the pivot table with the specifiedsummarizeFunction. The\nspecifiedsourceDataColumnindicates the column in the source data this value is based\non.",
          "return_type": {
            "name": "PivotValue",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value"
          }
        },
        {
          "parameters": [
            {
              "name": "sourceDataColumn",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of the column this group summarizes. This index represents\n    the absolute number of the column in the spreadsheet;1representing column \"A,\"2representing column B, etc."
            }
          ],
          "name": "addRowGroup(sourceDataColumn)",
          "description": "Defines a new pivot row grouping in the pivot table. The specifiedsourceDataColumnindicates the column in the source data this grouping is based on.",
          "return_type": {
            "name": "PivotGroup",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group"
          }
        },
        {
          "parameters": [],
          "name": "asDataSourcePivotTable()",
          "description": "Returns the pivot table as a data source pivot table if the pivot table is linked to aDataSource, ornullotherwise.",
          "return_type": {
            "name": "DataSourcePivotTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-pivot-table"
          }
        },
        {
          "parameters": [],
          "name": "getAnchorCell()",
          "description": "Returns theRangerepresenting the cell where this pivot table is anchored.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getColumnGroups()",
          "description": "Returns an ordered list of the column groups in this pivot table.",
          "return_type": {
            "name": "PivotGroup[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group"
          }
        },
        {
          "parameters": [],
          "name": "getFilters()",
          "description": "Returns an ordered list of the filters in this pivot table.",
          "return_type": {
            "name": "PivotFilter[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter"
          }
        },
        {
          "parameters": [],
          "name": "getPivotValues()",
          "description": "Returns an ordered list of the pivot values in this pivot table.",
          "return_type": {
            "name": "PivotValue[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value"
          }
        },
        {
          "parameters": [],
          "name": "getRowGroups()",
          "description": "Returns an ordered list of the row groups in this pivot table.",
          "return_type": {
            "name": "PivotGroup[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group"
          }
        },
        {
          "parameters": [],
          "name": "getSourceDataRange()",
          "description": "Returns the source data range on which the pivot table is constructed.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getValuesDisplayOrientation()",
          "description": "Returns whether values are displayed as rows or columns.",
          "return_type": {
            "name": "Dimension",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/dimension"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Deletes this pivot table. Further operations on this pivot table results in an error.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "dimension",
              "type": {
                "name": "Dimension",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/dimension"
              },
              "description": "The dimension indicating how to display pivot values."
            }
          ],
          "name": "setValuesDisplayOrientation(dimension)",
          "description": "Sets the layout of this pivot table to display values as columns or rows.",
          "return_type": {
            "name": "PivotTable",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum PivotTableSummarizeFunction",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table-summarize-function",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "CUSTOM",
          "description": "A custom function, this value is only valid for calculated fields."
        },
        {
          "name": "SUM",
          "description": "TheSUMfunction"
        },
        {
          "name": "COUNTA",
          "description": "TheCOUNTAfunction"
        },
        {
          "name": "COUNT",
          "description": "TheCOUNTfunction"
        },
        {
          "name": "COUNTUNIQUE",
          "description": "TheCOUNTUNIQUEfunction"
        },
        {
          "name": "AVERAGE",
          "description": "TheAVERAGEfunction"
        },
        {
          "name": "MAX",
          "description": "TheMAXfunction"
        },
        {
          "name": "MIN",
          "description": "TheMINfunction"
        },
        {
          "name": "MEDIAN",
          "description": "TheMEDIANfunction"
        },
        {
          "name": "PRODUCT",
          "description": "ThePRODUCTfunction"
        },
        {
          "name": "STDEV",
          "description": "TheSTDEVfunction"
        },
        {
          "name": "STDEVP",
          "description": "TheSTDEVPfunction"
        },
        {
          "name": "VAR",
          "description": "TheVARfunction"
        },
        {
          "name": "VARP",
          "description": "TheVARPfunction"
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class PivotValue",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getDisplayType()",
          "description": "Returns the display type describing how this pivot value is currently displayed in the table.",
          "return_type": {
            "name": "PivotValueDisplayType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value-display-type"
          }
        },
        {
          "parameters": [],
          "name": "getFormula()",
          "description": "Returns the formula used to calculate this value. If this value is not a calculated field this\nmethod returnsnull.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getPivotTable()",
          "description": "Returns thePivotTablewhich this value belongs to.",
          "return_type": {
            "name": "PivotTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table"
          }
        },
        {
          "parameters": [],
          "name": "getSourceDataColumn()",
          "description": "Returns the number of the source data column the pivot value summarizes. This index is 1-based,\nif this group summarizes source data in column \"A\" of the spreadsheet this method returns1.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSourceDataSourceColumn()",
          "description": "Returns the data source column the pivot value summarizes. Returnsnullif the pivot\ntable is not a {DataSourcePivotTableApi}.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "getSummarizedBy()",
          "description": "Returns this group’s summarization function.",
          "return_type": {
            "name": "PivotTableSummarizeFunction",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table-summarize-function"
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Remove this value from the pivot table.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The display name to set."
            }
          ],
          "name": "setDisplayName(name)",
          "description": "Sets the display name for this value in the pivot table.",
          "return_type": {
            "name": "PivotValue",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The formula to use to calculate this value."
            }
          ],
          "name": "setFormula(formula)",
          "description": "Sets the formula used to calculate this value. If this value is not a calculated field this\nmethod results in an error.",
          "return_type": {
            "name": "PivotValue",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "displayType",
              "type": {
                "name": "PivotValueDisplayType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value-display-type"
              },
              "description": "The way to display the values."
            }
          ],
          "name": "showAs(displayType)",
          "description": "Displays this value in the pivot table as a function of another value.",
          "return_type": {
            "name": "PivotValue",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "summarizeFunction",
              "type": {
                "name": "PivotTableSummarizeFunction",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table-summarize-function"
              },
              "description": "The function to use to summarize data in this value's source data\n    column."
            }
          ],
          "name": "summarizeBy(summarizeFunction)",
          "description": "Sets the summarization function.",
          "return_type": {
            "name": "PivotValue",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum PivotValueDisplayType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value-display-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "DEFAULT",
          "description": "Default. Displays pivot values as the actual value and not as a function of another value."
        },
        {
          "name": "PERCENT_OF_ROW_TOTAL",
          "description": "Displays pivot values as a percent of the total for that row."
        },
        {
          "name": "PERCENT_OF_COLUMN_TOTAL",
          "description": "Displays pivot values as a percent of the total for that column."
        },
        {
          "name": "PERCENT_OF_GRAND_TOTAL",
          "description": "Displays pivot values as a percent of the grand total."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class Protection",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/protection",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "emailAddress",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The email address of the user to add."
            }
          ],
          "name": "addEditor(emailAddress)",
          "description": "Adds the given user to the list of editors for the protected sheet or range. This method does\nnot automatically give the user permission to edit the spreadsheet itself; to do that in\naddition, callSpreadsheet.addEditor(emailAddress).",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "user",
              "type": {
                "name": "User",
                "url": "https://developers.google.com/apps-script/reference/base/user.html"
              },
              "description": "A representation of the user to add."
            }
          ],
          "name": "addEditor(user)",
          "description": "Adds the given user to the list of editors for the protected sheet or range. This method does\nnot automatically give the user permission to edit the spreadsheet itself; to do that in\naddition, callSpreadsheet.addEditor(user).",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "emailAddresses",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of email addresses of the users to add."
            }
          ],
          "name": "addEditors(emailAddresses)",
          "description": "Adds the given array of users to the list of editors for the protected sheet or range. This\nmethod does not automatically give the users permission to edit the spreadsheet itself; to do\nthat in addition, callSpreadsheet.addEditors(emailAddresses).",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "audienceId",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The ID of the target audience to add."
            }
          ],
          "name": "addTargetAudience(audienceId)",
          "description": "Adds the specified target audience as an editor of the protected range.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "canDomainEdit()",
          "description": "Determines whether all users in the domain that owns the spreadsheet have permission to edit\nthe protected range or sheet. Throws an exception if the user does not have permission to edit\nthe protected range or sheet.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "canEdit()",
          "description": "Determines whether the user has permission to edit the protected range or sheet. The\nspreadsheet owner is always able to edit protected ranges and sheets.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getDescription()",
          "description": "Gets the description of the protected range or sheet. If no description is set, this method\nreturns an empty string.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getEditors()",
          "description": "Gets the list of editors for the protected range or sheet. Throws an exception if the user does\nnot have permission to edit the protected range or sheet.",
          "return_type": {
            "name": "User[]",
            "url": "https://developers.google.com/apps-script/reference/base/user.html"
          }
        },
        {
          "parameters": [],
          "name": "getProtectionType()",
          "description": "Gets the type of the protected area, eitherRANGEorSHEET.",
          "return_type": {
            "name": "ProtectionType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/protection-type"
          }
        },
        {
          "parameters": [],
          "name": "getRange()",
          "description": "Gets the range that is being protected. If the protection applies to the sheet instead of a\nrange, this method returns a range that spans the entire sheet.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getRangeName()",
          "description": "Gets the name of the protected range if it is associated with a named range. Returnsnullif the protection is not associated with a named range. Note that scripts must explicitly\ncallsetRangeName(rangeName)to associate a protected range with a named range; callingRange.protect()to create a protection from aRangethat happens to be a\nnamed range, without callingsetRangeName(rangeName), is not sufficient to associate\nthem. However, creating a protected range from a named range in the Google Sheets UI associates\nthem automatically.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getTargetAudiences()",
          "description": "Returns the IDs of the target audiences that can edit the protected range.",
          "return_type": {
            "name": "TargetAudience[]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getUnprotectedRanges()",
          "description": "Gets an array of unprotected ranges within a protected sheet. If theProtectionobject\ncorresponds to a protected range instead of a protected sheet, this method returns an empty\narray. To change the unprotected ranges, usesetUnprotectedRanges(ranges)to set a\nnew array of ranges; to re-protect the entire sheet, set an empty array.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "isWarningOnly()",
          "description": "Determines if the protected area is using \"warning based\" protection. Warning-based protection\nmeans that every user can edit data in the area, except editing prompts a warning asking the\nuser to confirm the edit. By default, protected ranges or sheets are not warning-based. To\nchange to the warning state, usesetWarningOnly(warningOnly).",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Unprotects the range or sheet.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "emailAddress",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The email address of the user to remove."
            }
          ],
          "name": "removeEditor(emailAddress)",
          "description": "Removes the given user from the list of editors for the protected sheet or range. Note that if\nthe user is a member of a Google Group that has edit permission, or if all users in the domain\nhave edit permission, the user are still be able to edit the protected area. Neither the owner\nof the spreadsheet nor the current user can be removed.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "user",
              "type": {
                "name": "User",
                "url": "https://developers.google.com/apps-script/reference/base/user.html"
              },
              "description": "A representation of the user to remove."
            }
          ],
          "name": "removeEditor(user)",
          "description": "Removes the given user from the list of editors for the protected sheet or range. Note that if\nthe user is a member of a Google Group that has edit permission, or if all users in the domain\nhave edit permission, the user is still be able to edit the protected area as well. Neither the\nowner of the spreadsheet nor the current user can be removed.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "emailAddresses",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of email addresses of the users to remove."
            }
          ],
          "name": "removeEditors(emailAddresses)",
          "description": "Removes the given array of users from the list of editors for the protected sheet or range.\nNote that if any of the users are members of a Google Group that has edit permission, or if all\nusers in the domain have edit permission, those users are still be able to edit the protected\narea. Neither the owner of the spreadsheet nor the current user can be removed.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "audienceId",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The ID of the target audience to remove."
            }
          ],
          "name": "removeTargetAudience(audienceId)",
          "description": "Removes the specified target audience as an editor of the protected range.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "description",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The description of the protected range or sheet."
            }
          ],
          "name": "setDescription(description)",
          "description": "Sets the description of the protected range or sheet.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "editable",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueif all users in the domain that owns the spreadsheet should have\n    permission to edit the protected range or sheet;falseif not."
            }
          ],
          "name": "setDomainEdit(editable)",
          "description": "Sets whether all users in the domain that owns the spreadsheet have permission to edit the\nprotected range or sheet. Note that any users who have explicit edit permission are able to\nedit the protected area regardless of this setting. Throws an exception if the spreadsheet does\nnot belong to a Google Workspace domain (that is, if it is owned by a gmail.com account).",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "namedRange",
              "type": {
                "name": "NamedRange",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/named-range"
              },
              "description": "The existing named range to associate with the protected range."
            }
          ],
          "name": "setNamedRange(namedRange)",
          "description": "Associates the protected range with an existing named range. If the named range covers a\ndifferent area from the current protected range, this method moves the protection to cover the\nthe named range instead. The named range must be on the same sheet as the current protected\nrange. Note that scripts must explicitly call this method to associate a protected range with a\nnamed range; callingRange.protect()to create a protection from aRangethat happens to be a named range, without callingsetRangeName(rangeName), is not\nsufficient to associate them. However, creating a protected range from a named range in the\nGoogle Sheets UI associates them automatically.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The new range to protect from edits."
            }
          ],
          "name": "setRange(range)",
          "description": "Adjusts the range that is being protected. If the given range covers a different area from the\ncurrent protected range, this method moves the protection to cover the new range instead.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rangeName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the named range to be protected."
            }
          ],
          "name": "setRangeName(rangeName)",
          "description": "Associates the protected range with an existing named range. If the named range covers a\ndifferent area from the current protected range, this method moves the protection to cover the\nthe named range instead. The named range must be on the same sheet as the current protected\nrange. Note that scripts must explicitly call this method to associate a protected range with a\nnamed range; callingRange.protect()to create a protection from aRangethat happens to be a named range, without callingsetRangeName(rangeName), is not\nsufficient to associate them. However, creating a protected range from a named range in the\nGoogle Sheets UI associates them automatically.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "ranges",
              "type": {
                "name": "Range[]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The array of ranges to leave unprotected within a protected sheet."
            }
          ],
          "name": "setUnprotectedRanges(ranges)",
          "description": "Unprotects the given array of ranges within a protected sheet. Throws an exception if theProtectionobject corresponds to a protected range instead of a protected sheet or if\nany of the ranges are not on the protected sheet. To change the unprotected ranges, set a new\narray of ranges; to re-protect the entire sheet, set an empty array.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "warningOnly",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": ""
            }
          ],
          "name": "setWarningOnly(warningOnly)",
          "description": "Sets whether or not this protected range is using \"warning based\" protection. Warning-based\nprotection means that every user can edit data in the area, except editing prompts a warning\nasking the user to confirm the edit. By default, protected ranges or sheets are not\nwarning-based. To check warning state, useisWarningOnly().",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum ProtectionType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/protection-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "RANGE",
          "description": "Protection for a range."
        },
        {
          "name": "SHEET",
          "description": "Protection for a sheet."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class Range",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/range",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "activate()",
          "description": "Sets the specified range as theactive range, with the top\nleft cell in the range as thecurrent cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "activateAsCurrentCell()",
          "description": "Sets the specified cell as thecurrent cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key)",
          "description": "Adds developer metadata with the specified key to the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            },
            {
              "name": "visibility",
              "type": {
                "name": "DeveloperMetadataVisibility",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility"
              },
              "description": "The visibility of the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key, visibility)",
          "description": "Adds developer metadata with the specified key and visibility to the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value for the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key, value)",
          "description": "Adds developer metadata with the specified key and value to the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value for the new developer metadata."
            },
            {
              "name": "visibility",
              "type": {
                "name": "DeveloperMetadataVisibility",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility"
              },
              "description": "The visibility of the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key, value, visibility)",
          "description": "Adds developer metadata with the specified key, value, and visibility to the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "applyColumnBanding()",
          "description": "Applies a default column banding theme to the range. By default, the banding has header and no\nfooter color.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding"
          }
        },
        {
          "parameters": [
            {
              "name": "bandingTheme",
              "type": {
                "name": "BandingTheme",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding-theme"
              },
              "description": "A color theme to apply to the columns in the range."
            }
          ],
          "name": "applyColumnBanding(bandingTheme)",
          "description": "Applies a specified column banding theme to the range. By default, the banding has header and\nno footer color.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding"
          }
        },
        {
          "parameters": [
            {
              "name": "bandingTheme",
              "type": {
                "name": "BandingTheme",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding-theme"
              },
              "description": "A color theme to apply to the columns in the range."
            },
            {
              "name": "showHeader",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the banding theme header color is applied to the first\n    column."
            },
            {
              "name": "showFooter",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the banding theme footer color is applied to the last\n    column."
            }
          ],
          "name": "applyColumnBanding(bandingTheme, showHeader, showFooter)",
          "description": "Applies a specified column banding theme to the range with specified header and footer\nsettings.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding"
          }
        },
        {
          "parameters": [],
          "name": "applyRowBanding()",
          "description": "Applies a default row banding theme to the range. By default, the banding has header and no\nfooter color.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding"
          }
        },
        {
          "parameters": [
            {
              "name": "bandingTheme",
              "type": {
                "name": "BandingTheme",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding-theme"
              },
              "description": "A color theme to apply to the rows in the range."
            }
          ],
          "name": "applyRowBanding(bandingTheme)",
          "description": "Applies a specified row banding theme to the range. By default, the banding has header and no\nfooter color.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding"
          }
        },
        {
          "parameters": [
            {
              "name": "bandingTheme",
              "type": {
                "name": "BandingTheme",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding-theme"
              },
              "description": "A color theme to apply to the rows in the range."
            },
            {
              "name": "showHeader",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the banding theme header color is applied to the first row."
            },
            {
              "name": "showFooter",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the banding theme footer color is applied to the last row."
            }
          ],
          "name": "applyRowBanding(bandingTheme, showHeader, showFooter)",
          "description": "Applies a specified row banding theme to the range with specified header and footer settings.",
          "return_type": {
            "name": "Banding",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding"
          }
        },
        {
          "parameters": [
            {
              "name": "destination",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference"
              },
              "description": "The range to be auto-filled with values. The destination range should\n    contain this range and extend it in only one direction (upwards, downwards, left, or\n    right)."
            },
            {
              "name": "series",
              "type": {
                "name": "AutoFillSeries",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/auto-fill-series"
              },
              "description": "The type of autoFill series that should be used to calculate new values. The\n    effect of this series differs based on the type and amount of source data."
            }
          ],
          "name": "autoFill(destination, series)",
          "description": "Fills thedestinationRangewith data based on the data in this range. The new values\nare also determined by the specifiedseriestype. The destination range must contain\nthis range and extend it in only one direction. For example, the following fillsA1:A20with a series of increasing numbers based on the current values inA1:A4:",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "series",
              "type": {
                "name": "AutoFillSeries",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/auto-fill-series"
              },
              "description": "The type of autoFill series that should be used to calculate new values. The\n    effect of this series differs based on the type and amount of source data."
            }
          ],
          "name": "autoFillToNeighbor(series)",
          "description": "Calculates a range to fill with new data based on neighboring cells and automatically fills\nthat range with new values based on the data contained in this range. These new values are also\ndetermined by the specifiedseriestype.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "breakApart()",
          "description": "Break any multi-column cells in the range into individual cells again.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "canEdit()",
          "description": "Determines whether the user has permission to edit every cell in the range. The spreadsheet\nowner is always able to edit protected ranges and sheets.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "check()",
          "description": "Changes the state of the checkboxes in the range to “checked”. Ignores the cells in the range\nwhich currently do not contain either the checked or unchecked value configured.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clear()",
          "description": "Clears the range of contents and formats.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "options",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "A JavaScript object that specifies advanced parameters, as listed below."
            }
          ],
          "name": "clear(options)",
          "description": "Clears the range of contents, format, data validation rules, and/or comments, as specified with\nthe given advanced options. By default all data is cleared.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearContent()",
          "description": "Clears the content of the range, leaving the formatting intact.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearDataValidations()",
          "description": "Clears the data validation rules for the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearFormat()",
          "description": "Clears formatting for this range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearNote()",
          "description": "Clears the note in the given cell or cells.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "collapseGroups()",
          "description": "Collapses all groups that are wholly contained within the range. If no group is fully within\nthe range, the deepest expanded group that is partially within the range is collapsed.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "gridId",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The unique ID of the sheet within the spreadsheet, irrespective of position."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The first column of the target range."
            },
            {
              "name": "columnEnd",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end column of the target range."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The start row of the target range."
            },
            {
              "name": "rowEnd",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end row of the target range."
            }
          ],
          "name": "copyFormatToRange(gridId, column, columnEnd, row, rowEnd)",
          "description": "Copy the formatting of the range to the given location. If the destination is larger or smaller\nthan the source range then the source is repeated or truncated accordingly. Note that this\nmethod copies the formatting only.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "sheet",
              "type": {
                "name": "Sheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
              },
              "description": "The target sheet."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The first column of the target range."
            },
            {
              "name": "columnEnd",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end column of the target range."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The start row of the target range."
            },
            {
              "name": "rowEnd",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end row of the target range."
            }
          ],
          "name": "copyFormatToRange(sheet, column, columnEnd, row, rowEnd)",
          "description": "Copy the formatting of the range to the given location. If the destination is larger or smaller\nthan the source range then the source is repeated or truncated accordingly. Note that this\nmethod copies the formatting only.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "destination",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference"
              },
              "description": "A destination range to copy to; only the top-left cell position is relevant."
            }
          ],
          "name": "copyTo(destination)",
          "description": "Copies the data from a range of cells to another range of cells. Both the values and formatting\nare copied.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "destination",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference"
              },
              "description": "A destination range to copy to; only the top-left cell position is relevant."
            },
            {
              "name": "copyPasteType",
              "type": {
                "name": "CopyPasteType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/copy-paste-type"
              },
              "description": "A type that specifies how the range contents are pasted to the\n    destination."
            },
            {
              "name": "transposed",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether the range should be pasted in its transposed orientation."
            }
          ],
          "name": "copyTo(destination, copyPasteType, transposed)",
          "description": "Copies the data from a range of cells to another range of cells.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "destination",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference"
              },
              "description": "A destination range to copy to; only the top-left cell position is relevant."
            },
            {
              "name": "options",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "A JavaScript object that specifies advanced parameters, as listed below."
            }
          ],
          "name": "copyTo(destination, options)",
          "description": "Copies the data from a range of cells to another range of cells. By default both the values and\nformatting are copied, but this can be overridden using advanced arguments.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "gridId",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The unique ID of the sheet within the spreadsheet, irrespective of position."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The first column of the target range."
            },
            {
              "name": "columnEnd",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end column of the target range."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The start row of the target range."
            },
            {
              "name": "rowEnd",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end row of the target range."
            }
          ],
          "name": "copyValuesToRange(gridId, column, columnEnd, row, rowEnd)",
          "description": "Copy the content of the range to the given location. If the destination is larger or smaller\nthan the source range then the source is repeated or truncated accordingly.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "sheet",
              "type": {
                "name": "Sheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
              },
              "description": "The target sheet."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The first column of the target range."
            },
            {
              "name": "columnEnd",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end column of the target range."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The start row of the target range."
            },
            {
              "name": "rowEnd",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end row of the target range."
            }
          ],
          "name": "copyValuesToRange(sheet, column, columnEnd, row, rowEnd)",
          "description": "Copy the content of the range to the given location. If the destination is larger or smaller\nthan the source range then the source is repeated or truncated accordingly.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "dataSource",
              "type": {
                "name": "DataSource",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source"
              },
              "description": "The data source to create the pivot table from."
            }
          ],
          "name": "createDataSourcePivotTable(dataSource)",
          "description": "Creates an empty data source pivot table from the data source, anchored at the first cell in\nthis range.",
          "return_type": {
            "name": "DataSourcePivotTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-pivot-table"
          }
        },
        {
          "parameters": [
            {
              "name": "dataSource",
              "type": {
                "name": "DataSource",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source"
              },
              "description": "The data source to create the pivot table from."
            }
          ],
          "name": "createDataSourceTable(dataSource)",
          "description": "Creates an empty data source table from the data source, anchored at the first cell in this\nrange.",
          "return_type": {
            "name": "DataSourceTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table"
          }
        },
        {
          "parameters": [],
          "name": "createDeveloperMetadataFinder()",
          "description": "Returns a DeveloperMetadataFinderApi for finding developer metadata within the scope of this\nrange. Metadata is within the scope of the range only if it is wholly contained within that\nrange. For example, metadata associated with the row ‘3:3’ is not in the scope of a range\n‘A1:D5’ but is within the scope of a range ‘1:5’.",
          "return_type": {
            "name": "DeveloperMetadataFinder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-finder"
          }
        },
        {
          "parameters": [],
          "name": "createFilter()",
          "description": "Creates a filter and applies it to the specified range on the sheet. You can't create more than\none filter on a sheet. To access and modify your filter after you create it, usegetFilter()orSheet.getFilter().",
          "return_type": {
            "name": "Filter",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter"
          }
        },
        {
          "parameters": [
            {
              "name": "sourceData",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference"
              },
              "description": "The data to create the pivot table from."
            }
          ],
          "name": "createPivotTable(sourceData)",
          "description": "Creates an empty pivot table from the specifiedsourceDataanchored at the first cell\nin this range.",
          "return_type": {
            "name": "PivotTable",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table"
          }
        },
        {
          "parameters": [
            {
              "name": "findText",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text to search for."
            }
          ],
          "name": "createTextFinder(findText)",
          "description": "Creates a text finder for the range, which can find and replace text in this range.",
          "return_type": {
            "name": "TextFinder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-finder"
          }
        },
        {
          "parameters": [
            {
              "name": "shiftDimension",
              "type": {
                "name": "Dimension",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/dimension"
              },
              "description": "The dimension along which to shift existing data."
            }
          ],
          "name": "deleteCells(shiftDimension)",
          "description": "Deletes this range of cells. Existing data in the sheet along the provided dimension is shifted\ntowards the deleted range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "expandGroups()",
          "description": "Expands the collapsed groups whose range or control toggle intersects with this range. The\ncontrol toggle location is the index at which the control toggle is shown, directly before or\nafter the group depending on settings. If there is more than one group at the same location,\nthe shallowest group is expanded.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getA1Notation()",
          "description": "Returns a string description of the range, in A1 notation.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getBackground()",
          "description": "Returns the background color of the top-left cell in the range (for example,'#ffffff').",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getBackgroundObject()",
          "description": "Returns the background color of the top-left cell in the range.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getBackgroundObjects()",
          "description": "Returns the background colors of the cells in the range.",
          "return_type": {
            "name": "Color[][]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getBackgrounds()",
          "description": "Returns the background colors of the cells in the range (for example,'#ffffff').",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getBandings()",
          "description": "Returns all the bandings that are applied to any cells in this range.",
          "return_type": {
            "name": "Banding[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding"
          }
        },
        {
          "parameters": [
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row of the cell relative to the range."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column of the cell relative to the range."
            }
          ],
          "name": "getCell(row, column)",
          "description": "Returns a given cell within a range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getColumn()",
          "description": "Returns the starting column position for this range.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getDataRegion()",
          "description": "Returns a copy of the range expanded in the four cardinalDirections to cover all\nadjacent cells with data in them. If the range is surrounded by empty cells not including those\nalong the diagonals, the range itself is returned. This is similar to selecting the range and\ntypingCtrl+Ain the editor.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "dimension",
              "type": {
                "name": "Dimension",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/dimension"
              },
              "description": "The dimension along which to expand the range."
            }
          ],
          "name": "getDataRegion(dimension)",
          "description": "Returns a copy of the range expandedDirection.UPandDirection.DOWNif the\nspecified dimension isDimension.ROWS, orDirection.NEXTandDirection.PREVIOUSif the dimension isDimension.COLUMNS. The expansion of the range\nis based on detecting data next to the range that is organized like a table. The expanded range\ncovers all adjacent cells with data in them along the specified dimension including the table\nboundaries. If the original range is surrounded by empty cells along the specified dimension,\nthe range itself is returned. This method is similar to selecting the range and typingCtrl+Spacefor columns orShift+Spacefor rows in the editor.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceFormula()",
          "description": "Returns theDataSourceFormulafor the first cell in the range, ornullif\nthe cell doesn't contain a data source formula.",
          "return_type": {
            "name": "DataSourceFormula",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-formula"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceFormulas()",
          "description": "Returns theDataSourceFormulas for the cells in the range.",
          "return_type": {
            "name": "DataSourceFormula[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-formula"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourcePivotTables()",
          "description": "Gets all the data source pivot tables intersecting with the range.",
          "return_type": {
            "name": "DataSourcePivotTable[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-pivot-table"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceTables()",
          "description": "Gets all the data source tables intersecting with the range.",
          "return_type": {
            "name": "DataSourceTable[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceUrl()",
          "description": "Returns a URL for the data in this range, which can be used to create charts and queries.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getDataTable()",
          "description": "Return the data inside this object as a DataTable.",
          "return_type": {
            "name": "DataTable",
            "url": "https://developers.google.com/apps-script/reference/charts/data-table.html"
          }
        },
        {
          "parameters": [
            {
              "name": "firstRowIsHeader",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether to treat the first row as a header."
            }
          ],
          "name": "getDataTable(firstRowIsHeader)",
          "description": "Return the data inside this range as a DataTable.",
          "return_type": {
            "name": "DataTable",
            "url": "https://developers.google.com/apps-script/reference/charts/data-table.html"
          }
        },
        {
          "parameters": [],
          "name": "getDataValidation()",
          "description": "Returns the data validation rule for the top-left cell in the range. If data validation has not\nbeen set on the cell, this method returnsnull.",
          "return_type": {
            "name": "DataValidation",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation"
          }
        },
        {
          "parameters": [],
          "name": "getDataValidations()",
          "description": "Returns the data validation rules for all cells in the range. If data validation has not been\nset on a given cell, this method returnsnullfor that cell's position in the array.",
          "return_type": {
            "name": "DataValidation[][]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation"
          }
        },
        {
          "parameters": [],
          "name": "getDeveloperMetadata()",
          "description": "Gets the developer metadata associated with this range.",
          "return_type": {
            "name": "DeveloperMetadata[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata"
          }
        },
        {
          "parameters": [],
          "name": "getDisplayValue()",
          "description": "Returns the displayed value of the top-left cell in the range. The value is aString.\nThe displayed value takes into account date, time and currency formatting formatting, including\nformats applied automatically by the spreadsheet's locale setting. Empty cells return an empty\nstring.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getDisplayValues()",
          "description": "Returns the rectangular grid of values for this range.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFilter()",
          "description": "Returns the filter on the sheet this range belongs to, ornullif there is no filter on\nthe sheet.",
          "return_type": {
            "name": "Filter",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter"
          }
        },
        {
          "parameters": [],
          "name": "getFontColorObject()",
          "description": "Returns the font color of the cell in the top-left corner of the range.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getFontColorObjects()",
          "description": "Returns the font colors of the cells in the range.",
          "return_type": {
            "name": "Color[][]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getFontFamilies()",
          "description": "Returns the font families of the cells in the range.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontFamily()",
          "description": "Returns the font family of the cell in the top-left corner of the range.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontLine()",
          "description": "Gets the line style of the cell in the top-left corner of the range ('underline','line-through', or'none').",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontLines()",
          "description": "Gets the line style of the cells in the range ('underline','line-through', or'none').",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontSize()",
          "description": "Returns the font size in point size of the cell in the top-left corner of the range.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontSizes()",
          "description": "Returns the font sizes of the cells in the range.",
          "return_type": {
            "name": "Integer[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontStyle()",
          "description": "Returns the font style ('italic'or'normal') of the cell in the top-left\ncorner of the range.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontStyles()",
          "description": "Returns the font styles of the cells in the range.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontWeight()",
          "description": "Returns the font weight (normal/bold) of the cell in the top-left corner of the range.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontWeights()",
          "description": "Returns the font weights of the cells in the range.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFormula()",
          "description": "Returns the formula (A1 notation) for the top-left cell of the range, or an empty string if the\ncell is empty or doesn't contain a formula.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFormulaR1C1()",
          "description": "Returns the formula (R1C1 notation) for a given cell, ornullif none.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFormulas()",
          "description": "Returns the formulas (A1 notation) for the cells in the range. Entries in the 2D array are\nempty strings for cells with no formula.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFormulasR1C1()",
          "description": "Returns the formulas (R1C1 notation) for the cells in the range. Entries in the 2D array arenullfor cells with no formula.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getGridId()",
          "description": "Returns the grid ID of the range's parent sheet. IDs are random non-negative int values.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHeight()",
          "description": "Returns the height of the range.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHorizontalAlignment()",
          "description": "Returns the horizontal alignment of the text (left/center/right) of the cell in the top-left\ncorner of the range.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getHorizontalAlignments()",
          "description": "Returns the horizontal alignments of the cells in the range.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getLastColumn()",
          "description": "Returns the end column position.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getLastRow()",
          "description": "Returns the end row position.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getMergedRanges()",
          "description": "Returns an array ofRangeobjects representing merged cells that either are fully\nwithin the current range, or contain at least one cell in the current range.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "direction",
              "type": {
                "name": "Direction",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/direction"
              },
              "description": "The direction in which to find the next data region edge cell."
            }
          ],
          "name": "getNextDataCell(direction)",
          "description": "Starting at the cell in the first column and row of the range, returns the next cell in the\ngiven direction that is the edge of a contiguous range of cells with data in them or the cell\nat the edge of the spreadsheet in that direction. This is equivalent to typingCtrl+[arrow key]in the editor.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getNote()",
          "description": "Returns the note associated with the given range.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getNotes()",
          "description": "Returns the notes associated with the cells in the range.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getNumColumns()",
          "description": "Returns the number of columns in this range.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getNumRows()",
          "description": "Returns the number of rows in this range.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getNumberFormat()",
          "description": "Get the number or date formatting of the top-left cell of the given range. The returned format\npatterns are described in theSheets API\ndocumentation.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getNumberFormats()",
          "description": "Returns the number or date formats for the cells in the range. The returned format patterns are\ndescribed in theSheets API documentation.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getRichTextValue()",
          "description": "Returns the Rich Text value for the top left cell of the range, ornullif the cell\nvalue is not text.",
          "return_type": {
            "name": "RichTextValue",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value"
          }
        },
        {
          "parameters": [],
          "name": "getRichTextValues()",
          "description": "Returns the Rich Text values for the cells in the range.",
          "return_type": {
            "name": "RichTextValue[][]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value"
          }
        },
        {
          "parameters": [],
          "name": "getRow()",
          "description": "Returns the row position for this range. Identical togetRowIndex().",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getRowIndex()",
          "description": "Returns the row position for this range. Identical togetRow().",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSheet()",
          "description": "Returns the sheet this range belongs to.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "getTextDirection()",
          "description": "Returns the text direction for the top left cell of the range. Returnsnullif the cell\ntext direction is determined with automatic detection.",
          "return_type": {
            "name": "TextDirection",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-direction"
          }
        },
        {
          "parameters": [],
          "name": "getTextDirections()",
          "description": "Returns the text directions for the cells in the range. Entries in the 2D array arenullfor cells using automatic detection.",
          "return_type": {
            "name": "TextDirection[][]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-direction"
          }
        },
        {
          "parameters": [],
          "name": "getTextRotation()",
          "description": "Returns the text rotation settings for the top left cell of the range.",
          "return_type": {
            "name": "TextRotation",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-rotation"
          }
        },
        {
          "parameters": [],
          "name": "getTextRotations()",
          "description": "Returns the text rotation settings for the cells in the range.",
          "return_type": {
            "name": "TextRotation[][]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-rotation"
          }
        },
        {
          "parameters": [],
          "name": "getTextStyle()",
          "description": "Returns the text style for the top left cell of the range.",
          "return_type": {
            "name": "TextStyle",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
          }
        },
        {
          "parameters": [],
          "name": "getTextStyles()",
          "description": "Returns the text styles for the cells in the range.",
          "return_type": {
            "name": "TextStyle[][]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
          }
        },
        {
          "parameters": [],
          "name": "getValue()",
          "description": "Returns the value of the top-left cell in the range. The value may be of typeNumber,Boolean,Date, orStringdepending on the value of the cell. Empty\ncells return an empty string.",
          "return_type": {
            "name": "Object",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getValues()",
          "description": "Returns the rectangular grid of values for this range.",
          "return_type": {
            "name": "Object[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getVerticalAlignment()",
          "description": "Returns the vertical alignment (top/middle/bottom) of the cell in the top-left corner of the\nrange.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getVerticalAlignments()",
          "description": "Returns the vertical alignments of the cells in the range.",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getWidth()",
          "description": "Returns the width of the range in columns.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getWrap()",
          "description": "Returns whether the text in the cell wraps. To get more granular wrap strategy, usegetWrapStrategy().",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getWrapStrategies()",
          "description": "Returns the text wrapping strategies for the cells in the range.",
          "return_type": {
            "name": "WrapStrategy[][]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/wrap-strategy"
          }
        },
        {
          "parameters": [],
          "name": "getWrapStrategy()",
          "description": "Returns the text wrapping strategy for the top left cell of the range.",
          "return_type": {
            "name": "WrapStrategy",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/wrap-strategy"
          }
        },
        {
          "parameters": [],
          "name": "getWraps()",
          "description": "Returns whether the text in the cells wrap. To get more granular wrap strategy, usegetWrapStrategies().",
          "return_type": {
            "name": "Boolean[][]",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "shiftDimension",
              "type": {
                "name": "Dimension",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/dimension"
              },
              "description": "The dimension along which to shift existing data."
            }
          ],
          "name": "insertCells(shiftDimension)",
          "description": "Inserts empty cells into this range. The new cells retain any formatting present in the cells\npreviously occupying this range. Existing data in the sheet along the provided dimension is\nshifted away from the inserted range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "insertCheckboxes()",
          "description": "Inserts checkboxes into each cell in the range, configured withtruefor checked andfalsefor unchecked. Sets the value of all cells in the range tofalse.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "checkedValue",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The checked value for the checkbox data validation."
            }
          ],
          "name": "insertCheckboxes(checkedValue)",
          "description": "Inserts checkboxes into each cell in the range, configured with a custom value for checked and\nthe empty string for unchecked. Sets the value of each cell in the range to the empty string.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "checkedValue",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The checked value for the checkbox data validation."
            },
            {
              "name": "uncheckedValue",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The unchecked value for the checkbox data validation."
            }
          ],
          "name": "insertCheckboxes(checkedValue, uncheckedValue)",
          "description": "Inserts checkboxes into each cell in the range, configured with custom values for the checked\nand unchecked states. Sets the value of each cell in the range to the custom unchecked value.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "isBlank()",
          "description": "Returnstrueif the range is totally blank.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isChecked()",
          "description": "Returns whether all cells in the range have their checkbox state as 'checked'. Returnsnullif some cells are checked and the rest unchecked, or if some cells do not have checkbox\ndata validation.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isEndColumnBounded()",
          "description": "Determines whether the end of the range is bound to a particular column. For example, for the\nrangesA1:B10orB:B, which are bound to columns at the end of the range, this\nmethod returnstrue; for the ranges3:7orA1:5, which are bound only\nto particular rows at the end of the range, this method returnsfalse.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isEndRowBounded()",
          "description": "Determines whether the end of the range is bound to a particular row. For example, for the\nrangesA1:B10or3:7, which are bound to rows at the end of the range, this\nmethod returnstrue; for the rangesB:BorA1:C, which are bound only\nto particular columns at the end of the range, this method returnsfalse.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isPartOfMerge()",
          "description": "Returnstrueif the cells in the current range overlap any merged cells.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isStartColumnBounded()",
          "description": "Determines whether the start of the range is bound to a particular column. For example, for the\nrangesA1:B10orB:B, which are bound to columns at the start of the range,\nthis method returnstrue; for the range3:7, which is bound only to a row at\nthe start of the range, this method returnsfalse.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isStartRowBounded()",
          "description": "Determines whether the start of the range is bound to a particular row. For example, for the\nrangesA1:B10or3:7, which are bound to rows at the start of the range, this\nmethod returnstrue; for the rangeB:B, which is bound only to a particular\ncolumn at the start of the range, this method returnsfalse.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "merge()",
          "description": "Merges the cells in the range together into a single block.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "mergeAcross()",
          "description": "Merge the cells in the range across the columns of the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "mergeVertically()",
          "description": "Merges the cells in the range together.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "target",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference"
              },
              "description": "A target range to copy this range to; only the top-left cell position is\n    relevant."
            }
          ],
          "name": "moveTo(target)",
          "description": "Cut and paste (both format and values) from this range to the target range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows down from the range's top-left cell; negative values\n    represent rows up from the range's top-left cell."
            },
            {
              "name": "columnOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns right from the range's top-left cell; negative values\n    represent columns left from the range's top-left cell."
            }
          ],
          "name": "offset(rowOffset, columnOffset)",
          "description": "Returns a new range that is offset from this range by the given number of rows and columns\n(which can be negative). The new range is the same size as the original range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rowOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows down from the range's top-left cell; negative values\n    represent rows up from the range's top-left cell."
            },
            {
              "name": "columnOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns right from the range's top-left cell; negative values\n    represent columns left from the range's top-left cell."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The height in rows of the new range."
            }
          ],
          "name": "offset(rowOffset, columnOffset, numRows)",
          "description": "Returns a new range that is relative to the current range, whose upper left point is offset\nfrom the current range by the given rows and columns, and with the given height in cells.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rowOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows down from the range's top-left cell; negative values\n    represent rows up from the range's top-left cell."
            },
            {
              "name": "columnOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns right from the range's top-left cell; negative values\n    represent columns left from the range's top-left cell."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The height in rows of the new range."
            },
            {
              "name": "numColumns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The width in columns of the new range."
            }
          ],
          "name": "offset(rowOffset, columnOffset, numRows, numColumns)",
          "description": "Returns a new range that is relative to the current range, whose upper left point is offset\nfrom the current range by the given rows and columns, and with the given height and width in\ncells.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "protect()",
          "description": "Creates an object that can protect the range from being edited except by users who have\npermission. Until the script actually changes the list of editors for the range (by callingProtection.removeEditor(emailAddress),Protection.removeEditor(user),Protection.removeEditors(emailAddresses),Protection.addEditor(emailAddress),Protection.addEditor(user),Protection.addEditors(emailAddresses), or setting a new\nvalue forProtection.setDomainEdit(editable)), the permissions mirror those of the\nspreadsheet itself, which effectively means that the range remains unprotected. If the range is\nalready protected, this method creates a new protected range that overlaps the existing one. If\na cell is protected by multiple protected ranges and any of them prevent a particular user from\nediting the cell, then that user is not permitted to edit the cell.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/protection"
          }
        },
        {
          "parameters": [],
          "name": "randomize()",
          "description": "Randomizes the order of the rows in the given range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "removeCheckboxes()",
          "description": "Removes all checkboxes from the range. Clears the data validation of each cell, and\nadditionally clears its value if the cell contains either the checked or unchecked value.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "removeDuplicates()",
          "description": "Removes rows within this range that contain values that are duplicates of values in any\nprevious row. Rows with identical values but different letter cases, formatting, or formulas\nare considered to be duplicates. This method also removes duplicates rows hidden from view (for\nexample, due to a filter). Content outside of this range isn't removed.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnsToCompare",
              "type": {
                "name": "Integer[]",
                "url": null
              },
              "description": "The columns to analyze for duplicate values. If no columns are provided\n    then all columns are analyzed for duplicates."
            }
          ],
          "name": "removeDuplicates(columnsToCompare)",
          "description": "Removes rows within this range that contain values in the specified columns that are duplicates\nof values any previous row. Rows with identical values but different letter cases, formatting,\nor formulas are considered to be duplicates. This method also removes duplicates rows hidden\nfrom view (for example, due to a filter). Content outside of this range isn't removed.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A color code in CSS notation (such as'#ffffff'or'white'); anullvalue resets the color."
            }
          ],
          "name": "setBackground(color)",
          "description": "Sets the background color of all cells in the range in CSS notation (such as'#ffffff'or'white').",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The background color to set;nullvalue resets the background color."
            }
          ],
          "name": "setBackgroundObject(color)",
          "description": "Sets the background color of all cells in the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color[][]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "A two-dimensional array of colors;nullvalues reset the color."
            }
          ],
          "name": "setBackgroundObjects(color)",
          "description": "Sets a rectangular grid of background colors (must match dimensions of this range).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "red",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The red value in RGB notation."
            },
            {
              "name": "green",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The green value in RGB notation."
            },
            {
              "name": "blue",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The blue value in RGB notation."
            }
          ],
          "name": "setBackgroundRGB(red, green, blue)",
          "description": "Sets the background to the given color using RGB values (integers between 0 and 255 inclusive).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String[][]",
                "url": null
              },
              "description": "A two-dimensional array of colors in CSS notation (such as'#ffffff'or'white');nullvalues reset the color."
            }
          ],
          "name": "setBackgrounds(color)",
          "description": "Sets a rectangular grid of background colors (must match dimensions of this range). The colors\nare in CSS notation (such as'#ffffff'or'white').",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "top",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "left",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "bottom",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "right",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "vertical",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor internal vertical borders,falsefor none,nullfor no change."
            },
            {
              "name": "horizontal",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor internal horizontal borders,falsefor none,nullfor no change."
            }
          ],
          "name": "setBorder(top, left, bottom, right, vertical, horizontal)",
          "description": "Sets the border property. Valid values aretrue(on),false(off) andnull(no change).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "top",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "left",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "bottom",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "right",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "vertical",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor internal vertical borders,falsefor none,nullfor no change."
            },
            {
              "name": "horizontal",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor internal horizontal borders,falsefor none,nullfor no change."
            },
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A color in CSS notation (such as'#ffffff'or'white'),nullfor default color (black)."
            },
            {
              "name": "style",
              "type": {
                "name": "BorderStyle",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/border-style"
              },
              "description": "A style for the borders,nullfor default style (solid)."
            }
          ],
          "name": "setBorder(top, left, bottom, right, vertical, horizontal, color, style)",
          "description": "Sets the border property with color and/or style. Valid values aretrue(on),false(off) andnull(no change). For color, use Color in CSS notation (such as'#ffffff'or'white').",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rule",
              "type": {
                "name": "DataValidation",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation"
              },
              "description": "The data validation rule to set, ornullto remove data validation."
            }
          ],
          "name": "setDataValidation(rule)",
          "description": "Sets one data validation rule for all cells in the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rules",
              "type": {
                "name": "DataValidation[][]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation"
              },
              "description": "A two-dimensional array of data validation rules to set;nullvalues\n    remove data validation."
            }
          ],
          "name": "setDataValidations(rules)",
          "description": "Sets the data validation rules for all cells in the range. This method takes a two-dimensional\narray of data validations, indexed by row then by column. The array dimensions must correspond\nto the range dimensions.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font color in CSS notation (such as'#ffffff'or'white'); anullvalue resets the color."
            }
          ],
          "name": "setFontColor(color)",
          "description": "Sets the font color in CSS notation (such as'#ffffff'or'white').",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The font color to set; anullvalue resets the color."
            }
          ],
          "name": "setFontColorObject(color)",
          "description": "Sets the font color of the given range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "colors",
              "type": {
                "name": "Color[][]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "A two-dimensional array of colors;nullvalues reset the font color."
            }
          ],
          "name": "setFontColorObjects(colors)",
          "description": "Sets a rectangular grid of font colors (must match dimensions of this range).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "colors",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of colors in CSS notation (such as'#ffffff'or'white');nullvalues reset the color."
            }
          ],
          "name": "setFontColors(colors)",
          "description": "Sets a rectangular grid of font colors (must match dimensions of this range). The colors are in\nCSS notation (such as'#ffffff'or'white').",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontFamilies",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of font families;nullvalues reset the\n    font family."
            }
          ],
          "name": "setFontFamilies(fontFamilies)",
          "description": "Sets a rectangular grid of font families (must match dimensions of this range). Examples of\nfont families are \"Arial\" or \"Helvetica\".",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontFamily",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font family to set; anullvalue resets the font family."
            }
          ],
          "name": "setFontFamily(fontFamily)",
          "description": "Sets the font family, such as \"Arial\" or \"Helvetica\".",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontLine",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font line style, either'underline','line-through', or'none'; anullvalue resets the font line style."
            }
          ],
          "name": "setFontLine(fontLine)",
          "description": "Sets the font line style of the given range ('underline','line-through', or'none').",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontLines",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of font line styles ('underline','line-through', or'none');nullvalues reset the font line style."
            }
          ],
          "name": "setFontLines(fontLines)",
          "description": "Sets a rectangular grid of line styles (must match dimensions of this range).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "size",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "A font size in point size."
            }
          ],
          "name": "setFontSize(size)",
          "description": "Sets the font size, with the size being the point size to use.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "sizes",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of sizes."
            }
          ],
          "name": "setFontSizes(sizes)",
          "description": "Sets a rectangular grid of font sizes (must match dimensions of this range). The sizes are in\npoints.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontStyle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font style, either'italic'or'normal'; anullvalue resets the font style."
            }
          ],
          "name": "setFontStyle(fontStyle)",
          "description": "Set the font style for the given range ('italic'or'normal').",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontStyles",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of font styles, either'italic'or'normal';nullvalues reset the font style."
            }
          ],
          "name": "setFontStyles(fontStyles)",
          "description": "Sets a rectangular grid of font styles (must match dimensions of this range).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontWeight",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font weight, either'bold'or'normal'; anullvalue resets the font weight."
            }
          ],
          "name": "setFontWeight(fontWeight)",
          "description": "Set the font weight for the given range (normal/bold).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontWeights",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of font weights, either'bold'or'normal';nullvalues reset the font weight."
            }
          ],
          "name": "setFontWeights(fontWeights)",
          "description": "Sets a rectangular grid of font weights (must match dimensions of this range). An example of a\nfont weight is \"bold\".",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A string representing the formula to set for the cell."
            }
          ],
          "name": "setFormula(formula)",
          "description": "Updates the formula for this range. The given formula must be in A1 notation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A string formula."
            }
          ],
          "name": "setFormulaR1C1(formula)",
          "description": "Updates the formula for this range. The given formula must be in R1C1 notation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formulas",
              "type": {
                "name": "String[][]",
                "url": null
              },
              "description": "A two-dimensional string array of formulas."
            }
          ],
          "name": "setFormulas(formulas)",
          "description": "Sets a rectangular grid of formulas (must match dimensions of this range). The given formulas\nmust be in A1 notation. This method takes a two-dimensional array of formulas, indexed by row,\nthen by column. The array dimensions must correspond to the range dimensions.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formulas",
              "type": {
                "name": "String[][]",
                "url": null
              },
              "description": "A two-dimensional array of formulas in R1C1 format."
            }
          ],
          "name": "setFormulasR1C1(formulas)",
          "description": "Sets a rectangular grid of formulas (must match dimensions of this range). The given formulas\nmust be in R1C1 notation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "alignment",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The alignment, either'left','center'or'normal'; anullvalue resets the alignment."
            }
          ],
          "name": "setHorizontalAlignment(alignment)",
          "description": "Set the horizontal (left to right) alignment for the given range (left/center/right).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "alignments",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of alignments, either'left','center'or'normal'; anullvalue resets the alignment."
            }
          ],
          "name": "setHorizontalAlignments(alignments)",
          "description": "Sets a rectangular grid of horizontal alignments. seesetHorizontalAlignment(alignment)",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "note",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The note value to set for the range; anullvalue removes the note."
            }
          ],
          "name": "setNote(note)",
          "description": "Sets the note to the given value.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "notes",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of notes;nullvalues remove the note."
            }
          ],
          "name": "setNotes(notes)",
          "description": "Sets a rectangular grid of notes (must match dimensions of this range).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "numberFormat",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A number format string."
            }
          ],
          "name": "setNumberFormat(numberFormat)",
          "description": "Sets the number or date format to the given formatting string. The accepted format patterns are\ndescribed in theSheets API documentation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "numberFormats",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of number formats."
            }
          ],
          "name": "setNumberFormats(numberFormats)",
          "description": "Sets a rectangular grid of number or date formats (must match dimensions of this range). The\nvalues are format pattern strings as described in theSheets API documentation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "value",
              "type": {
                "name": "RichTextValue",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value"
              },
              "description": "The desired Rich Text value."
            }
          ],
          "name": "setRichTextValue(value)",
          "description": "Sets the Rich Text value for the cells in the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "values",
              "type": {
                "name": "RichTextValue[][]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value"
              },
              "description": "The desired Rich Text values."
            }
          ],
          "name": "setRichTextValues(values)",
          "description": "Sets a rectangular grid of Rich Text values.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "showHyperlink",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not to show the hyperlink."
            }
          ],
          "name": "setShowHyperlink(showHyperlink)",
          "description": "Sets whether or not the range should show hyperlinks.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "direction",
              "type": {
                "name": "TextDirection",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-direction"
              },
              "description": "The desired text direction; ifnullthe direction is inferred before\n    setting."
            }
          ],
          "name": "setTextDirection(direction)",
          "description": "Sets the text direction for the cells in the range. If a specified direction isnull,\nthe direction is inferred and then set.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "directions",
              "type": {
                "name": "TextDirection[][]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-direction"
              },
              "description": "The desired text directions; if a specified direction isnullit is\n    inferred before setting."
            }
          ],
          "name": "setTextDirections(directions)",
          "description": "Sets a rectangular grid of text directions. If a specified direction isnull, the\ndirection is inferred and then set.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "degrees",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The desired angle between the standard orientation and the desired orientation.\n    For left to right text, positive angles are in the counterclockwise direction."
            }
          ],
          "name": "setTextRotation(degrees)",
          "description": "Sets the text rotation settings for the cells in the range. The input corresponds to the angle\nbetween the standard text orientation and the desired orientation. An input of zero indicates\nthat the text is set to the standard orientation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rotation",
              "type": {
                "name": "TextRotation",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-rotation"
              },
              "description": "The desired text rotation settings."
            }
          ],
          "name": "setTextRotation(rotation)",
          "description": "Sets the text rotation settings for the cells in the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rotations",
              "type": {
                "name": "TextRotation[][]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-rotation"
              },
              "description": "The desired text rotation settings."
            }
          ],
          "name": "setTextRotations(rotations)",
          "description": "Sets a rectangular grid of text rotations.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "style",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
              },
              "description": "The desired text style."
            }
          ],
          "name": "setTextStyle(style)",
          "description": "Sets the text style for the cells in the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "styles",
              "type": {
                "name": "TextStyle[][]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
              },
              "description": "The desired text styles."
            }
          ],
          "name": "setTextStyles(styles)",
          "description": "Sets a rectangular grid of text styles.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value for the range."
            }
          ],
          "name": "setValue(value)",
          "description": "Sets the value of the range. The value can be numeric, string, boolean or date. If it begins\nwith'='it is interpreted as a formula.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "values",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of values."
            }
          ],
          "name": "setValues(values)",
          "description": "Sets a rectangular grid of values (must match dimensions of this range). If a value begins with=, it's interpreted as a formula.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "alignment",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The alignment, either'top','middle'or'bottom'; anullvalue resets the alignment."
            }
          ],
          "name": "setVerticalAlignment(alignment)",
          "description": "Set the vertical (top to bottom) alignment for the given range (top/middle/bottom).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "alignments",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of alignments, either'top','middle'or'bottom'; anullvalue resets the alignment."
            }
          ],
          "name": "setVerticalAlignments(alignments)",
          "description": "Sets a rectangular grid of vertical alignments (must match dimensions of this range).",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "isVertical",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not to stack the text."
            }
          ],
          "name": "setVerticalText(isVertical)",
          "description": "Sets whether or not to stack the text for the cells in the range. If the text is stacked\nvertically, the degree text rotation setting is ignored.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "isWrapEnabled",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether to wrap text or not."
            }
          ],
          "name": "setWrap(isWrapEnabled)",
          "description": "Set the cell wrap of the given range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategies",
              "type": {
                "name": "WrapStrategy[][]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/wrap-strategy"
              },
              "description": "The desired wrapping strategies."
            }
          ],
          "name": "setWrapStrategies(strategies)",
          "description": "Sets a rectangular grid of wrap strategies.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "WrapStrategy",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/wrap-strategy"
              },
              "description": "The desired wrapping strategy."
            }
          ],
          "name": "setWrapStrategy(strategy)",
          "description": "Sets the text wrapping strategy for the cells in the range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "isWrapEnabled",
              "type": {
                "name": "Object[][]",
                "url": null
              },
              "description": "A two-dimensional array of wrap variables that determine whether to wrap\n    text in a cell or not."
            }
          ],
          "name": "setWraps(isWrapEnabled)",
          "description": "Sets a rectangular grid of word wrap policies (must match dimensions of this range). Cells with\nwrap enabled (the default) resize to display their full content. Cells with wrap disabled\ndisplay as much as possible in the cell without resizing or running to multiple lines.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "delta",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The amount by which to change the column group depth of this range."
            }
          ],
          "name": "shiftColumnGroupDepth(delta)",
          "description": "Changes the column grouping depth of the range by the specified amount.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "delta",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The amount by which to change the row group depth of this range."
            }
          ],
          "name": "shiftRowGroupDepth(delta)",
          "description": "Changes the row grouping depth of the range by the specified amount.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "sortSpecObj",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The columns to sort by."
            }
          ],
          "name": "sort(sortSpecObj)",
          "description": "Sorts the cells in the given range, by column and order specified.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "splitTextToColumns()",
          "description": "Splits a column of text into multiple columns based on an auto-detected delimiter.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "delimiter",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The custom delimiter to split on."
            }
          ],
          "name": "splitTextToColumns(delimiter)",
          "description": "Splits a column of text into multiple columns using the specified string as a custom delimiter.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "delimiter",
              "type": {
                "name": "TextToColumnsDelimiter",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-to-columns-delimiter"
              },
              "description": "The preset delimiter to split on."
            }
          ],
          "name": "splitTextToColumns(delimiter)",
          "description": "Splits a column of text into multiple columns based on the specified delimiter.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "trimWhitespace()",
          "description": "Trims the whitespace (such as spaces, tabs, or new lines) in every cell in this range. Removes\nall whitespace from the start and end of each cell's text, and reduces any subsequence of\nremaining whitespace characters to a single space.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "uncheck()",
          "description": "Changes the state of the checkboxes in the range to “unchecked”. Ignores the cells in the range\nwhich currently do not contain either the checked or unchecked value configured.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getFontColor()",
          "description": "Deprecated.Replaced bygetFontColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontColors()",
          "description": "Deprecated.Replaced bygetFontColorObjects()",
          "return_type": {
            "name": "String[][]",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class RangeList",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "activate()",
          "description": "Selects the list ofRangeinstances. The last range in the list is set as theactive range.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "breakApart()",
          "description": "Break all horizontally- or vertically-merged cells contained within the range list into\nindividual cells again.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "check()",
          "description": "Changes the state of the checkboxes in the range to “checked”. Ignores the cells in the range\nwhich currently do not contain either the checked or unchecked value configured.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clear()",
          "description": "Clears the range of contents, formats, and data validation rules for eachRangein\nthe range list.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "options",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "A JavaScript object that specifies advanced parameters, as listed below."
            }
          ],
          "name": "clear(options)",
          "description": "Clears the range of contents, format, data validation rules, and comments, as specified with\nthe given options. By default all data is cleared.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearContent()",
          "description": "Clears the content of eachRangein the range list, leaving the formatting intact.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearDataValidations()",
          "description": "Clears the data validation rules for eachRangein the range list.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearFormat()",
          "description": "Clears text formatting for eachRangein the range list.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearNote()",
          "description": "Clears the note for eachRangein the range list.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getRanges()",
          "description": "Returns a list of one or moreRangeinstances in the same sheet.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "insertCheckboxes()",
          "description": "Inserts checkboxes into each cell in the range, configured withtruefor checked andfalsefor unchecked. Sets the value of all cells in the range tofalse.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "checkedValue",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The checked value for the checkbox data validation."
            }
          ],
          "name": "insertCheckboxes(checkedValue)",
          "description": "Inserts checkboxes into each cell in the range, configured with a custom value for checked and\nthe empty string for unchecked. Sets the value of each cell in the range to the empty string.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "checkedValue",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The checked value for the checkbox data validation."
            },
            {
              "name": "uncheckedValue",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The unchecked value for the checkbox data validation."
            }
          ],
          "name": "insertCheckboxes(checkedValue, uncheckedValue)",
          "description": "Inserts checkboxes into each cell in the range, configured with custom values for the checked\nand unchecked states. Sets the value of each cell in the range to the custom unchecked value.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "removeCheckboxes()",
          "description": "Removes all checkboxes from the range. Clears the data validation of each cell, and\nadditionally clears its value if the cell contains either the checked or unchecked value.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The background color code in CSS notation such as'#ffffff'or'white'; anullvalue resets the color."
            }
          ],
          "name": "setBackground(color)",
          "description": "Sets the background color for eachRangein the range list. Color is represented in\nin CSS notation; for example,'#ffffff'or'white'.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "red",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The red value in RGB notation."
            },
            {
              "name": "green",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The green value in RGB notation."
            },
            {
              "name": "blue",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The blue value in RGB notation."
            }
          ],
          "name": "setBackgroundRGB(red, green, blue)",
          "description": "Sets the background to the given RGB color. This is a convenience wrapper around asetBackground(color)call.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "top",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "left",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "bottom",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "right",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "vertical",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor internal vertical borders,falsefor none,nullfor no change."
            },
            {
              "name": "horizontal",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor internal horizontal borders,falsefor none,nullfor no change."
            }
          ],
          "name": "setBorder(top, left, bottom, right, vertical, horizontal)",
          "description": "Sets the border property for eachRangein the range list. The valid values aretrue(on),false(off) andnull(no change).",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "top",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "left",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "bottom",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "right",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor border,falsefor none,nullfor no change."
            },
            {
              "name": "vertical",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor internal vertical borders,falsefor none,nullfor no change."
            },
            {
              "name": "horizontal",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor internal horizontal borders,falsefor none,nullfor no change."
            },
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The border color in CSS notation like'#ffffff'or'white',nullfor default color (black)."
            },
            {
              "name": "style",
              "type": {
                "name": "BorderStyle",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/border-style"
              },
              "description": "The style for the borders,nullfor default style (solid)."
            }
          ],
          "name": "setBorder(top, left, bottom, right, vertical, horizontal, color, style)",
          "description": "Sets the border property with color and/or style for eachRangein the range list.\nValid values aretrue(on),false(off) andnull(no change). Color is\nrepresented in in CSS notation; for example,'#ffffff'or'white'.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font color in CSS notation such as'#ffffff'or'white'; anullvalue resets the color."
            }
          ],
          "name": "setFontColor(color)",
          "description": "Sets the font color for eachRangein the range list. Color is represented in CSS\nnotation; for example,'#ffffff'or'white'.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontFamily",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font family to set; anullvalue resets the font family."
            }
          ],
          "name": "setFontFamily(fontFamily)",
          "description": "Sets the font family for eachRangein the range list. The font family is described\nby a string identifier such asArialorRoboto.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontLine",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font line style, either'underline','line-through', or'none'; anullvalue resets the font line style."
            }
          ],
          "name": "setFontLine(fontLine)",
          "description": "Sets the font line style for eachRangein the range list. The line styles options\nare'underline','line-through', or'none'.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "size",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "A font point size."
            }
          ],
          "name": "setFontSize(size)",
          "description": "Sets the font size (in points) for eachRangein the range list.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontStyle",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font style, either'italic'or'normal'; anullvalue resets the font style."
            }
          ],
          "name": "setFontStyle(fontStyle)",
          "description": "Set the font style for eachRangein the range list. The font style options are'italic'or'normal'.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontWeight",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The font weight, either'bold'or'normal'; anullvalue resets the font weight."
            }
          ],
          "name": "setFontWeight(fontWeight)",
          "description": "Set the font weight for eachRangein the range list. The font weight options are'normal'or'bold'.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A string representing the formula to set."
            }
          ],
          "name": "setFormula(formula)",
          "description": "Updates the formula for eachRangein the range list. The given formula must be in\nA1 notation.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "formula",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A string formula."
            }
          ],
          "name": "setFormulaR1C1(formula)",
          "description": "Updates the formula for eachRangein the range list. The given formula must be in\nR1C1 notation.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "alignment",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The alignment, either'left','center'or'normal'; anullvalue resets the alignment."
            }
          ],
          "name": "setHorizontalAlignment(alignment)",
          "description": "Set the horizontal alignment for eachRangein the range list. The alignment options\nare'left','center', or'right'.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "note",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The note text to set; anullvalue removes the note."
            }
          ],
          "name": "setNote(note)",
          "description": "Sets the note text for eachRangein the range list.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "numberFormat",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A number format string."
            }
          ],
          "name": "setNumberFormat(numberFormat)",
          "description": "Sets the number or date format for eachRangein the range list.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "showHyperlink",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not to show the hyperlink."
            }
          ],
          "name": "setShowHyperlink(showHyperlink)",
          "description": "Sets whether or not eachRangein the range list should show hyperlinks.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "direction",
              "type": {
                "name": "TextDirection",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-direction"
              },
              "description": "The desired text direction; ifnullthe direction is inferred before\n    setting."
            }
          ],
          "name": "setTextDirection(direction)",
          "description": "Sets the text direction for the cells in eachRangein the range list. If a\nspecified direction isnull, the direction is inferred and then set.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "degrees",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The desired angle between the standard orientation and the desired orientation.\n    For left to right text, positive angles are in the counterclockwise direction."
            }
          ],
          "name": "setTextRotation(degrees)",
          "description": "Sets the text rotation settings for the cells in eachRangein the range list. The\ninput corresponds to the angle between the standard text orientation and the desired\norientation. An input of zero indicates that the text is set to the standard orientation.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "value",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "The value for the range."
            }
          ],
          "name": "setValue(value)",
          "description": "Sets the value for eachRangein the range list. The value can be numeric, string,\nboolean or date. If it begins with '=' it is interpreted as a formula.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "alignment",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The alignment, either'top','middle'or'bottom'; anullvalue resets the alignment."
            }
          ],
          "name": "setVerticalAlignment(alignment)",
          "description": "Set the vertical alignment for eachRangein the range list. The alignment options\nare'top','middle'or'bottom'.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "isVertical",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not to stack the text."
            }
          ],
          "name": "setVerticalText(isVertical)",
          "description": "Sets whether or not to stack the text for the cells for eachRangein the range\nlist. If the text is stacked vertically, the degree text rotation setting is ignored.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "isWrapEnabled",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether to wrap text or not."
            }
          ],
          "name": "setWrap(isWrapEnabled)",
          "description": "Set text wrapping for eachRangein the range list. Cells with wrap enabled resize\nto display their full content. Cells with wrap disabled display as much as possible in the cell\nwithout resizing or running to multiple lines.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strategy",
              "type": {
                "name": "WrapStrategy",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/wrap-strategy"
              },
              "description": "The desired wrapping strategy."
            }
          ],
          "name": "setWrapStrategy(strategy)",
          "description": "Sets the text wrapping strategy for eachRangein the range list.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "trimWhitespace()",
          "description": "Trims the whitespace (such as spaces, tabs, or new lines) in every cell in this range list.\nRemoves all whitespace from the start and end of each cell's text, and reduces any subsequence\nof remaining whitespace characters to a single space.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "uncheck()",
          "description": "Changes the state of the checkboxes in the range to “unchecked”. Ignores the cells in the range\nwhich currently do not contain either the checked or unchecked value configured.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum RecalculationInterval",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/recalculation-interval",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "ON_CHANGE",
          "description": "Recalculate only when values are changed."
        },
        {
          "name": "MINUTE",
          "description": "Recalculate when values are changed, and every minute."
        },
        {
          "name": "HOUR",
          "description": "Recalculate when values are changed, and every hour."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum RelativeDate",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/relative-date",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "TODAY",
          "description": "Dates compared against the current date."
        },
        {
          "name": "TOMORROW",
          "description": "Dates compared against the date after the current date."
        },
        {
          "name": "YESTERDAY",
          "description": "Dates compared against the date before the current date."
        },
        {
          "name": "PAST_WEEK",
          "description": "Dates that fall within the past week period."
        },
        {
          "name": "PAST_MONTH",
          "description": "Dates that fall within the past month period."
        },
        {
          "name": "PAST_YEAR",
          "description": "Dates that fall within the past year period."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class RichTextValue",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "copy()",
          "description": "Returns a builder for a Rich Text value initialized with the values of this Rich Text value.",
          "return_type": {
            "name": "RichTextValueBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value-builder"
          }
        },
        {
          "parameters": [],
          "name": "getEndIndex()",
          "description": "Gets the end index of this value in the cell.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getLinkUrl()",
          "description": "Returns the link URL for this value.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "startOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The start offset."
            },
            {
              "name": "endOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end offset."
            }
          ],
          "name": "getLinkUrl(startOffset, endOffset)",
          "description": "Returns the link URL for the text fromstartOffsettoendOffset. Offsets are 0\nbased and relative to the cell's text, with the start offset being inclusive and the end offset\nbeing exclusive.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getRuns()",
          "description": "Returns the Rich Text string split into an array of runs, wherein each run is the longest\npossible substring having a consistent text style.",
          "return_type": {
            "name": "RichTextValue[]",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getStartIndex()",
          "description": "Gets the start index of this value in the cell.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getText()",
          "description": "Returns the text of this value.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getTextStyle()",
          "description": "Returns the text style of this value.",
          "return_type": {
            "name": "TextStyle",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
          }
        },
        {
          "parameters": [
            {
              "name": "startOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The start offset."
            },
            {
              "name": "endOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end offset."
            }
          ],
          "name": "getTextStyle(startOffset, endOffset)",
          "description": "Returns the text style of the text fromstartOffsettoendOffset. Offsets are 0\nbased and relative to the cell's text, with the start offset being inclusive and the end offset\nbeing exclusive.",
          "return_type": {
            "name": "TextStyle",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class RichTextValueBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "build()",
          "description": "Creates a Rich Text value from this builder.",
          "return_type": {
            "name": "RichTextValue",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value"
          }
        },
        {
          "parameters": [
            {
              "name": "startOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The start offset for the substring, inclusive."
            },
            {
              "name": "endOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end offset for the substring, exclusive."
            },
            {
              "name": "linkUrl",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The link URL being set."
            }
          ],
          "name": "setLinkUrl(startOffset, endOffset, linkUrl)",
          "description": "Sets the link URL for the given substring of this value, or clears it iflinkUrlisnull.",
          "return_type": {
            "name": "RichTextValueBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "linkUrl",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The link URL being set."
            }
          ],
          "name": "setLinkUrl(linkUrl)",
          "description": "Sets the link URL for the entire value, or clears it iflinkUrlisnull.",
          "return_type": {
            "name": "RichTextValueBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "text",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text for this value."
            }
          ],
          "name": "setText(text)",
          "description": "Sets the text for this value and clears any existing text style. When creating a new Rich Text\nvalue, this should be called beforesetTextStyle(startOffset, endOffset, textStyle).",
          "return_type": {
            "name": "RichTextValueBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "startOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The start offset for the substring, inclusive."
            },
            {
              "name": "endOffset",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The end offset for the substring, exclusive."
            },
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
              },
              "description": "The text style being set."
            }
          ],
          "name": "setTextStyle(startOffset, endOffset, textStyle)",
          "description": "Applies a text style to the given substring of this value. Offsets are 0 based and are relative\nto the cell's text value. Does nothing iftextStyleisnull.",
          "return_type": {
            "name": "RichTextValueBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
              },
              "description": "The text style being set."
            }
          ],
          "name": "setTextStyle(textStyle)",
          "description": "Applies a text style to the entire value. Previously set text styles are only affected if they\nare directly overwritten by values withintextStyle. Does nothing iftextStyleisnull.",
          "return_type": {
            "name": "RichTextValueBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class Selection",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/selection",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getActiveRange()",
          "description": "Returns the selected range in the active sheet, ornullif there is no active range. If\nmultiple ranges are selected this method returns only the last selected range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getActiveRangeList()",
          "description": "Returns the list of active ranges in the active sheet ornullif there are no active\nranges.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
          }
        },
        {
          "parameters": [],
          "name": "getActiveSheet()",
          "description": "Returns the active sheet in the spreadsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "getCurrentCell()",
          "description": "Returns the current (highlighted) cell that is selected in one of the active ranges ornullif there is no current cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "direction",
              "type": {
                "name": "Direction",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/direction"
              },
              "description": "The direction in which to find the next data region edge cell."
            }
          ],
          "name": "getNextDataRange(direction)",
          "description": "Starting from thecurrent cellandactive rangeand moving in the given direction, returns an adjusted range where the appropriate edge of the\nrange has been shifted to cover thenext data cellwhile still\ncovering the current cell. If the active range is unbounded along thedimensionof the direction, the original active range is returned. If there is no current cell\nor active range,nullis returned. This is equivalent to selecting a range in the\neditor and hittingCtrl+Shift+[arrow key].",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class Sheet",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "activate()",
          "description": "Activates this sheet. Does not alter the sheet itself, only the parent's notion of the active\nsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key)",
          "description": "Adds developer metadata with the specified key to the sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            },
            {
              "name": "visibility",
              "type": {
                "name": "DeveloperMetadataVisibility",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility"
              },
              "description": "The visibility of the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key, visibility)",
          "description": "Adds developer metadata with the specified key and visibility to the sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value for the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key, value)",
          "description": "Adds developer metadata with the specified key and value to the sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value for the new developer metadata."
            },
            {
              "name": "visibility",
              "type": {
                "name": "DeveloperMetadataVisibility",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility"
              },
              "description": "The visibility of the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key, value, visibility)",
          "description": "Adds developer metadata with the specified key, value, and visibility to the sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rowContents",
              "type": {
                "name": "Object[]",
                "url": null
              },
              "description": "An array of values to insert after the last row in the sheet."
            }
          ],
          "name": "appendRow(rowContents)",
          "description": "Appends a row to the bottom of the current data region in the sheet. If a cell's content begins\nwith=, it's interpreted as a formula.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "asDataSourceSheet()",
          "description": "Returns the sheet as aDataSourceSheetif the sheet is of typeSheetType.DATASOURCE, ornullotherwise.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the given column to resize."
            }
          ],
          "name": "autoResizeColumn(columnPosition)",
          "description": "Sets the width of the given column to fit its contents.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "startColumn",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting column to auto-resize."
            },
            {
              "name": "numColumns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to auto-resize."
            }
          ],
          "name": "autoResizeColumns(startColumn, numColumns)",
          "description": "Sets the width of all columns starting at the given column position to fit their contents.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "startRow",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting row to auto-resize."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to auto-resize."
            }
          ],
          "name": "autoResizeRows(startRow, numRows)",
          "description": "Sets the height of all rows starting at the given row position to fit their contents.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clear()",
          "description": "Clears the sheet of content and formatting information.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "options",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "A JavaScript map containing advanced options, listed below."
            }
          ],
          "name": "clear(options)",
          "description": "Clears the sheet of contents and/or format, as specified with the given advanced options.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearConditionalFormatRules()",
          "description": "Removes all conditional format rules from the sheet. Equivalent to callingsetConditionalFormatRules(rules)with an empty array as input.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "clearContents()",
          "description": "Clears the sheet of contents, while preserving formatting information.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearFormats()",
          "description": "Clears the sheet of formatting, while preserving contents.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "clearNotes()",
          "description": "Clears the sheet of all notes.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "collapseAllColumnGroups()",
          "description": "Collapses all column groups on the sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "collapseAllRowGroups()",
          "description": "Collapses all row groups on the sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "spreadsheet",
              "type": {
                "name": "Spreadsheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
              },
              "description": "The spreadsheet to copy this sheet to, which can be the same spreadsheet as\n    the source."
            }
          ],
          "name": "copyTo(spreadsheet)",
          "description": "Copies the sheet to a given spreadsheet, which can be the same spreadsheet as the source. The\ncopied sheet is named \"Copy of [original name]\".",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "createDeveloperMetadataFinder()",
          "description": "Returns aDeveloperMetadataFinderfor finding developer metadata within the scope of\nthis sheet. Metadata is in the scope of a particular sheet if it is either associated with the\nsheet itself, or associated with a row, column, or range on that sheet.",
          "return_type": {
            "name": "DeveloperMetadataFinder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-finder"
          }
        },
        {
          "parameters": [
            {
              "name": "findText",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text to search for."
            }
          ],
          "name": "createTextFinder(findText)",
          "description": "Creates a text finder for the sheet, which can find and replace text within the sheet.",
          "return_type": {
            "name": "TextFinder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-finder"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the column, starting at 1 for the first column."
            }
          ],
          "name": "deleteColumn(columnPosition)",
          "description": "Deletes the column at the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the first column to delete."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to delete."
            }
          ],
          "name": "deleteColumns(columnPosition, howMany)",
          "description": "Deletes a number of columns starting at the given column position.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the row, starting at 1 for the first row."
            }
          ],
          "name": "deleteRow(rowPosition)",
          "description": "Deletes the row at the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the first row to delete."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to delete."
            }
          ],
          "name": "deleteRows(rowPosition, howMany)",
          "description": "Deletes a number of rows starting at the given row position.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "expandAllColumnGroups()",
          "description": "Expands all column groups on the sheet. This method requires at least one column group.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "expandAllRowGroups()",
          "description": "Expands all row groups on the sheet. This method requires at least one row group.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "groupDepth",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The group depth up to which to expand the column groups."
            }
          ],
          "name": "expandColumnGroupsUpToDepth(groupDepth)",
          "description": "Expands all column groups up to the given depth, and collapses all others.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "groupDepth",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The group depth up to which to expand the row groups."
            }
          ],
          "name": "expandRowGroupsUpToDepth(groupDepth)",
          "description": "Expands all row groups up to the given depth, and collapses all others.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getActiveCell()",
          "description": "Returns the active cell in this sheet.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getActiveRange()",
          "description": "Returns the selected range in the active sheet, ornullif there is no active range. If\nmultiple ranges are selected this method returns only the last selected range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getActiveRangeList()",
          "description": "Returns the list of active ranges in the active sheet ornullif there are no active\nranges.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
          }
        },
        {
          "parameters": [],
          "name": "getBandings()",
          "description": "Returns all the bandings in this sheet.",
          "return_type": {
            "name": "Banding[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding"
          }
        },
        {
          "parameters": [],
          "name": "getCharts()",
          "description": "Returns an array of charts on this sheet.",
          "return_type": {
            "name": "EmbeddedChart[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
          }
        },
        {
          "parameters": [
            {
              "name": "columnIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column index of the group control toggle or an index within the group."
            },
            {
              "name": "groupDepth",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The depth of the group."
            }
          ],
          "name": "getColumnGroup(columnIndex, groupDepth)",
          "description": "Returns the column group at the given index and group depth.",
          "return_type": {
            "name": "Group",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/group"
          }
        },
        {
          "parameters": [],
          "name": "getColumnGroupControlPosition()",
          "description": "Returns theGroupControlTogglePositionfor all column groups on the sheet.",
          "return_type": {
            "name": "GroupControlTogglePosition",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/group-control-toggle-position"
          }
        },
        {
          "parameters": [
            {
              "name": "columnIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the column."
            }
          ],
          "name": "getColumnGroupDepth(columnIndex)",
          "description": "Returns the group depth of the column at the given index.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the column to examine."
            }
          ],
          "name": "getColumnWidth(columnPosition)",
          "description": "Gets the width in pixels of the given column.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getConditionalFormatRules()",
          "description": "Get all conditional format rules in this sheet.",
          "return_type": {
            "name": "ConditionalFormatRule[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule"
          }
        },
        {
          "parameters": [],
          "name": "getCurrentCell()",
          "description": "Returns the current cell in the active sheet ornullif there is no current cell. The\ncurrent cell is the cell that has focus in the Google Sheets UI, and is highlighted by a dark\nborder. There is never more than one current cell. When a user selects one or more cell ranges,\none of the cells in the selection is the current cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getDataRange()",
          "description": "Returns aRangecorresponding to the dimensions in which data is present.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceFormulas()",
          "description": "Gets all the data source formulas.",
          "return_type": {
            "name": "DataSourceFormula[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-formula"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourcePivotTables()",
          "description": "Gets all the data source pivot tables.",
          "return_type": {
            "name": "DataSourcePivotTable[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-pivot-table"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceTables()",
          "description": "Gets all the data source tables.",
          "return_type": {
            "name": "DataSourceTable[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table"
          }
        },
        {
          "parameters": [],
          "name": "getDeveloperMetadata()",
          "description": "Get all developer metadata associated with this sheet.",
          "return_type": {
            "name": "DeveloperMetadata[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata"
          }
        },
        {
          "parameters": [],
          "name": "getDrawings()",
          "description": "Returns an array of drawings on the sheet.",
          "return_type": {
            "name": "Drawing[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/drawing"
          }
        },
        {
          "parameters": [],
          "name": "getFilter()",
          "description": "Returns the filter in this sheet, ornullif there is no filter.",
          "return_type": {
            "name": "Filter",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter"
          }
        },
        {
          "parameters": [],
          "name": "getFormUrl()",
          "description": "Returns the URL for the form that sends its responses to this sheet, ornullif this\nsheet has no associated form. Throws an exception if the user does not have permission to edit\nthe spreadsheet.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFrozenColumns()",
          "description": "Returns the number of frozen columns.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFrozenRows()",
          "description": "Returns the number of frozen rows.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getImages()",
          "description": "Returns all over-the-grid images on the sheet.",
          "return_type": {
            "name": "OverGridImage[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [],
          "name": "getIndex()",
          "description": "Gets the position of the sheet in its parent spreadsheet. Starts at 1.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getLastColumn()",
          "description": "Returns the position of the last column that has content.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getLastRow()",
          "description": "Returns the position of the last row that has content.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getMaxColumns()",
          "description": "Returns the current number of columns in the sheet, regardless of content.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getMaxRows()",
          "description": "Returns the current number of rows in the sheet, regardless of content.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getName()",
          "description": "Returns the name of the sheet.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getNamedRanges()",
          "description": "Gets all the named ranges in this sheet.",
          "return_type": {
            "name": "NamedRange[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/named-range"
          }
        },
        {
          "parameters": [],
          "name": "getParent()",
          "description": "Returns theSpreadsheetthat contains this sheet.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
          }
        },
        {
          "parameters": [],
          "name": "getPivotTables()",
          "description": "Returns all the pivot tables on this sheet.",
          "return_type": {
            "name": "PivotTable[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ProtectionType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/protection-type"
              },
              "description": "The type of protected area, eitherSpreadsheetApp.ProtectionType.RANGEorSpreadsheetApp.ProtectionType.SHEET."
            }
          ],
          "name": "getProtections(type)",
          "description": "Gets an array of objects representing all protected ranges in the sheet, or a single-element\narray representing the protection on the sheet itself.",
          "return_type": {
            "name": "Protection[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/protection"
          }
        },
        {
          "parameters": [
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row index of the cell to return; row indexing starts with 1."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column index of the cell to return; column indexing starts with 1."
            }
          ],
          "name": "getRange(row, column)",
          "description": "Returns the range with the top left cell at the given coordinates.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting row index of the range; row indexing starts with 1."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column index of the range; column indexing starts with 1."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to return."
            }
          ],
          "name": "getRange(row, column, numRows)",
          "description": "Returns the range with the top left cell at the given coordinates, and with the given number of\nrows.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting row index of the range; row indexing starts with 1."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting column index of the range; column indexing starts with 1."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to return."
            },
            {
              "name": "numColumns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to return."
            }
          ],
          "name": "getRange(row, column, numRows, numColumns)",
          "description": "Returns the range with the top left cell at the given coordinates with the given number of rows\nand columns.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "a1Notation",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The range to return, as specified in A1 notation or R1C1 notation."
            }
          ],
          "name": "getRange(a1Notation)",
          "description": "Returns the range as specified in A1 notation or R1C1 notation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "a1Notations",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "The list of ranges to return, as specified in A1 notation or R1C1 notation."
            }
          ],
          "name": "getRangeList(a1Notations)",
          "description": "Returns theRangeListcollection representing the ranges in the same sheet specified\nby a non-empty list of A1 notations or R1C1 notations.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
          }
        },
        {
          "parameters": [
            {
              "name": "rowIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row index of the group control toggle or an index within the group."
            },
            {
              "name": "groupDepth",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The depth of the group."
            }
          ],
          "name": "getRowGroup(rowIndex, groupDepth)",
          "description": "Returns the row group at the given index and group depth.",
          "return_type": {
            "name": "Group",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/group"
          }
        },
        {
          "parameters": [],
          "name": "getRowGroupControlPosition()",
          "description": "Returns theGroupControlTogglePositionfor all row groups on the sheet.",
          "return_type": {
            "name": "GroupControlTogglePosition",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/group-control-toggle-position"
          }
        },
        {
          "parameters": [
            {
              "name": "rowIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the row."
            }
          ],
          "name": "getRowGroupDepth(rowIndex)",
          "description": "Returns the group depth of the row at the given index.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the row to examine."
            }
          ],
          "name": "getRowHeight(rowPosition)",
          "description": "Gets the height in pixels of the given row.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSelection()",
          "description": "Returns the currentSelectionin the spreadsheet.",
          "return_type": {
            "name": "Selection",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/selection"
          }
        },
        {
          "parameters": [],
          "name": "getSheetId()",
          "description": "Returns the ID of the sheet represented by this object.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSheetName()",
          "description": "Returns the sheet name.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "startRow",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the starting row."
            },
            {
              "name": "startColumn",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the starting column."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to return values for."
            },
            {
              "name": "numColumns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to return values for."
            }
          ],
          "name": "getSheetValues(startRow, startColumn, numRows, numColumns)",
          "description": "Returns the rectangular grid of values for this range starting at the given coordinates. A -1\nvalue given as the row or column position is equivalent to getting the very last row or column\nthat has data in the sheet.",
          "return_type": {
            "name": "Object[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSlicers()",
          "description": "Returns an array of slicers on the sheet.",
          "return_type": {
            "name": "Slicer[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/slicer"
          }
        },
        {
          "parameters": [],
          "name": "getTabColorObject()",
          "description": "Gets the sheet tab color, ornullif the sheet tab has no color.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getType()",
          "description": "Returns the type of the sheet.",
          "return_type": {
            "name": "SheetType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet-type"
          }
        },
        {
          "parameters": [],
          "name": "hasHiddenGridlines()",
          "description": "Returnstrueif the sheet's gridlines are hidden; otherwise returnsfalse.\nGridlines are visible by default.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "column",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The column range to hide."
            }
          ],
          "name": "hideColumn(column)",
          "description": "Hides the column or columns in the given range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "columnIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the column to hide."
            }
          ],
          "name": "hideColumns(columnIndex)",
          "description": "Hides a single column at the given index. Use 1-index for this method.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "columnIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting index of the columns to hide."
            },
            {
              "name": "numColumns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to hide."
            }
          ],
          "name": "hideColumns(columnIndex, numColumns)",
          "description": "Hides one or more consecutive columns starting at the given index. Use 1-index for this method.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "row",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The row range to hide."
            }
          ],
          "name": "hideRow(row)",
          "description": "Hides the rows in the given range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the row to hide."
            }
          ],
          "name": "hideRows(rowIndex)",
          "description": "Hides the row at the given index.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting index of the rows to hide."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to hide."
            }
          ],
          "name": "hideRows(rowIndex, numRows)",
          "description": "Hides one or more consecutive rows starting at the given index.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "hideSheet()",
          "description": "Hides this sheet. Has no effect if the sheet is already hidden. If this method is called on the\nonly visible sheet, it throws an exception.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "chart",
              "type": {
                "name": "EmbeddedChart",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
              },
              "description": "The chart to insert."
            }
          ],
          "name": "insertChart(chart)",
          "description": "Adds a new chart to this sheet.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "afterPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column after which the new column should be added."
            }
          ],
          "name": "insertColumnAfter(afterPosition)",
          "description": "Inserts a column after the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "beforePosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column before which the new column should be added."
            }
          ],
          "name": "insertColumnBefore(beforePosition)",
          "description": "Inserts a column before the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index indicating where to insert a column."
            }
          ],
          "name": "insertColumns(columnIndex)",
          "description": "Inserts a blank column in a sheet at the specified location.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "columnIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index indicating where to insert a column."
            },
            {
              "name": "numColumns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to insert."
            }
          ],
          "name": "insertColumns(columnIndex, numColumns)",
          "description": "Inserts one or more consecutive blank columns in a sheet starting at the specified location.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "afterPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column after which the new column should be added."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to insert."
            }
          ],
          "name": "insertColumnsAfter(afterPosition, howMany)",
          "description": "Inserts a given number of columns after the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "beforePosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column before which the new column should be added."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to insert."
            }
          ],
          "name": "insertColumnsBefore(beforePosition, howMany)",
          "description": "Inserts a number of columns before the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "blobSource",
              "type": {
                "name": "BlobSource",
                "url": "https://developers.google.com/apps-script/reference/base/blob-source.html"
              },
              "description": "The blob containing the image contents, MIME type, and (optionally) name."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column position."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row position."
            }
          ],
          "name": "insertImage(blobSource, column, row)",
          "description": "Inserts aBlobSourceas an image in the document at a given row and column. The image\nsize is retrieved from the blob contents. The maximum supported blob size is 2MB.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [
            {
              "name": "blobSource",
              "type": {
                "name": "BlobSource",
                "url": "https://developers.google.com/apps-script/reference/base/blob-source.html"
              },
              "description": "The blob containing the image contents, MIME type, and (optionally) name."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column position."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row position."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The horizontal offset from cell corner in pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The vertical offset from cell corner in pixels."
            }
          ],
          "name": "insertImage(blobSource, column, row, offsetX, offsetY)",
          "description": "Inserts aBlobSourceas an image in the document at a given row and column, with a\npixel offset. The image size is retrieved from the blob contents. The maximum supported blob\nsize is 2MB.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [
            {
              "name": "url",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The URL of the image."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The grid column position."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The grid row position."
            }
          ],
          "name": "insertImage(url, column, row)",
          "description": "Inserts an image in the document at a given row and column.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [
            {
              "name": "url",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The URL for the image."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column position."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row position."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The horizontal offset from cell corner in pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The vertical offset from cell corner in pixels."
            }
          ],
          "name": "insertImage(url, column, row, offsetX, offsetY)",
          "description": "Inserts an image in the document at a given row and column, with a pixel offset.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [
            {
              "name": "afterPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row after which the new row should be added."
            }
          ],
          "name": "insertRowAfter(afterPosition)",
          "description": "Inserts a row after the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "beforePosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row before which the new row should be added."
            }
          ],
          "name": "insertRowBefore(beforePosition)",
          "description": "Inserts a row before the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rowIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index indicating where to insert a row."
            }
          ],
          "name": "insertRows(rowIndex)",
          "description": "Inserts a blank row in a sheet at the specified location.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index indicating where to insert a row."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to insert."
            }
          ],
          "name": "insertRows(rowIndex, numRows)",
          "description": "Inserts one or more consecutive blank rows in a sheet starting at the specified location.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "afterPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row after which the new rows should be added."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to insert."
            }
          ],
          "name": "insertRowsAfter(afterPosition, howMany)",
          "description": "Inserts a number of rows after the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "beforePosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row before which the new rows should be added."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to insert."
            }
          ],
          "name": "insertRowsBefore(beforePosition, howMany)",
          "description": "Inserts a number of rows before the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range over which slicer slicer is created."
            },
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The slicer's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The slicer's top side is anchored in this col."
            }
          ],
          "name": "insertSlicer(range, anchorRowPos, anchorColPos)",
          "description": "Adds a new slicer to this sheet.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/slicer"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range over which slicer slicer is created."
            },
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The slicer's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The slicer's top side is anchored in this col."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The horizontal offset from cell corner in pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The vertical offset from cell corner in pixels."
            }
          ],
          "name": "insertSlicer(range, anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Adds a new slicer to this sheet.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/slicer"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the column to examine."
            }
          ],
          "name": "isColumnHiddenByUser(columnPosition)",
          "description": "Returns whether the given column is hidden by the user.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isRightToLeft()",
          "description": "Returnstrueif this sheet layout is right-to-left. Returnsfalseif the sheet\nuses the default left-to-right layout.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the row to examine."
            }
          ],
          "name": "isRowHiddenByFilter(rowPosition)",
          "description": "Returns whether the given row is hidden by a filter (not a filter view).",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the row to examine."
            }
          ],
          "name": "isRowHiddenByUser(rowPosition)",
          "description": "Returns whether the given row is hidden by the user.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isSheetHidden()",
          "description": "Returnstrueif the sheet is currently hidden.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "columnSpec",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "A range spanning the columns that should be moved."
            },
            {
              "name": "destinationIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index that the columns should be moved to. Note that this index is\n    based on the coordinates before the columns are moved. Existing data is shifted right to\n    make room for the moved columns while the source columns are removed from the grid.\n    Therefore, the data may end up at a different index than originally specified."
            }
          ],
          "name": "moveColumns(columnSpec, destinationIndex)",
          "description": "Moves the columns selected by the given range to the position indicated by thedestinationIndex. ThecolumnSpecitself does not have to exactly represent an entire\ncolumn or group of columns to move—it selects all columns that the range spans.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowSpec",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "A range spanning the rows that should be moved."
            },
            {
              "name": "destinationIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index that the rows should be moved to. Note that this index is\n    based on the coordinates before the rows are moved. Existing data is shifted down to make\n    room for the moved rows while the source rows are removed from the grid. Therefore, the\n    data may end up at a different index than originally specified."
            }
          ],
          "name": "moveRows(rowSpec, destinationIndex)",
          "description": "Moves the rows selected by the given range to the position indicated by thedestinationIndex. TherowSpecitself does not have to exactly represent an entire row\nor group of rows to move—it selects all rows that the range spans.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "newChart()",
          "description": "Returns a builder to create a new chart for this sheet.",
          "return_type": {
            "name": "EmbeddedChartBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder"
          }
        },
        {
          "parameters": [],
          "name": "protect()",
          "description": "Creates an object that can protect the sheet from being edited except by users who have\npermission. Until the script actually changes the list of editors for the sheet (by callingProtection.removeEditor(emailAddress),Protection.removeEditor(user),Protection.removeEditors(emailAddresses),Protection.addEditor(emailAddress),Protection.addEditor(user),Protection.addEditors(emailAddresses), or setting a new\nvalue forProtection.setDomainEdit(editable)), the permissions mirror those of the\nspreadsheet itself, which effectively means that the sheet remains unprotected. If the sheet is\nalready protected, this method returns an object representing its existing protection settings.\nA protected sheet may include unprotected regions.",
          "return_type": {
            "name": "Protection",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/protection"
          }
        },
        {
          "parameters": [
            {
              "name": "chart",
              "type": {
                "name": "EmbeddedChart",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
              },
              "description": "The chart to remove."
            }
          ],
          "name": "removeChart(chart)",
          "description": "Removes a chart from the parent sheet.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to set as the active range."
            }
          ],
          "name": "setActiveRange(range)",
          "description": "Sets the specified range as theactive rangein the active sheet, with\nthe top left cell in the range as thecurrent cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "rangeList",
              "type": {
                "name": "RangeList",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
              },
              "description": "The list of ranges to select."
            }
          ],
          "name": "setActiveRangeList(rangeList)",
          "description": "Sets the specified list of ranges as theactive rangesin the\nactive sheet. The last range in the list is set as theactive range.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to set as the active selection."
            }
          ],
          "name": "setActiveSelection(range)",
          "description": "Sets the active selection region for this sheet.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "a1Notation",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The range to set as active, as specified in A1 notation or R1C1 notation."
            }
          ],
          "name": "setActiveSelection(a1Notation)",
          "description": "Sets the active selection, as specified in A1 notation or R1C1 notation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "GroupControlTogglePosition",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/group-control-toggle-position"
              },
              "description": "The position of the column group control toggle."
            }
          ],
          "name": "setColumnGroupControlPosition(position)",
          "description": "Sets the position of the column group control toggle on the sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the given column to set."
            },
            {
              "name": "width",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The width in pixels to set it to."
            }
          ],
          "name": "setColumnWidth(columnPosition, width)",
          "description": "Sets the width of the given column in pixels.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "startColumn",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting column position to change."
            },
            {
              "name": "numColumns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to change."
            },
            {
              "name": "width",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The width in pixels to set it to."
            }
          ],
          "name": "setColumnWidths(startColumn, numColumns, width)",
          "description": "Sets the width of the given columns in pixels.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rules",
              "type": {
                "name": "ConditionalFormatRule[]",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule"
              },
              "description": "The new conditional format rules."
            }
          ],
          "name": "setConditionalFormatRules(rules)",
          "description": "Replaces all currently existing conditional format rules in the sheet with the input rules.\nRules are evaluated in their input order.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "cell",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The cell to set as the current cell."
            }
          ],
          "name": "setCurrentCell(cell)",
          "description": "Sets the specified cell as thecurrent cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "columns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to freeze."
            }
          ],
          "name": "setFrozenColumns(columns)",
          "description": "Freezes the given number of columns. If zero, no columns are frozen.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to freeze."
            }
          ],
          "name": "setFrozenRows(rows)",
          "description": "Freezes the given number of rows. If zero, no rows are frozen.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "hideGridlines",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, hide gridlines in this sheet; otherwise show the\n    gridlines."
            }
          ],
          "name": "setHiddenGridlines(hideGridlines)",
          "description": "Hides or reveals the sheet gridlines.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new name for the sheet."
            }
          ],
          "name": "setName(name)",
          "description": "Sets the sheet name.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rightToLeft",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the sheet layout is set to right-to-left, with cell A1 at\n    the top right corner. Iffalse, the sheet layout is set to the default\n    left-to-right, with cell A1 at the top left."
            }
          ],
          "name": "setRightToLeft(rightToLeft)",
          "description": "Sets or unsets the sheet layout to right-to-left.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "position",
              "type": {
                "name": "GroupControlTogglePosition",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/group-control-toggle-position"
              },
              "description": "The position of the row group control toggle."
            }
          ],
          "name": "setRowGroupControlPosition(position)",
          "description": "Sets the position of the row group control toggle on the sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row position to change."
            },
            {
              "name": "height",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The height in pixels to set it to."
            }
          ],
          "name": "setRowHeight(rowPosition, height)",
          "description": "Sets the row height of the given row in pixels. By default, rows grow to fit cell contents. If\nyou want to force rows to a specified height, usesetRowHeightsForced(startRow, numRows, height).",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "startRow",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting row position to change."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to change."
            },
            {
              "name": "height",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The height in pixels to set it to."
            }
          ],
          "name": "setRowHeights(startRow, numRows, height)",
          "description": "Sets the height of the given rows in pixels. By default, rows grow to fit cell contents. If you\nwant to force rows to a specified height, usesetRowHeightsForced(startRow, numRows, height).",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "startRow",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting row position to change."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to change."
            },
            {
              "name": "height",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The height in pixels to set it to."
            }
          ],
          "name": "setRowHeightsForced(startRow, numRows, height)",
          "description": "Sets the height of the given rows in pixels. By default, rows grow to fit cell contents. When\nyou usesetRowHeightsForced, rows are forced to the specified height even if the\ncell contents are taller than the row height.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "A color code in CSS notation (like'#ffffff'or'white'), ornullto reset the tab color."
            }
          ],
          "name": "setTabColor(color)",
          "description": "Sets the sheet tab color.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The sheet tab color to set."
            }
          ],
          "name": "setTabColorObject(color)",
          "description": "Sets the sheet tab color.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the column to unhide."
            }
          ],
          "name": "showColumns(columnIndex)",
          "description": "Unhides the column at the given index.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "columnIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting index of the columns to unhide."
            },
            {
              "name": "numColumns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to unhide."
            }
          ],
          "name": "showColumns(columnIndex, numColumns)",
          "description": "Unhides one or more consecutive columns starting at the given index.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the row to unhide."
            }
          ],
          "name": "showRows(rowIndex)",
          "description": "Unhides the row at the given index.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The starting index of the rows to unhide."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to unhide."
            }
          ],
          "name": "showRows(rowIndex, numRows)",
          "description": "Unhides one or more consecutive rows starting at the given index.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "showSheet()",
          "description": "Makes the sheet visible. Has no effect if the sheet is already visible.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column to sort by."
            }
          ],
          "name": "sort(columnPosition)",
          "description": "Sorts a sheet by column, ascending.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column to sort by."
            },
            {
              "name": "ascending",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor ascending sorts,falsefor descending."
            }
          ],
          "name": "sort(columnPosition, ascending)",
          "description": "Sorts a sheet by column. Takes a parameter to specify ascending or descending.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "column",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to unhide, if hidden."
            }
          ],
          "name": "unhideColumn(column)",
          "description": "Unhides the column in the given range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "row",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to unhide, if hidden."
            }
          ],
          "name": "unhideRow(row)",
          "description": "Unhides the row in the given range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "chart",
              "type": {
                "name": "EmbeddedChart",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
              },
              "description": "The chart to update."
            }
          ],
          "name": "updateChart(chart)",
          "description": "Updates the chart on this sheet.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSheetProtection()",
          "description": "Deprecated.For spreadsheets created in the newer version of Google Sheets, usegetProtections(type), which returns the more powerfulProtectionclass. Although this method is deprecated, it remains available for\n    compatibility with the older version of Sheets",
          "return_type": {
            "name": "PageProtection",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/page-protection"
          }
        },
        {
          "parameters": [],
          "name": "getTabColor()",
          "description": "Deprecated.Replaced bygetTabColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "permissions",
              "type": {
                "name": "PageProtection",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/page-protection"
              },
              "description": "The access permissions object to set on this sheet."
            }
          ],
          "name": "setSheetProtection(permissions)",
          "description": "Deprecated.For spreadsheets created in the newer version of Google Sheets, useprotect(), which returns the more powerfulProtectionclass. Although\n    this method is deprecated, it remains available for compatibility with the older version of\n    Sheets",
          "return_type": {
            "name": "void",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum SheetType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "GRID",
          "description": "A sheet containing a grid. This is the default type."
        },
        {
          "name": "OBJECT",
          "description": "A sheet containing a single embedded object such as anEmbeddedChart."
        },
        {
          "name": "DATASOURCE",
          "description": "A sheet containing aDataSource."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class Slicer",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/slicer",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getBackgroundColorObject()",
          "description": "Return the backgroundColorof the slicer.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getColumnPosition()",
          "description": "Returns the column position (relative to the data range of the slicer) on which the filter is\napplied in the slicer, ornullif the column position is not set. This should be\n1-indexed position of the column similar to filter.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getContainerInfo()",
          "description": "Gets information about where the slicer is positioned in the sheet.",
          "return_type": {
            "name": "ContainerInfo",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info"
          }
        },
        {
          "parameters": [],
          "name": "getFilterCriteria()",
          "description": "Returns the filter criteria of the slicer, ornullif the filter criteria is not set.",
          "return_type": {
            "name": "FilterCriteria",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
          }
        },
        {
          "parameters": [],
          "name": "getRange()",
          "description": "Gets the data range on which the slicer is applied to.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getTitle()",
          "description": "Returns the title of the slicer.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getTitleHorizontalAlignment()",
          "description": "Gets the horizontal alignment of the title.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getTitleTextStyle()",
          "description": "Returns the text style of the slicer's title.",
          "return_type": {
            "name": "TextStyle",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
          }
        },
        {
          "parameters": [],
          "name": "isAppliedToPivotTables()",
          "description": "Returns whether the given slicer is applied to pivot tables.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "remove()",
          "description": "Deletes the slicer.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "applyToPivotTables",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Specifies whether this slicer should apply to pivot tables."
            }
          ],
          "name": "setApplyToPivotTables(applyToPivotTables)",
          "description": "Sets if the given slicer should be applied to pivot tables in the worksheet.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new background color of this slicer in CSS notation (such as '#ffffff')."
            }
          ],
          "name": "setBackgroundColor(color)",
          "description": "Sets the background color of the slicer. Anullvalue resets the background color.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The new background color of this slicer."
            }
          ],
          "name": "setBackgroundColorObject(color)",
          "description": "Sets the backgroundColorof the slicer. Anullvalue resets the background\ncolor.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The new column position of this slicer."
            },
            {
              "name": "filterCriteria",
              "type": {
                "name": "FilterCriteria",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria"
              },
              "description": "The new filter criteria of this slicer."
            }
          ],
          "name": "setColumnFilterCriteria(columnPosition, filterCriteria)",
          "description": "Sets the column index and filtering criteria of the slicer. Anullvalue resets the\nslicer filter.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "anchorRowPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The slicer's top side is anchored in this row."
            },
            {
              "name": "anchorColPos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The slicer's top side is anchored in this col."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The horizontal offset from cell corner in pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The vertical offset from cell corner in pixels."
            }
          ],
          "name": "setPosition(anchorRowPos, anchorColPos, offsetX, offsetY)",
          "description": "Sets the position where the slicer appears on the sheet. The anchor row and column position\nindices are 1-indexed.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rangeApi",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The new range for this slicer."
            }
          ],
          "name": "setRange(rangeApi)",
          "description": "Sets the data range on which the slicer is applied.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new title of this slicer."
            }
          ],
          "name": "setTitle(title)",
          "description": "Sets the title of the slicer. An empty title resets the title to default value.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "horizontalAlignment",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new horizontal alignment of this slicer's title."
            }
          ],
          "name": "setTitleHorizontalAlignment(horizontalAlignment)",
          "description": "Sets the horizontal alignment of the title in the slicer. Anullvalue resets the\nalignment.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "textStyle",
              "type": {
                "name": "TextStyle",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
              },
              "description": "The new text style of the slicer's title."
            }
          ],
          "name": "setTitleTextStyle(textStyle)",
          "description": "Sets the text style of the slicer.",
          "return_type": {
            "name": "Slicer",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "getBackgroundColor()",
          "description": "Deprecated.Replaced bygetBackgroundColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum SortOrder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/sort-order",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "ASCENDING",
          "description": "Ascending sort order."
        },
        {
          "name": "DESCENDING",
          "description": "Descending sort order."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class SortSpec",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/sort-spec",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getBackgroundColor()",
          "description": "Returns the background color used for sorting, ornullif absent.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceColumn()",
          "description": "Gets the data source column the sort spec acts on. Returnsnullif this sort spec is\nnot acting on a data source column.",
          "return_type": {
            "name": "DataSourceColumn",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column"
          }
        },
        {
          "parameters": [],
          "name": "getDimensionIndex()",
          "description": "Returns the dimension index ornullif not linked to a local filter.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getForegroundColor()",
          "description": "Returns the foreground color used for sorting, ornullif absent.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getSortOrder()",
          "description": "Returns the sort order.",
          "return_type": {
            "name": "SortOrder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sort-order"
          }
        },
        {
          "parameters": [],
          "name": "isAscending()",
          "description": "Returns whether the sort order is ascending.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class Spreadsheet",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key)",
          "description": "Adds developer metadata with the specified key to the top-level spreadsheet.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            },
            {
              "name": "visibility",
              "type": {
                "name": "DeveloperMetadataVisibility",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility"
              },
              "description": "The visibility of the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key, visibility)",
          "description": "Adds developer metadata with the specified key and visibility to the spreadsheet.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value for the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key, value)",
          "description": "Adds developer metadata with the specified key and value to the spreadsheet.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The key for the new developer metadata."
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The value for the new developer metadata."
            },
            {
              "name": "visibility",
              "type": {
                "name": "DeveloperMetadataVisibility",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility"
              },
              "description": "The visibility of the new developer metadata."
            }
          ],
          "name": "addDeveloperMetadata(key, value, visibility)",
          "description": "Adds developer metadata with the specified key, value, and visibility to the spreadsheet.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "emailAddress",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The email address of the user to add."
            }
          ],
          "name": "addEditor(emailAddress)",
          "description": "Adds the given user to the list of editors for theSpreadsheet. If the user was already\non the list of viewers, this method promotes the user out of the list of viewers.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "user",
              "type": {
                "name": "User",
                "url": "https://developers.google.com/apps-script/reference/base/user.html"
              },
              "description": "A representation of the user to add."
            }
          ],
          "name": "addEditor(user)",
          "description": "Adds the given user to the list of editors for theSpreadsheet. If the user was already\non the list of viewers, this method promotes the user out of the list of viewers.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "emailAddresses",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of email addresses of the users to add."
            }
          ],
          "name": "addEditors(emailAddresses)",
          "description": "Adds the given array of users to the list of editors for theSpreadsheet. If any of the\nusers were already on the list of viewers, this method promotes them out of the list of\nviewers.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the menu to be created."
            },
            {
              "name": "subMenus",
              "type": {
                "name": "Object[]",
                "url": null
              },
              "description": "An array of JavaScript maps withnameandfunctionNameparameters. You can use functions from included libraries, such asLibrary.libFunction1."
            }
          ],
          "name": "addMenu(name, subMenus)",
          "description": "Creates a new menu in the Spreadsheet UI.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "emailAddress",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The email address of the user to add."
            }
          ],
          "name": "addViewer(emailAddress)",
          "description": "Adds the given user to the list of viewers for theSpreadsheet. If the user was already\non the list of editors, this method has no effect.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "user",
              "type": {
                "name": "User",
                "url": "https://developers.google.com/apps-script/reference/base/user.html"
              },
              "description": "A representation of the user to add."
            }
          ],
          "name": "addViewer(user)",
          "description": "Adds the given user to the list of viewers for theSpreadsheet. If the user was already\non the list of editors, this method has no effect.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "emailAddresses",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "An array of email addresses of the users to add."
            }
          ],
          "name": "addViewers(emailAddresses)",
          "description": "Adds the given array of users to the list of viewers for theSpreadsheet. If any of the\nusers were already on the list of editors, this method has no effect for them.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rowContents",
              "type": {
                "name": "Object[]",
                "url": null
              },
              "description": "An array of values to insert after the last row in the sheet."
            }
          ],
          "name": "appendRow(rowContents)",
          "description": "Appends a row to the bottom of the current data region in the sheet. If a cell's content begins\nwith=, it's interpreted as a formula.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the given column to resize."
            }
          ],
          "name": "autoResizeColumn(columnPosition)",
          "description": "Sets the width of the given column to fit its contents.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the copy."
            }
          ],
          "name": "copy(name)",
          "description": "Copies the spreadsheet and returns the new one.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [],
          "name": "createDeveloperMetadataFinder()",
          "description": "Returns aDeveloperMetadataFinderfor finding developer metadata within the scope of\nthis spreadsheet. By default this considers all metadata associated with the spreadsheet,\nsheets, rows, and columns.",
          "return_type": {
            "name": "DeveloperMetadataFinder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-finder"
          }
        },
        {
          "parameters": [
            {
              "name": "findText",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text to search for."
            }
          ],
          "name": "createTextFinder(findText)",
          "description": "Creates a text finder for the spreadsheet, which can be used to find and replace text within\nthe spreadsheet. The search starts from the first sheet of the spreadsheet.",
          "return_type": {
            "name": "TextFinder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-finder"
          }
        },
        {
          "parameters": [],
          "name": "deleteActiveSheet()",
          "description": "Deletes the currently active sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the column, starting at 1 for the first column."
            }
          ],
          "name": "deleteColumn(columnPosition)",
          "description": "Deletes the column at the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the first column to delete."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to delete."
            }
          ],
          "name": "deleteColumns(columnPosition, howMany)",
          "description": "Deletes a number of columns starting at the given column position.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the row, starting at 1 for the first row."
            }
          ],
          "name": "deleteRow(rowPosition)",
          "description": "Deletes the row at the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the first row to delete."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to delete."
            }
          ],
          "name": "deleteRows(rowPosition, howMany)",
          "description": "Deletes a number of rows starting at the given row position.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "sheet",
              "type": {
                "name": "Sheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
              },
              "description": "The sheet to delete."
            }
          ],
          "name": "deleteSheet(sheet)",
          "description": "Deletes the specified sheet.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "duplicateActiveSheet()",
          "description": "Duplicates the active sheet and makes it the active sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "getActiveCell()",
          "description": "Returns the active cell in this sheet.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getActiveRange()",
          "description": "Returns the selected range in the active sheet, ornullif there is no active range. If\nmultiple ranges are selected this method returns only the last selected range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getActiveRangeList()",
          "description": "Returns the list of active ranges in the active sheet ornullif there are no active\nranges.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
          }
        },
        {
          "parameters": [],
          "name": "getActiveSheet()",
          "description": "Gets the active sheet in a spreadsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "contentType",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The MIME type to convert to. For most blobs,'application/pdf'is\n    the only valid option. For images in BMP, GIF, JPEG, or PNG format, any of'image/bmp','image/gif','image/jpeg', or'image/png'are also\n    valid. For a Google Docs document,'text/markdown'is also valid."
            }
          ],
          "name": "getAs(contentType)",
          "description": "Return the data inside this object as a blob converted to the specified content type. This\nmethod adds the appropriate extension to the filename—for example, \"myfile.pdf\". However, it\nassumes that the part of the filename that follows the last period (if any) is an existing\nextension that should be replaced. Consequently, \"ShoppingList.12.25.2014\" becomes\n\"ShoppingList.12.25.pdf\".",
          "return_type": {
            "name": "Blob",
            "url": "https://developers.google.com/apps-script/reference/base/blob.html"
          }
        },
        {
          "parameters": [],
          "name": "getBandings()",
          "description": "Returns all the bandings in this spreadsheet.",
          "return_type": {
            "name": "Banding[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/banding"
          }
        },
        {
          "parameters": [],
          "name": "getBlob()",
          "description": "Return the data inside this object as a blob.",
          "return_type": {
            "name": "Blob",
            "url": "https://developers.google.com/apps-script/reference/base/blob.html"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the column to examine."
            }
          ],
          "name": "getColumnWidth(columnPosition)",
          "description": "Gets the width in pixels of the given column.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getCurrentCell()",
          "description": "Returns the current cell in the active sheet ornullif there is no current cell. The\ncurrent cell is the cell that has focus in the Google Sheets UI, and is highlighted by a dark\nborder. There is never more than one current cell. When a user selects one or more cell ranges,\none of the cells in the selection is the current cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getDataRange()",
          "description": "Returns aRangecorresponding to the dimensions in which data is present.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceFormulas()",
          "description": "Gets all the data source formulas.",
          "return_type": {
            "name": "DataSourceFormula[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-formula"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourcePivotTables()",
          "description": "Gets all the data source pivot tables.",
          "return_type": {
            "name": "DataSourcePivotTable[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-pivot-table"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceRefreshSchedules()",
          "description": "Gets the refresh schedules of this spreadsheet.",
          "return_type": {
            "name": "DataSourceRefreshSchedule[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-refresh-schedule"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceSheets()",
          "description": "Returns all the data source sheets in the spreadsheet.",
          "return_type": {
            "name": "DataSourceSheet[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet"
          }
        },
        {
          "parameters": [],
          "name": "getDataSourceTables()",
          "description": "Gets all the data source tables.",
          "return_type": {
            "name": "DataSourceTable[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table"
          }
        },
        {
          "parameters": [],
          "name": "getDataSources()",
          "description": "Returns all the data sources in the spreadsheet.",
          "return_type": {
            "name": "DataSource[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source"
          }
        },
        {
          "parameters": [],
          "name": "getDeveloperMetadata()",
          "description": "Gets the developer metadata associated with the top-level spreadsheet.",
          "return_type": {
            "name": "DeveloperMetadata[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata"
          }
        },
        {
          "parameters": [],
          "name": "getEditors()",
          "description": "Gets the list of editors for thisSpreadsheet.",
          "return_type": {
            "name": "User[]",
            "url": "https://developers.google.com/apps-script/reference/base/user.html"
          }
        },
        {
          "parameters": [],
          "name": "getFormUrl()",
          "description": "Returns the URL for the form that sends its responses to this spreadsheet, ornullif\nthis spreadsheet has no associated form. If multiple forms send responses to this spreadsheet,\nthe form URL returned is indeterminate. As an alternative, per sheet form URL associations can\nbe retrieved through theSheet.getFormUrl()method. Throws an exception if the user\ndoes not have permission to edit the spreadsheet.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFrozenColumns()",
          "description": "Returns the number of frozen columns.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFrozenRows()",
          "description": "Returns the number of frozen rows.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getId()",
          "description": "Gets a unique identifier for this spreadsheet. A spreadsheet ID can be extracted from its URL.\nFor example, the spreadsheet ID in the URL\nhttps://docs.google.com/spreadsheets/d/abc1234567/edit#gid=0 is \"abc1234567\".",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getImages()",
          "description": "Returns all over-the-grid images on the sheet.",
          "return_type": {
            "name": "OverGridImage[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [],
          "name": "getIterativeCalculationConvergenceThreshold()",
          "description": "Returns the threshold value used during iterative calculation. When the results of successive\ncalculation differ by less than this value, the iterative calculation stops.",
          "return_type": {
            "name": "Number",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getLastColumn()",
          "description": "Returns the position of the last column that has content.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getLastRow()",
          "description": "Returns the position of the last row that has content.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getMaxIterativeCalculationCycles()",
          "description": "Returns the maximum number of iterations to use during iterative calculation.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getName()",
          "description": "Gets the name of the document.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getNamedRanges()",
          "description": "Gets all the named ranges in this spreadsheet.",
          "return_type": {
            "name": "NamedRange[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/named-range"
          }
        },
        {
          "parameters": [],
          "name": "getNumSheets()",
          "description": "Returns the number of sheets in this spreadsheet.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getOwner()",
          "description": "Returns the owner of the document, ornullfor a document in a shared drive.",
          "return_type": {
            "name": "User",
            "url": "https://developers.google.com/apps-script/reference/base/user.html"
          }
        },
        {
          "parameters": [],
          "name": "getPredefinedSpreadsheetThemes()",
          "description": "Returns the list of predefined themes.",
          "return_type": {
            "name": "SpreadsheetTheme[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-theme"
          }
        },
        {
          "parameters": [
            {
              "name": "type",
              "type": {
                "name": "ProtectionType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/protection-type"
              },
              "description": "The type of protected area, eitherSpreadsheetApp.ProtectionType.RANGEorSpreadsheetApp.ProtectionType.SHEET."
            }
          ],
          "name": "getProtections(type)",
          "description": "Gets an array of objects representing all protected ranges or sheets in the spreadsheet.",
          "return_type": {
            "name": "Protection[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/protection"
          }
        },
        {
          "parameters": [
            {
              "name": "a1Notation",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The range to return, as specified in A1 notation or R1C1 notation."
            }
          ],
          "name": "getRange(a1Notation)",
          "description": "Returns the range as specified in A1 notation or R1C1 notation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the range to get."
            }
          ],
          "name": "getRangeByName(name)",
          "description": "Returns a named range, ornullif no range with the given name is found. If multiple\nsheets of the spreadsheet use the same range name, specify the sheet name without additional\nquotation marks — for example,getRangeByName('TaxRates')orgetRangeByName('Sheet Name!TaxRates'), but notgetRangeByName('\"Sheet\nName\"!TaxRates').",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "a1Notations",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "The list of ranges to return, as specified in A1 notation or R1C1 notation."
            }
          ],
          "name": "getRangeList(a1Notations)",
          "description": "Returns theRangeListcollection representing the ranges in the same sheet specified\nby a non-empty list of A1 notations or R1C1 notations.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
          }
        },
        {
          "parameters": [],
          "name": "getRecalculationInterval()",
          "description": "Returns the calculation interval for this spreadsheet.",
          "return_type": {
            "name": "RecalculationInterval",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/recalculation-interval"
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the row to examine."
            }
          ],
          "name": "getRowHeight(rowPosition)",
          "description": "Gets the height in pixels of the given row.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSelection()",
          "description": "Returns the currentSelectionin the spreadsheet.",
          "return_type": {
            "name": "Selection",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/selection"
          }
        },
        {
          "parameters": [
            {
              "name": "id",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The ID of the sheet to get."
            }
          ],
          "name": "getSheetById(id)",
          "description": "Gets the sheet with the given ID. UseSheet.getSheetId().",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the sheet to get."
            }
          ],
          "name": "getSheetByName(name)",
          "description": "Returns a sheet with the given name.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "getSheetId()",
          "description": "Returns the ID of the sheet represented by this object.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSheetName()",
          "description": "Returns the sheet name.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "startRow",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the starting row."
            },
            {
              "name": "startColumn",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the starting column."
            },
            {
              "name": "numRows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to return values for."
            },
            {
              "name": "numColumns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to return values for."
            }
          ],
          "name": "getSheetValues(startRow, startColumn, numRows, numColumns)",
          "description": "Returns the rectangular grid of values for this range starting at the given coordinates. A -1\nvalue given as the row or column position is equivalent to getting the very last row or column\nthat has data in the sheet.",
          "return_type": {
            "name": "Object[][]",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSheets()",
          "description": "Gets all the sheets in this spreadsheet.",
          "return_type": {
            "name": "Sheet[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "getSpreadsheetLocale()",
          "description": "Gets the spreadsheet locale.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSpreadsheetTheme()",
          "description": "Returns the current theme of the spreadsheet, ornullif no theme is applied.",
          "return_type": {
            "name": "SpreadsheetTheme",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-theme"
          }
        },
        {
          "parameters": [],
          "name": "getSpreadsheetTimeZone()",
          "description": "Gets the time zone for the spreadsheet.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getUrl()",
          "description": "Returns the URL for the given spreadsheet.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getViewers()",
          "description": "Gets the list of viewers and commenters for thisSpreadsheet.",
          "return_type": {
            "name": "User[]",
            "url": "https://developers.google.com/apps-script/reference/base/user.html"
          }
        },
        {
          "parameters": [
            {
              "name": "column",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The column range to hide."
            }
          ],
          "name": "hideColumn(column)",
          "description": "Hides the column or columns in the given range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "row",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The row range to hide."
            }
          ],
          "name": "hideRow(row)",
          "description": "Hides the rows in the given range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "afterPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column after which the new column should be added."
            }
          ],
          "name": "insertColumnAfter(afterPosition)",
          "description": "Inserts a column after the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "beforePosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column before which the new column should be added."
            }
          ],
          "name": "insertColumnBefore(beforePosition)",
          "description": "Inserts a column before the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "afterPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column after which the new column should be added."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to insert."
            }
          ],
          "name": "insertColumnsAfter(afterPosition, howMany)",
          "description": "Inserts a given number of columns after the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "beforePosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column before which the new column should be added."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to insert."
            }
          ],
          "name": "insertColumnsBefore(beforePosition, howMany)",
          "description": "Inserts a number of columns before the given column position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "spec",
              "type": {
                "name": "DataSourceSpec",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec"
              },
              "description": "The data source specification to insert with."
            }
          ],
          "name": "insertDataSourceSheet(spec)",
          "description": "Inserts a newDataSourceSheetin the spreadsheet and starts data execution. As a\nside effect, this also makes the new sheet the active sheet.",
          "return_type": {
            "name": "DataSourceSheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "blobSource",
              "type": {
                "name": "BlobSource",
                "url": "https://developers.google.com/apps-script/reference/base/blob-source.html"
              },
              "description": "The blob containing the image contents, MIME type, and (optionally) name."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column position."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row position."
            }
          ],
          "name": "insertImage(blobSource, column, row)",
          "description": "Inserts aSpreadsheetas an image in the document at a given row and column. The image\nsize is retrieved from the blob contents. The maximum supported blob size is 2MB.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [
            {
              "name": "blobSource",
              "type": {
                "name": "BlobSource",
                "url": "https://developers.google.com/apps-script/reference/base/blob-source.html"
              },
              "description": "The blob containing the image contents, MIME type, and (optionally) name."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column position."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row position."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The horizontal offset from cell corner in pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The vertical offset from cell corner in pixels."
            }
          ],
          "name": "insertImage(blobSource, column, row, offsetX, offsetY)",
          "description": "Inserts aSpreadsheetas an image in the document at a given row and column, with a\npixel offset. The image size is retrieved from the blob contents. The maximum supported blob\nsize is 2MB.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [
            {
              "name": "url",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The URL of the image."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The grid column position."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The grid row position."
            }
          ],
          "name": "insertImage(url, column, row)",
          "description": "Inserts an image in the document at a given row and column.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [
            {
              "name": "url",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The URL for the image."
            },
            {
              "name": "column",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column position."
            },
            {
              "name": "row",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row position."
            },
            {
              "name": "offsetX",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The horizontal offset from cell corner in pixels."
            },
            {
              "name": "offsetY",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The vertical offset from cell corner in pixels."
            }
          ],
          "name": "insertImage(url, column, row, offsetX, offsetY)",
          "description": "Inserts an image in the document at a given row and column, with a pixel offset.",
          "return_type": {
            "name": "OverGridImage",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image"
          }
        },
        {
          "parameters": [
            {
              "name": "afterPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row after which the new row should be added."
            }
          ],
          "name": "insertRowAfter(afterPosition)",
          "description": "Inserts a row after the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "beforePosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row before which the new row should be added."
            }
          ],
          "name": "insertRowBefore(beforePosition)",
          "description": "Inserts a row before the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "afterPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row after which the new rows should be added."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to insert."
            }
          ],
          "name": "insertRowsAfter(afterPosition, howMany)",
          "description": "Inserts a number of rows after the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "beforePosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row before which the new rows should be added."
            },
            {
              "name": "howMany",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to insert."
            }
          ],
          "name": "insertRowsBefore(beforePosition, howMany)",
          "description": "Inserts a number of rows before the given row position.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "insertSheet()",
          "description": "Inserts a new sheet into the spreadsheet, using a default sheet name. The new sheet becomes the\nactive sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "sheetIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the newly created sheet. To insert a sheet as the first one in\n    the spreadsheet, set it to 0."
            }
          ],
          "name": "insertSheet(sheetIndex)",
          "description": "Inserts a new sheet into the spreadsheet at the given index. The new sheet becomes the active\nsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "sheetIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the newly created sheet. To insert a sheet as the first one in\n    the spreadsheet, set it to 0."
            },
            {
              "name": "options",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "Optional JavaScript advanced arguments."
            }
          ],
          "name": "insertSheet(sheetIndex, options)",
          "description": "Inserts a new sheet into the spreadsheet at the given index and uses optional advanced\narguments. The new sheet becomes the active sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "options",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "Optional JavaScript advanced arguments, listed below."
            }
          ],
          "name": "insertSheet(options)",
          "description": "Inserts a new sheet into the spreadsheet, using a default sheet name and optional advanced\narguments. The new sheet becomes the active sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "sheetName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the new sheet."
            }
          ],
          "name": "insertSheet(sheetName)",
          "description": "Inserts a new sheet into the spreadsheet with the given name. The new sheet becomes the active\nsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "sheetName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the new sheet."
            },
            {
              "name": "sheetIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the newly created sheet. To insert a sheet as the first one in\n    the spreadsheet, set it to 0."
            }
          ],
          "name": "insertSheet(sheetName, sheetIndex)",
          "description": "Inserts a new sheet into the spreadsheet with the given name at the given index. The new sheet\nbecomes the active sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "sheetName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the new sheet."
            },
            {
              "name": "sheetIndex",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The index of the newly inserted sheet. To insert a sheet as the first one in\n    a spreadsheet, set it to 0."
            },
            {
              "name": "options",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "Optional JavaScript advanced arguments."
            }
          ],
          "name": "insertSheet(sheetName, sheetIndex, options)",
          "description": "Inserts a new sheet into the spreadsheet with the given name at the given index and uses\noptional advanced arguments. The new sheet becomes the active sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "sheetName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the new sheet."
            },
            {
              "name": "options",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "Optional JavaScript advanced arguments."
            }
          ],
          "name": "insertSheet(sheetName, options)",
          "description": "Inserts a new sheet into the spreadsheet with the given name and uses optional advanced\narguments. The new sheet becomes the active sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "spec",
              "type": {
                "name": "DataSourceSpec",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec"
              },
              "description": "The data source specification to insert with."
            }
          ],
          "name": "insertSheetWithDataSourceTable(spec)",
          "description": "Inserts a new sheet in the spreadsheet, creates aDataSourceTablespanning the\nentire sheet with the given data source specification, and starts data execution. As a side\neffect, makes the new sheet the active sheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the column to examine."
            }
          ],
          "name": "isColumnHiddenByUser(columnPosition)",
          "description": "Returns whether the given column is hidden by the user.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isIterativeCalculationEnabled()",
          "description": "Returns whether iterative calculation is activated in this spreadsheet.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the row to examine."
            }
          ],
          "name": "isRowHiddenByFilter(rowPosition)",
          "description": "Returns whether the given row is hidden by a filter (not a filter view).",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the row to examine."
            }
          ],
          "name": "isRowHiddenByUser(rowPosition)",
          "description": "Returns whether the given row is hidden by the user.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "pos",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The 1-index position to move the active sheet to in the list of sheets."
            }
          ],
          "name": "moveActiveSheet(pos)",
          "description": "Moves the active sheet to the given position in the list of sheets. Throws an exception if the\nposition is negative or greater than the number of sheets.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "chart",
              "type": {
                "name": "EmbeddedChart",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart"
              },
              "description": "The chart to move."
            }
          ],
          "name": "moveChartToObjectSheet(chart)",
          "description": "Creates a newSheetType.OBJECTsheet and moves the provided chart to it. If the chart\nis already on its own sheet, that sheet is returned without creating a new one.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "refreshAllDataSources()",
          "description": "Refreshes all supported data sources and their linked data source objects, skipping invalid\ndata source objects.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "emailAddress",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The email address of the user to remove."
            }
          ],
          "name": "removeEditor(emailAddress)",
          "description": "Removes the given user from the list of editors for theSpreadsheet. This method doesn't\nblock users from accessing theSpreadsheetif they belong to a class of users who have\ngeneral access—for example, if theSpreadsheetis shared with the user's entire\ndomain, or if theSpreadsheetis in a shared drive that the user can access.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "user",
              "type": {
                "name": "User",
                "url": "https://developers.google.com/apps-script/reference/base/user.html"
              },
              "description": "A representation of the user to remove."
            }
          ],
          "name": "removeEditor(user)",
          "description": "Removes the given user from the list of editors for theSpreadsheet. This method doesn't\nblock users from accessing theSpreadsheetif they belong to a class of users who have\ngeneral access—for example, if theSpreadsheetis shared with the user's entire\ndomain, or if theSpreadsheetis in a shared drive that the user can access.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the menu to remove."
            }
          ],
          "name": "removeMenu(name)",
          "description": "Removes a menu that was added byaddMenu(name, subMenus). Thenameargument\nshould have the same value as the corresponding call toaddMenu(name, subMenus).",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The range name."
            }
          ],
          "name": "removeNamedRange(name)",
          "description": "Deletes a named range with the given name. Throws an exception if no range with the given name\nis found in the spreadsheet.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "emailAddress",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The email address of the user to remove."
            }
          ],
          "name": "removeViewer(emailAddress)",
          "description": "Removes the given user from the list of viewers and commenters for theSpreadsheet. This\nmethod has no effect if the user is an editor, not a viewer or commenter. This method also\ndoesn't block users from accessing theSpreadsheetif they belong to a class of users who\nhave general access—for example, if theSpreadsheetis shared with the user's\nentire domain, or if theSpreadsheetis in a shared drive that the user can access.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "user",
              "type": {
                "name": "User",
                "url": "https://developers.google.com/apps-script/reference/base/user.html"
              },
              "description": "A representation of the user to remove."
            }
          ],
          "name": "removeViewer(user)",
          "description": "Removes the given user from the list of viewers and commenters for theSpreadsheet. This\nmethod has no effect if the user is an editor, not a viewer. This method also doesn't block\nusers from accessing theSpreadsheetif they belong to a class of users who have general\naccess—for example, if theSpreadsheetis shared with the user's entire domain, or\nif theSpreadsheetis in a shared drive that the user can access.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "newName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new name for the document."
            }
          ],
          "name": "rename(newName)",
          "description": "Renames the document.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "newName",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new name for the current active sheet."
            }
          ],
          "name": "renameActiveSheet(newName)",
          "description": "Renames the current active sheet to the given new name.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "resetSpreadsheetTheme()",
          "description": "Removes the applied theme and sets the default theme on the spreadsheet.",
          "return_type": {
            "name": "SpreadsheetTheme",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-theme"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to set as the active range."
            }
          ],
          "name": "setActiveRange(range)",
          "description": "Sets the specified range as theactive rangein the active sheet, with\nthe top left cell in the range as thecurrent cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "rangeList",
              "type": {
                "name": "RangeList",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
              },
              "description": "The list of ranges to select."
            }
          ],
          "name": "setActiveRangeList(rangeList)",
          "description": "Sets the specified list of ranges as theactive rangesin the\nactive sheet. The last range in the list is set as theactive range.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to set as the active selection."
            }
          ],
          "name": "setActiveSelection(range)",
          "description": "Sets the active selection region for this sheet.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "a1Notation",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The range to set as active, as specified in A1 notation or R1C1 notation."
            }
          ],
          "name": "setActiveSelection(a1Notation)",
          "description": "Sets the active selection, as specified in A1 notation or R1C1 notation.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "sheet",
              "type": {
                "name": "Sheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
              },
              "description": "The sheet to set as the active sheet."
            }
          ],
          "name": "setActiveSheet(sheet)",
          "description": "Sets the given sheet to be the active sheet in the spreadsheet. The Google Sheets UI displays\nthe chosen sheet unless the sheet belongs to a different spreadsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "sheet",
              "type": {
                "name": "Sheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
              },
              "description": "The new active sheet."
            },
            {
              "name": "restoreSelection",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Tftrue, the most recent selection of the new active sheet\n    becomes selected again as the new sheet becomes active; iffalse, the new sheet\n    becomes active without changing the current selection."
            }
          ],
          "name": "setActiveSheet(sheet, restoreSelection)",
          "description": "Sets the given sheet to be the active sheet in the spreadsheet, with an option to restore the\nmost recent selection within that sheet. The Google Sheets UI displays the chosen sheet unless\nthe sheet belongs to a different spreadsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The position of the given column to set."
            },
            {
              "name": "width",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The width in pixels to set it to."
            }
          ],
          "name": "setColumnWidth(columnPosition, width)",
          "description": "Sets the width of the given column in pixels.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "cell",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The cell to set as the current cell."
            }
          ],
          "name": "setCurrentCell(cell)",
          "description": "Sets the specified cell as thecurrent cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "columns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns to freeze."
            }
          ],
          "name": "setFrozenColumns(columns)",
          "description": "Freezes the given number of columns. If zero, no columns are frozen.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "rows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows to freeze."
            }
          ],
          "name": "setFrozenRows(rows)",
          "description": "Freezes the given number of rows. If zero, no rows are frozen.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "minThreshold",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The minimum convergence threshold (must be non-negative)."
            }
          ],
          "name": "setIterativeCalculationConvergenceThreshold(minThreshold)",
          "description": "Sets the minimum threshold value for iterative calculation. When the results of successive\ncalculation differ by less than this value, the iterative calculation stops. This value must be\nnon-negative, and defaults to 0.05.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "isEnabled",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueif iterative calculation should be enabled;falseotherwise."
            }
          ],
          "name": "setIterativeCalculationEnabled(isEnabled)",
          "description": "Sets whether iterative calculation is activated in this spreadsheet. If the maximum number of\ncalculation cycles and convergence threshold have not previously been set when the calculation\nis activated, they default to 50 and 0.05 respectively. If either has been set previously, they\nretain their previous values.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "maxIterations",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The maximum number of calculation iterations (between 1 and 10,000)."
            }
          ],
          "name": "setMaxIterativeCalculationCycles(maxIterations)",
          "description": "Sets the maximum number of calculation iterations that should be performed during iterative\ncalculation. This value must be between 1 and 10,000 (inclusive), and defaults to 50.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name to give the range."
            },
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range specification."
            }
          ],
          "name": "setNamedRange(name, range)",
          "description": "Names a range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "recalculationInterval",
              "type": {
                "name": "RecalculationInterval",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/recalculation-interval"
              },
              "description": "The new recalculation interval."
            }
          ],
          "name": "setRecalculationInterval(recalculationInterval)",
          "description": "Sets how often this spreadsheet should recalculate.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "rowPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The row position to change."
            },
            {
              "name": "height",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The height in pixels to set it to."
            }
          ],
          "name": "setRowHeight(rowPosition, height)",
          "description": "Sets the row height of the given row in pixels. By default, rows grow to fit cell contents. If\nyou want to force rows to a specified height, useSheet.setRowHeightsForced(startRow, numRows, height).",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "locale",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The locale code to use (for example, 'en', 'fr', or 'en_US')."
            }
          ],
          "name": "setSpreadsheetLocale(locale)",
          "description": "Sets the spreadsheet locale.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "theme",
              "type": {
                "name": "SpreadsheetTheme",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-theme"
              },
              "description": "The theme to apply."
            }
          ],
          "name": "setSpreadsheetTheme(theme)",
          "description": "Sets a theme on the spreadsheet.",
          "return_type": {
            "name": "SpreadsheetTheme",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-theme"
          }
        },
        {
          "parameters": [
            {
              "name": "timezone",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The time zone, specified in \"long\" format (for example, \"America/New_York\", as\n    listed byJoda.org)."
            }
          ],
          "name": "setSpreadsheetTimeZone(timezone)",
          "description": "Sets the time zone for the spreadsheet.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "userInterface",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "AnHtmlOutput."
            }
          ],
          "name": "show(userInterface)",
          "description": "Displays a custom user interface component in a dialog centered in the user's browser's\nviewport. The server-side script's execution isnotsuspended. To communicate with the\nserver side, the user interface component must make asynchronous callbacks to the server-side\nscript.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column to sort by."
            }
          ],
          "name": "sort(columnPosition)",
          "description": "Sorts a sheet by column, ascending.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "columnPosition",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The column to sort by."
            },
            {
              "name": "ascending",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "truefor ascending sorts,falsefor descending."
            }
          ],
          "name": "sort(columnPosition, ascending)",
          "description": "Sorts a sheet by column. Takes a parameter to specify ascending or descending.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "msg",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The message to be shown in the toast."
            }
          ],
          "name": "toast(msg)",
          "description": "Shows a popup window in the lower right corner of the spreadsheet with the given message.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "msg",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The message to be shown in the toast."
            },
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The optional title of the toast."
            }
          ],
          "name": "toast(msg, title)",
          "description": "Shows a popup window in the lower right corner of the spreadsheet with the given message and\ntitle.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "msg",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The message to be shown in the toast."
            },
            {
              "name": "title",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The optional title of the toast."
            },
            {
              "name": "timeoutSeconds",
              "type": {
                "name": "Number",
                "url": null
              },
              "description": "The timeout in seconds; ifnull, the toast defaults to 5 seconds;\n    if negative, the toast remains until dismissed."
            }
          ],
          "name": "toast(msg, title, timeoutSeconds)",
          "description": "Shows a popup window in the lower right corner of the spreadsheet with the given title and\nmessage, that stays visible for a certain length of time.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "column",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to unhide, if hidden."
            }
          ],
          "name": "unhideColumn(column)",
          "description": "Unhides the column in the given range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "row",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to unhide, if hidden."
            }
          ],
          "name": "unhideRow(row)",
          "description": "Unhides the row in the given range.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name of the menu to update."
            },
            {
              "name": "subMenus",
              "type": {
                "name": "Object[]",
                "url": null
              },
              "description": "An array of JavaScript maps withnameandfunctionNameparameters. You can use functions from included libraries, such asLibrary.libFunction1."
            }
          ],
          "name": "updateMenu(name, subMenus)",
          "description": "Updates a menu that was added byaddMenu(name, subMenus). Works exactly likeaddMenu(name, subMenus).",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "timeoutInSeconds",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The time to wait for data executions, in seconds. The maximum is 300\n    seconds."
            }
          ],
          "name": "waitForAllDataExecutionsCompletion(timeoutInSeconds)",
          "description": "Waits until all the current executions in the spreadsheet complete, timing out after the\nprovided number of seconds. Throws an exception if the executions are not completed when timing\nout, but does not cancel the data executions.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getSheetProtection()",
          "description": "Deprecated.For spreadsheets created in the newer version of Google Sheets, useSheet.getProtections(type), which returns the more powerfulProtectionclass. Although this method is deprecated, it remains available for\n    compatibility with the older version of Sheets",
          "return_type": {
            "name": "PageProtection",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/page-protection"
          }
        },
        {
          "parameters": [],
          "name": "isAnonymousView()",
          "description": "Deprecated.As of January 2014 this function is deprecated and not available in the new version\n    of Google Sheets.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isAnonymousWrite()",
          "description": "Deprecated.As of January 2014 this function is deprecated and not available in the new version\n    of Google Sheets.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "anonymousReadAllowed",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueto allow anonymous reads;falseotherwise."
            },
            {
              "name": "anonymousWriteAllowed",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "trueto allow anonymous reads;falseotherwise."
            }
          ],
          "name": "setAnonymousAccess(anonymousReadAllowed, anonymousWriteAllowed)",
          "description": "Deprecated.As of January 2014 this function is deprecated and not available in the new version\n    of Google Sheets.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "permissions",
              "type": {
                "name": "PageProtection",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/page-protection"
              },
              "description": "The access permissions object to set on this sheet."
            }
          ],
          "name": "setSheetProtection(permissions)",
          "description": "Deprecated.For spreadsheets created in the newer version of Google Sheets, useSheet.protect(), which returns the more powerfulProtectionclass. Although\n    this method is deprecated, it remains available for compatibility with the older version of\n    Sheets",
          "return_type": {
            "name": "void",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class SpreadsheetApp",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name for the spreadsheet."
            }
          ],
          "name": "create(name)",
          "description": "Creates a new spreadsheet with the given name.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
          }
        },
        {
          "parameters": [
            {
              "name": "name",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The name for the spreadsheet."
            },
            {
              "name": "rows",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of rows for the spreadsheet."
            },
            {
              "name": "columns",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The number of columns for the spreadsheet."
            }
          ],
          "name": "create(name, rows, columns)",
          "description": "Creates a new spreadsheet with the given name and the specified number of rows and columns.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
          }
        },
        {
          "parameters": [],
          "name": "enableAllDataSourcesExecution()",
          "description": "Turns data execution on for all types of data sources.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "enableBigQueryExecution()",
          "description": "Turns data execution on for BigQuery data sources.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "enableLookerExecution()",
          "description": "Turns data execution on for Looker data sources.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "flush()",
          "description": "Applies all pending Spreadsheet changes.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getActive()",
          "description": "Returns the currently active spreadsheet, ornullif there is none.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
          }
        },
        {
          "parameters": [],
          "name": "getActiveRange()",
          "description": "Returns the selected range in the active sheet, ornullif there is no active range. If\nmultiple ranges are selected this method returns only the last selected range.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getActiveRangeList()",
          "description": "Returns the list of active ranges in the active sheet ornullif there are no ranges\nselected. The active range containing the current highlighted cell is placed last in the list.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
          }
        },
        {
          "parameters": [],
          "name": "getActiveSheet()",
          "description": "Gets the active sheet in a spreadsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [],
          "name": "getActiveSpreadsheet()",
          "description": "Returns the currently active spreadsheet, ornullif there is none.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
          }
        },
        {
          "parameters": [],
          "name": "getCurrentCell()",
          "description": "Returns the current (highlighted) cell that is selected in one of the active ranges in the\nactive sheet ornullif there is no current cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getSelection()",
          "description": "Returns the currentSelectionin the spreadsheet.",
          "return_type": {
            "name": "Selection",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/selection"
          }
        },
        {
          "parameters": [],
          "name": "getUi()",
          "description": "Returns an instance of the spreadsheet's user-interface environment that allows the script to\nadd features like menus, dialogs, and sidebars. A script can only interact with the UI for the\ncurrent instance of an open spreadsheet, and only if the script isboundto the spreadsheet. For more information, see\nthe guides tomenusanddialogs and sidebars.",
          "return_type": {
            "name": "Ui",
            "url": "https://developers.google.com/apps-script/reference/base/ui.html"
          }
        },
        {
          "parameters": [],
          "name": "newCellImage()",
          "description": "Creates a builder for aCellImage.",
          "return_type": {
            "name": "CellImageBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/cell-image-builder"
          }
        },
        {
          "parameters": [],
          "name": "newColor()",
          "description": "Creates a builder for aColor.",
          "return_type": {
            "name": "ColorBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color-builder"
          }
        },
        {
          "parameters": [],
          "name": "newConditionalFormatRule()",
          "description": "Creates a builder for a conditional formatting rule.",
          "return_type": {
            "name": "ConditionalFormatRuleBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder"
          }
        },
        {
          "parameters": [],
          "name": "newDataSourceSpec()",
          "description": "Creates a builder for aDataSourceSpec.",
          "return_type": {
            "name": "DataSourceSpecBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec-builder"
          }
        },
        {
          "parameters": [],
          "name": "newDataValidation()",
          "description": "Creates a builder for a data validation rule.",
          "return_type": {
            "name": "DataValidationBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder"
          }
        },
        {
          "parameters": [],
          "name": "newFilterCriteria()",
          "description": "Creates a builder for aFilterCriteria.",
          "return_type": {
            "name": "FilterCriteriaBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder"
          }
        },
        {
          "parameters": [],
          "name": "newRichTextValue()",
          "description": "Creates a builder for a Rich Text value.",
          "return_type": {
            "name": "RichTextValueBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value-builder"
          }
        },
        {
          "parameters": [],
          "name": "newTextStyle()",
          "description": "Creates a builder for a text style.",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style-builder"
          }
        },
        {
          "parameters": [
            {
              "name": "file",
              "type": {
                "name": "File",
                "url": "https://developers.google.com/apps-script/reference/drive/file.html"
              },
              "description": "The file to open."
            }
          ],
          "name": "open(file)",
          "description": "Opens the spreadsheet that corresponds to the given File object.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
          }
        },
        {
          "parameters": [
            {
              "name": "id",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The unique identifier for the spreadsheet."
            }
          ],
          "name": "openById(id)",
          "description": "Opens the spreadsheet with the given ID. A spreadsheet ID can be extracted from its URL. For\nexample, the spreadsheet ID in the URLhttps://docs.google.com/spreadsheets/d/abc1234567/edit#gid=0is \"abc1234567\".",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
          }
        },
        {
          "parameters": [
            {
              "name": "url",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The URL for the spreadsheet."
            }
          ],
          "name": "openByUrl(url)",
          "description": "Opens the spreadsheet with the given URL. Throws a scripting exception if the URL doesn't exist\nor the user doesn't have permission to access it.",
          "return_type": {
            "name": "Spreadsheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
          }
        },
        {
          "parameters": [
            {
              "name": "range",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The range to be made the active range."
            }
          ],
          "name": "setActiveRange(range)",
          "description": "Sets the specified range as theactive range, with the top\nleft cell in the range as thecurrent cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "rangeList",
              "type": {
                "name": "RangeList",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
              },
              "description": "The list of ranges to select."
            }
          ],
          "name": "setActiveRangeList(rangeList)",
          "description": "Sets the specified list of ranges as theactive ranges. The last\nrange in the list is set as theactive range.",
          "return_type": {
            "name": "RangeList",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list"
          }
        },
        {
          "parameters": [
            {
              "name": "sheet",
              "type": {
                "name": "Sheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
              },
              "description": "The new active sheet."
            }
          ],
          "name": "setActiveSheet(sheet)",
          "description": "Sets the active sheet in a spreadsheet. The Google Sheets UI displays the chosen sheet unless\nthe sheet belongs to a different spreadsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "sheet",
              "type": {
                "name": "Sheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
              },
              "description": "The new active sheet."
            },
            {
              "name": "restoreSelection",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Iftrue, the most recent selection of the new active sheet\n    becomes selected again as the new sheet becomes active; iffalse, the new sheet\n    becomes active without changing the current selection."
            }
          ],
          "name": "setActiveSheet(sheet, restoreSelection)",
          "description": "Sets the active sheet in a spreadsheet, with the option to restore the most recent selection\nwithin that sheet. The Google Sheets UI displays the chosen sheet unless the sheet belongs to a\ndifferent spreadsheet.",
          "return_type": {
            "name": "Sheet",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet"
          }
        },
        {
          "parameters": [
            {
              "name": "newActiveSpreadsheet",
              "type": {
                "name": "Spreadsheet",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet"
              },
              "description": "The Spreadsheet to be made the active spreadsheet."
            }
          ],
          "name": "setActiveSpreadsheet(newActiveSpreadsheet)",
          "description": "Sets the active spreadsheet.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "cell",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The cell to set as the current cell."
            }
          ],
          "name": "setCurrentCell(cell)",
          "description": "Sets the specified cell as thecurrent cell.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class SpreadsheetTheme",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-theme",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "themeColorType",
              "type": {
                "name": "ThemeColorType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color-type"
              },
              "description": "Theme color type."
            }
          ],
          "name": "getConcreteColor(themeColorType)",
          "description": "Returns the concreteColorfor a valid theme color type. Throws exception if the theme\ncolor type is not set in the current theme.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "getFontFamily()",
          "description": "Returns the font family of the theme, ornullif it's anulltheme.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getThemeColors()",
          "description": "Returns a list of all possible theme color types for the current theme.",
          "return_type": {
            "name": "ThemeColorType[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color-type"
          }
        },
        {
          "parameters": [
            {
              "name": "themeColorType",
              "type": {
                "name": "ThemeColorType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color-type"
              },
              "description": "The theme color type."
            },
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The color."
            }
          ],
          "name": "setConcreteColor(themeColorType, color)",
          "description": "Sets the concrete color associated with theThemeColorTypein this color scheme to the\ngiven color.",
          "return_type": {
            "name": "SpreadsheetTheme",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "themeColorType",
              "type": {
                "name": "ThemeColorType",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color-type"
              },
              "description": "The theme color type."
            },
            {
              "name": "red",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The value of red channel."
            },
            {
              "name": "green",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The value of green channel."
            },
            {
              "name": "blue",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The value of blue channel."
            }
          ],
          "name": "setConcreteColor(themeColorType, red, green, blue)",
          "description": "Sets the concrete color associated with theThemeColorTypein this color scheme to the\ngiven color in RGB format.",
          "return_type": {
            "name": "SpreadsheetTheme",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontFamily",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The new theme font family."
            }
          ],
          "name": "setFontFamily(fontFamily)",
          "description": "Sets the font family for the theme.",
          "return_type": {
            "name": "SpreadsheetTheme",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum TextDirection",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-direction",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "LEFT_TO_RIGHT",
          "description": "Left-to-right text direction."
        },
        {
          "name": "RIGHT_TO_LEFT",
          "description": "Right-to-left text direction."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class TextFinder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-finder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "findAll()",
          "description": "Returns all cells matching the search criteria.",
          "return_type": {
            "name": "Range[]",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "findNext()",
          "description": "Returns the next cell matching the search criteria.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "findPrevious()",
          "description": "Returns the previous cell matching the search criteria.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [],
          "name": "getCurrentMatch()",
          "description": "Returns the current cell matching the search criteria.",
          "return_type": {
            "name": "Range",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
          }
        },
        {
          "parameters": [
            {
              "name": "ignoreDiacritics",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether the search considers diacritics."
            }
          ],
          "name": "ignoreDiacritics(ignoreDiacritics)",
          "description": "Iftrue, configures the search to ignore diacritics while matching; otherwise the\nsearch matches diacritics. A diacritic is a sign, such as an accent or cedilla, which when\nwritten above or below a letter indicates a difference in pronunciation from the same letter\nwhen unmarked or differently marked.",
          "return_type": {
            "name": "TextFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "matchCase",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether the matching is case-sensitive."
            }
          ],
          "name": "matchCase(matchCase)",
          "description": "Iftrue, configures the search to match the search text's case exactly, otherwise the\nsearch defaults to case-insensitive matching.",
          "return_type": {
            "name": "TextFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "matchEntireCell",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether the entire cell is matched."
            }
          ],
          "name": "matchEntireCell(matchEntireCell)",
          "description": "Iftrue, configures the search to match the entire contents of a cell; otherwise, the\nsearch defaults to partial matching.",
          "return_type": {
            "name": "TextFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "matchFormulaText",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether the search examines formula text."
            }
          ],
          "name": "matchFormulaText(matchFormulaText)",
          "description": "Iftrue, configures the search to return matches that appear within formula text;\notherwise cells with formulas are considered based on their displayed value.",
          "return_type": {
            "name": "TextFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "replaceText",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text that replaces the text in the matched cells."
            }
          ],
          "name": "replaceAllWith(replaceText)",
          "description": "Replaces all matches with the specified text. Returns the number of occurrences replaced, which\nmay be different from the number of matched cells.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "replaceText",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The text that replaces the content in the currently matched cell."
            }
          ],
          "name": "replaceWith(replaceText)",
          "description": "Replaces the search text in the currently matched cell with the specified text and returns the\nnumber of occurrences replaced.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "startRange",
              "type": {
                "name": "Range",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/range"
              },
              "description": "The cell range after which the search should start."
            }
          ],
          "name": "startFrom(startRange)",
          "description": "Configures the search to start searching immediately after the specified cell range.",
          "return_type": {
            "name": "TextFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "useRegEx",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether to interpret the search string as a regular expression."
            }
          ],
          "name": "useRegularExpression(useRegEx)",
          "description": "Iftrue, configures the search to interpret the search string as a regular expression;\notherwise the search interprets the search string as normal text. For more details on how to\nuse regular expressions, refer to theFind and replace support page.",
          "return_type": {
            "name": "TextFinder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class TextRotation",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-rotation",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getDegrees()",
          "description": "Gets the angle between standard text orientation and the current text orientation. For\nleft-to-right text, positive angles are in the counterclockwise direction. If the text is set\nto stack vertically, this method returns0.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isVertical()",
          "description": "Returnstrueif the text is stacked vertically; returnsfalseotherwise.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class TextStyle",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "copy()",
          "description": "Creates a text style builder initialized with the values of this text style.",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style-builder"
          }
        },
        {
          "parameters": [],
          "name": "getFontFamily()",
          "description": "Gets the font family of the text. Returnsnullif the font family isn't set or the\ncorrespondingRichTextValuehas multiple runs with different font\nfamilies.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getFontSize()",
          "description": "Gets the font size of the text in points. Returnsnullif the font size isn't set or\nthe correspondingRichTextValuehas multiple runs with different font\nsizes.",
          "return_type": {
            "name": "Integer",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getForegroundColorObject()",
          "description": "Gets the font color of the text. Returnsnullif the font color isn't set or the\ncorrespondingRichTextValuehas multiple runs with different font\ncolors.",
          "return_type": {
            "name": "Color",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
          }
        },
        {
          "parameters": [],
          "name": "isBold()",
          "description": "Gets whether or not the text is bold. Returnsnullif bold isn't set or the\ncorrespondingRichTextValuehas multiple runs with different bold\nsettings.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isItalic()",
          "description": "Gets whether or not the cell is italic. Returnsnullif italic isn't set or the\ncorrespondingRichTextValuehas multiple runs with different italic\nsettings.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isStrikethrough()",
          "description": "Gets whether or not the cell has strikethrough. Returnsnullif strikethrough isn't set\nor the correspondingRichTextValuehas multiple runs with different\nstrikethrough settings.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "isUnderline()",
          "description": "Gets whether or not the cell is underlined. Returnsnullif underline isn't set or the\ncorrespondingRichTextValuehas multiple runs with different underline\nsettings.",
          "return_type": {
            "name": "Boolean",
            "url": null
          }
        },
        {
          "parameters": [],
          "name": "getForegroundColor()",
          "description": "Deprecated.Replaced bygetForegroundColorObject()",
          "return_type": {
            "name": "String",
            "url": null
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Class TextStyleBuilder",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style-builder",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "build()",
          "description": "Creates a text style from this builder.",
          "return_type": {
            "name": "TextStyle",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style"
          }
        },
        {
          "parameters": [
            {
              "name": "bold",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not the text is bold."
            }
          ],
          "name": "setBold(bold)",
          "description": "Sets whether or not the text is bold.",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontFamily",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The desired font family."
            }
          ],
          "name": "setFontFamily(fontFamily)",
          "description": "Sets the text font family, such as \"Arial\".",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "fontSize",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The desired font size."
            }
          ],
          "name": "setFontSize(fontSize)",
          "description": "Sets the text font size in points.",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "cssString",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "The desired font color in CSS notation (such as'#ffffff'or'white')."
            }
          ],
          "name": "setForegroundColor(cssString)",
          "description": "Sets the text font color.",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "color",
              "type": {
                "name": "Color",
                "url": "https://developers.google.com/apps-script/reference/spreadsheet/color"
              },
              "description": "The desired font color."
            }
          ],
          "name": "setForegroundColorObject(color)",
          "description": "Sets the text font color.",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "italic",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not the text is italic."
            }
          ],
          "name": "setItalic(italic)",
          "description": "Sets whether or not the text is italic.",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "strikethrough",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not the text has strikethrough."
            }
          ],
          "name": "setStrikethrough(strikethrough)",
          "description": "Sets whether or not the text has strikethrough.",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        },
        {
          "parameters": [
            {
              "name": "underline",
              "type": {
                "name": "Boolean",
                "url": null
              },
              "description": "Whether or not the text is underlined."
            }
          ],
          "name": "setUnderline(underline)",
          "description": "Sets whether or not the text is underlined.",
          "return_type": {
            "name": "TextStyleBuilder",
            "url": "https://developers.google.com/apps-script/reference"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum TextToColumnsDelimiter",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/text-to-columns-delimiter",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "COMMA",
          "description": "\",\"delimiter."
        },
        {
          "name": "SEMICOLON",
          "description": "\";\"delimiter."
        },
        {
          "name": "PERIOD",
          "description": "\".\"delimiter."
        },
        {
          "name": "SPACE",
          "description": "\" \"delimiter."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Class ThemeColor",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getColorType()",
          "description": "Get the type of this color.",
          "return_type": {
            "name": "ColorType",
            "url": "https://developers.google.com/apps-script/reference/base/color-type.html"
          }
        },
        {
          "parameters": [],
          "name": "getThemeColorType()",
          "description": "Gets the theme color type of this color.",
          "return_type": {
            "name": "ThemeColorType",
            "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color-type"
          }
        }
      ],
      "enum_members": [],
      "implementing_classes": []
    },
    {
      "name": "Enum ThemeColorType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "UNSUPPORTED",
          "description": "Represents a theme color that is not supported."
        },
        {
          "name": "TEXT",
          "description": "Represents the text color."
        },
        {
          "name": "BACKGROUND",
          "description": "Represents the color to use for chart's background."
        },
        {
          "name": "ACCENT1",
          "description": "Represents the first accent color."
        },
        {
          "name": "ACCENT2",
          "description": "Represents the second accent color."
        },
        {
          "name": "ACCENT3",
          "description": "Represents the third accent color."
        },
        {
          "name": "ACCENT4",
          "description": "Represents the fourth accent color."
        },
        {
          "name": "ACCENT5",
          "description": "Represents the fifth accent color."
        },
        {
          "name": "ACCENT6",
          "description": "Represents the sixth accent color."
        },
        {
          "name": "HYPERLINK",
          "description": "Represents the color to use for hyperlinks."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum ValueType",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/value-type",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "IMAGE",
          "description": "The value type when the cell contains an image."
        }
      ],
      "implementing_classes": []
    },
    {
      "name": "Enum WrapStrategy",
      "url": "https://developers.google.com/apps-script/reference/spreadsheet/wrap-strategy",
      "description": "",
      "methods": [],
      "enum_members": [
        {
          "name": "WRAP",
          "description": "Wrap lines that are longer than the cell width onto a new line. Single words that are longer\nthan a line are wrapped at the character level."
        },
        {
          "name": "OVERFLOW",
          "description": "Overflow lines into the next cell, so long as that cell is empty. If the next cell over is\nnon-empty, this behaves the same asCLIP."
        },
        {
          "name": "CLIP",
          "description": "Clip lines that are longer than the cell width."
        }
      ],
      "implementing_classes": []
    }
  ]
}