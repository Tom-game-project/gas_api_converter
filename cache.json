{
  "service_name": "cache",
  "url": "https://developers.google.com/apps-script/reference/cache",
  "classes": [
    {
      "name": "Class Cache",
      "url": "https://developers.google.com/apps-script/reference/cache/cache",
      "description": "",
      "methods": [
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the key to look up in the cache"
            }
          ],
          "name": "get(key)",
          "description": "Gets the cached value for the given key, ornullif none is found.",
          "return_type": {
            "name": "String",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "keys",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "the keys to lookup"
            }
          ],
          "name": "getAll(keys)",
          "description": "Returns a JavaScript Object containing all key/value pairs found in the cache for an array of\nkeys.",
          "return_type": {
            "name": "Object",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the key to store the value under"
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the value to be cached"
            }
          ],
          "name": "put(key, value)",
          "description": "Adds a key/value pair to the cache.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the key to store the value under"
            },
            {
              "name": "value",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the value to be cached"
            },
            {
              "name": "expirationInSeconds",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "the maximum time the value remains in the cache, in seconds. The\n    minimum is 1 second and the maximum is 21600 seconds (6 hours)."
            }
          ],
          "name": "put(key, value, expirationInSeconds)",
          "description": "Adds a key/value pair to the cache, with an expiration time (in seconds).",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "values",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "a JavaScript Object containing string keys and values"
            }
          ],
          "name": "putAll(values)",
          "description": "Adds a set of key/value pairs to the cache.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "values",
              "type": {
                "name": "Object",
                "url": null
              },
              "description": "A JavaScript Object containing string keys and values"
            },
            {
              "name": "expirationInSeconds",
              "type": {
                "name": "Integer",
                "url": null
              },
              "description": "The maximum time the value remains in the cache, in seconds The\n    minimum allowed expiration is 1 second, and the maximum allowed expiration is 21600 seconds\n    (6 hours). The default expiration is 600 seconds (10 minutes)."
            }
          ],
          "name": "putAll(values, expirationInSeconds)",
          "description": "Adds a set of key/value pairs to the cache, with an expiration time (in seconds).",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "key",
              "type": {
                "name": "String",
                "url": null
              },
              "description": "the key to remove from the cache"
            }
          ],
          "name": "remove(key)",
          "description": "Removes an entry from the cache using the given key.",
          "return_type": {
            "name": "void",
            "url": null
          }
        },
        {
          "parameters": [
            {
              "name": "keys",
              "type": {
                "name": "String[]",
                "url": null
              },
              "description": "the array of keys to remove"
            }
          ],
          "name": "removeAll(keys)",
          "description": "Removes a set of entries from the cache.",
          "return_type": {
            "name": "void",
            "url": null
          }
        }
      ],
      "enum_members": []
    },
    {
      "name": "Class CacheService",
      "url": "https://developers.google.com/apps-script/reference/cache/cache-service",
      "description": "",
      "methods": [
        {
          "parameters": [],
          "name": "getDocumentCache()",
          "description": "Gets the cache instance scoped to the current document and script. Document caches are specific\nto the current document which contains the script. Use these to store script information that\nis specific to the current document. If this method is called outside of the context of a\ncontaining document (such as from a standalone script or web app), this method returnsnull.",
          "return_type": {
            "name": "Cache",
            "url": "https://developers.google.com/apps-script/reference/cache/cache"
          }
        },
        {
          "parameters": [],
          "name": "getScriptCache()",
          "description": "Gets the cache instance scoped to the script. Script caches are common to all users of the\nscript. Use these to store information that is not specific to the current user.",
          "return_type": {
            "name": "Cache",
            "url": "https://developers.google.com/apps-script/reference/cache/cache"
          }
        },
        {
          "parameters": [],
          "name": "getUserCache()",
          "description": "Gets the cache instance scoped to the current user and script. User caches are specific to the\ncurrent user of the script. Use these to store script information that is specific to the\ncurrent user.",
          "return_type": {
            "name": "Cache",
            "url": "https://developers.google.com/apps-script/reference/cache/cache"
          }
        }
      ],
      "enum_members": []
    }
  ]
}